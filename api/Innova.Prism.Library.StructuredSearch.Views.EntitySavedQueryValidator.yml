### YamlMime:ManagedReference
items:
- uid: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator
  commentId: T:Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator
  id: EntitySavedQueryValidator
  parent: Innova.Prism.Library.StructuredSearch.Views
  children:
  - Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.#ctor
  langs:
  - csharp
  - vb
  name: EntitySavedQueryValidator
  nameWithType: EntitySavedQueryValidator
  fullName: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator
  type: Class
  source:
    id: EntitySavedQueryValidator
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\StructuredSearch\Views\EntitySavedQueryValidator.cs
    startLine: 11
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.StructuredSearch.Views
  syntax:
    content: 'public class EntitySavedQueryValidator : BaseValidator<EntitySavedQuery>, IEnumerable<IValidationRule>, IEnumerable, IEntityValidator<EntitySavedQuery>, IValidator<EntitySavedQuery>, IValidator, IEntityValidator'
    content.vb: Public Class EntitySavedQueryValidator Inherits BaseValidator(Of EntitySavedQuery) Implements IEnumerable(Of IValidationRule), IEnumerable, IEntityValidator(Of EntitySavedQuery), IValidator(Of EntitySavedQuery), IValidator, IEntityValidator
  inheritance:
  - System.Object
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  implements:
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  - System.Collections.IEnumerable
  - Innova.Data.Validation.IEntityValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  - FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  - FluentValidation.IValidator
  - Innova.Data.Validation.IEntityValidator
  inheritedMembers:
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IgnoreProperties
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.InsertRulesets
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UpdateRulesets
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.DeleteRulesets
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.DefaultRuleSet
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateByDefaultRuleset``1({TEntity},System.String)
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}})
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore(System.String)
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}})
  - Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored(System.String)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CreateDescriptor
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}},System.Func{{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{{TElement}}}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleSet(System.String,System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include(FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include``1(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TValidator}})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.GetEnumerator
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.EnsureInstanceNotNull(System.Object)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.PreValidate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RaiseValidationException(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.OnRuleAdded(FluentValidation.IValidationRule{Innova.Data.StructuredSearch.EntitySavedQuery})
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CascadeMode
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ClassLevelCascadeMode
  - FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleLevelCascadeMode
  extensionMethods:
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Data.ExtensionMethods.Batch``1(System.Int32)
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Action{FluentValidation.IValidationRule})
  - System.Collections.IEnumerable.Innova.Data.ExtensionMethods.FastCast``1
  - System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count
  - System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Int32)
  - System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Int32)
- uid: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.#ctor
  commentId: M:Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.#ctor
  id: '#ctor'
  parent: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator
  langs:
  - csharp
  - vb
  name: EntitySavedQueryValidator()
  nameWithType: EntitySavedQueryValidator.EntitySavedQueryValidator()
  fullName: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.EntitySavedQueryValidator()
  type: Constructor
  source:
    id: .ctor
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\StructuredSearch\Views\EntitySavedQueryValidator.cs
    startLine: 13
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.StructuredSearch.Views
  syntax:
    content: public EntitySavedQueryValidator()
    content.vb: Public Sub New()
  overload: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.#ctor*
  nameWithType.vb: EntitySavedQueryValidator.New()
  fullName.vb: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.New()
  name.vb: New()
references:
- uid: Innova.Prism.Library.StructuredSearch.Views
  commentId: N:Innova.Prism.Library.StructuredSearch.Views
  href: Innova.html
  name: Innova.Prism.Library.StructuredSearch.Views
  nameWithType: Innova.Prism.Library.StructuredSearch.Views
  fullName: Innova.Prism.Library.StructuredSearch.Views
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.StructuredSearch
    name: StructuredSearch
    href: Innova.Prism.Library.StructuredSearch.html
  - name: .
  - uid: Innova.Prism.Library.StructuredSearch.Views
    name: Views
    href: Innova.Prism.Library.StructuredSearch.Views.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.StructuredSearch
    name: StructuredSearch
    href: Innova.Prism.Library.StructuredSearch.html
  - name: .
  - uid: Innova.Prism.Library.StructuredSearch.Views
    name: Views
    href: Innova.Prism.Library.StructuredSearch.Views.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  commentId: T:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  parent: FluentValidation
  definition: FluentValidation.AbstractValidator`1
  name: AbstractValidator<EntitySavedQuery>
  nameWithType: AbstractValidator<EntitySavedQuery>
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery)
  name.vb: AbstractValidator(Of EntitySavedQuery)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  commentId: T:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  parent: Innova.Data.Validation
  definition: Innova.Data.Validation.BaseValidator`1
  name: BaseValidator<EntitySavedQuery>
  nameWithType: BaseValidator<EntitySavedQuery>
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>
  nameWithType.vb: BaseValidator(Of EntitySavedQuery)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery)
  name.vb: BaseValidator(Of EntitySavedQuery)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1
    name: BaseValidator
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1
    name: BaseValidator
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  commentId: T:System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IValidationRule>
  nameWithType: IEnumerable<IValidationRule>
  fullName: System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>
  nameWithType.vb: IEnumerable(Of IValidationRule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule)
  name.vb: IEnumerable(Of IValidationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Innova.Data.Validation.IEntityValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  commentId: T:Innova.Data.Validation.IEntityValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  parent: Innova.Data.Validation
  definition: Innova.Data.Validation.IEntityValidator`1
  name: IEntityValidator<EntitySavedQuery>
  nameWithType: IEntityValidator<EntitySavedQuery>
  fullName: Innova.Data.Validation.IEntityValidator<Innova.Data.StructuredSearch.EntitySavedQuery>
  nameWithType.vb: IEntityValidator(Of EntitySavedQuery)
  fullName.vb: Innova.Data.Validation.IEntityValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery)
  name.vb: IEntityValidator(Of EntitySavedQuery)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
- uid: FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  commentId: T:FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  parent: FluentValidation
  definition: FluentValidation.IValidator`1
  name: IValidator<EntitySavedQuery>
  nameWithType: IValidator<EntitySavedQuery>
  fullName: FluentValidation.IValidator<Innova.Data.StructuredSearch.EntitySavedQuery>
  nameWithType.vb: IValidator(Of EntitySavedQuery)
  fullName.vb: FluentValidation.IValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery)
  name.vb: IValidator(Of EntitySavedQuery)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
- uid: FluentValidation.IValidator
  commentId: T:FluentValidation.IValidator
  parent: FluentValidation
  isExternal: true
  name: IValidator
  nameWithType: IValidator
  fullName: FluentValidation.IValidator
- uid: Innova.Data.Validation.IEntityValidator
  commentId: T:Innova.Data.Validation.IEntityValidator
  parent: Innova.Data.Validation
  href: Innova.Data.Validation.IEntityValidator.html
  name: IEntityValidator
  nameWithType: IEntityValidator
  fullName: Innova.Data.Validation.IEntityValidator
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IgnoreProperties
  commentId: P:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IgnoreProperties
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  name: IgnoreProperties
  nameWithType: BaseValidator<EntitySavedQuery>.IgnoreProperties
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.IgnoreProperties
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).IgnoreProperties
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).IgnoreProperties
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.InsertRulesets
  commentId: P:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.InsertRulesets
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.InsertRulesets
  name: InsertRulesets
  nameWithType: BaseValidator<EntitySavedQuery>.InsertRulesets
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.InsertRulesets
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).InsertRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).InsertRulesets
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UpdateRulesets
  commentId: P:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UpdateRulesets
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  name: UpdateRulesets
  nameWithType: BaseValidator<EntitySavedQuery>.UpdateRulesets
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.UpdateRulesets
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).UpdateRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).UpdateRulesets
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.DeleteRulesets
  commentId: P:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.DeleteRulesets
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  name: DeleteRulesets
  nameWithType: BaseValidator<EntitySavedQuery>.DeleteRulesets
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.DeleteRulesets
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).DeleteRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).DeleteRulesets
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.DefaultRuleSet
  commentId: P:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.DefaultRuleSet
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  name: DefaultRuleSet
  nameWithType: BaseValidator<EntitySavedQuery>.DefaultRuleSet
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.DefaultRuleSet
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).DefaultRuleSet
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).DefaultRuleSet
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Validate(EntitySavedQuery, ValidationRuleSetEnum, CancellationToken)
  nameWithType: BaseValidator<EntitySavedQuery>.Validate(EntitySavedQuery, ValidationRuleSetEnum, CancellationToken)
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Validate(Innova.Data.StructuredSearch.EntitySavedQuery, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).Validate(EntitySavedQuery, ValidationRuleSetEnum, CancellationToken)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Validate(Innova.Data.StructuredSearch.EntitySavedQuery, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
  - name: (
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
  - name: (
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateByDefaultRuleset``1({TEntity},System.String)
  commentId: M:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateByDefaultRuleset``1(``0,System.String)
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType: BaseValidator<EntitySavedQuery>.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  name.vb: ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}})
  commentId: M:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: AddPropertyToIgnore<TProperty>(Expression<Func<EntitySavedQuery, TProperty>>)
  nameWithType: BaseValidator<EntitySavedQuery>.AddPropertyToIgnore<TProperty>(Expression<Func<EntitySavedQuery, TProperty>>)
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.AddPropertyToIgnore<TProperty>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TProperty>>)
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).AddPropertyToIgnore(Of TProperty)(Expression(Of Func(Of EntitySavedQuery, TProperty)))
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).AddPropertyToIgnore(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TProperty)))
  name.vb: AddPropertyToIgnore(Of TProperty)(Expression(Of Func(Of EntitySavedQuery, TProperty)))
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
    name: AddPropertyToIgnore
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
    name: AddPropertyToIgnore
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore(System.String)
  commentId: M:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore(System.String)
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddPropertyToIgnore(string)
  nameWithType: BaseValidator<EntitySavedQuery>.AddPropertyToIgnore(string)
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.AddPropertyToIgnore(string)
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).AddPropertyToIgnore(String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).AddPropertyToIgnore(String)
  name.vb: AddPropertyToIgnore(String)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore(System.String)
    name: AddPropertyToIgnore
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.AddPropertyToIgnore(System.String)
    name: AddPropertyToIgnore
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}})
  commentId: M:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: IsPropertyIgnored<TProperty>(Expression<Func<EntitySavedQuery, TProperty>>)
  nameWithType: BaseValidator<EntitySavedQuery>.IsPropertyIgnored<TProperty>(Expression<Func<EntitySavedQuery, TProperty>>)
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.IsPropertyIgnored<TProperty>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TProperty>>)
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).IsPropertyIgnored(Of TProperty)(Expression(Of Func(Of EntitySavedQuery, TProperty)))
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).IsPropertyIgnored(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TProperty)))
  name.vb: IsPropertyIgnored(Of TProperty)(Expression(Of Func(Of EntitySavedQuery, TProperty)))
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
    name: IsPropertyIgnored
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
    name: IsPropertyIgnored
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored(System.String)
  commentId: M:Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored(System.String)
  parent: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsPropertyIgnored(string)
  nameWithType: BaseValidator<EntitySavedQuery>.IsPropertyIgnored(string)
  fullName: Innova.Data.Validation.BaseValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.IsPropertyIgnored(string)
  nameWithType.vb: BaseValidator(Of EntitySavedQuery).IsPropertyIgnored(String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).IsPropertyIgnored(String)
  name.vb: IsPropertyIgnored(String)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored(System.String)
    name: IsPropertyIgnored
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.IsPropertyIgnored(System.String)
    name: IsPropertyIgnored
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Validate(`0)
  name: Validate(EntitySavedQuery)
  nameWithType: AbstractValidator<EntitySavedQuery>.Validate(EntitySavedQuery)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Validate(EntitySavedQuery)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
    name: Validate
    isExternal: true
  - name: (
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(Innova.Data.StructuredSearch.EntitySavedQuery)
    name: Validate
    isExternal: true
  - name: (
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(EntitySavedQuery, CancellationToken)
  nameWithType: AbstractValidator<EntitySavedQuery>.ValidateAsync(EntitySavedQuery, CancellationToken)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).ValidateAsync(EntitySavedQuery, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  name: Validate(ValidationContext<EntitySavedQuery>)
  nameWithType: AbstractValidator<EntitySavedQuery>.Validate(ValidationContext<EntitySavedQuery>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Validate(FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Validate(ValidationContext(Of EntitySavedQuery))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Validate(FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery))
  name.vb: Validate(ValidationContext(Of EntitySavedQuery))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Validate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<EntitySavedQuery>, CancellationToken)
  nameWithType: AbstractValidator<EntitySavedQuery>.ValidateAsync(ValidationContext<EntitySavedQuery>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.ValidateAsync(FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).ValidateAsync(ValidationContext(Of EntitySavedQuery), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).ValidateAsync(FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of EntitySavedQuery), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ValidateAsync(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CreateDescriptor
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<EntitySavedQuery>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<EntitySavedQuery, TProperty>>)
  nameWithType: AbstractValidator<EntitySavedQuery>.RuleFor<TProperty>(Expression<Func<EntitySavedQuery, TProperty>>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TProperty>>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).RuleFor(Of TProperty)(Expression(Of Func(Of EntitySavedQuery, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of EntitySavedQuery, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}},System.Func{{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<EntitySavedQuery, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<EntitySavedQuery>.Transform<TProperty, TTransformed>(Expression<Func<EntitySavedQuery, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of EntitySavedQuery, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of EntitySavedQuery, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0,``1})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<EntitySavedQuery, TProperty>>, Func<EntitySavedQuery, TProperty, TTransformed>)
  nameWithType: AbstractValidator<EntitySavedQuery>.Transform<TProperty, TTransformed>(Expression<Func<EntitySavedQuery, TProperty>>, Func<EntitySavedQuery, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TProperty>>, System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of EntitySavedQuery, TProperty)), Func(Of EntitySavedQuery, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TProperty)), System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of EntitySavedQuery, TProperty)), Func(Of EntitySavedQuery, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Transform``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{{TElement}}}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<EntitySavedQuery, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<EntitySavedQuery>.RuleForEach<TElement>(Expression<Func<EntitySavedQuery, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).RuleForEach(Of TElement)(Expression(Of Func(Of EntitySavedQuery, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of EntitySavedQuery, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<EntitySavedQuery, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<EntitySavedQuery>.TransformForEach<TElement, TTransformed>(Expression<Func<EntitySavedQuery, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of EntitySavedQuery, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of EntitySavedQuery, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0,``1})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<EntitySavedQuery, IEnumerable<TElement>>>, Func<EntitySavedQuery, TElement, TTransformed>)
  nameWithType: AbstractValidator<EntitySavedQuery>.TransformForEach<TElement, TTransformed>(Expression<Func<EntitySavedQuery, IEnumerable<TElement>>>, Func<EntitySavedQuery, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of EntitySavedQuery, IEnumerable(Of TElement))), Func(Of EntitySavedQuery, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of EntitySavedQuery, IEnumerable(Of TElement))), Func(Of EntitySavedQuery, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Collections.Generic.IEnumerable{``0}}},System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleSet(System.String,System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<EntitySavedQuery, bool>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.When(Func<EntitySavedQuery, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.When(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).When(Func(Of EntitySavedQuery, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).When(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, Boolean), System.Action)
  name.vb: When(Func(Of EntitySavedQuery, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, bool>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.When(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.When(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).When(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).When(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), Boolean), System.Action)
  name.vb: When(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.When(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<EntitySavedQuery, bool>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.Unless(Func<EntitySavedQuery, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Unless(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Unless(Func(Of EntitySavedQuery, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Unless(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, Boolean), System.Action)
  name.vb: Unless(Func(Of EntitySavedQuery, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, bool>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.Unless(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Unless(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Unless(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Unless(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), Boolean), System.Action)
  name.vb: Unless(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Unless(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<EntitySavedQuery, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.WhenAsync(Func<EntitySavedQuery, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.WhenAsync(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).WhenAsync(Func(Of EntitySavedQuery, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).WhenAsync(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of EntitySavedQuery, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.WhenAsync(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.WhenAsync(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).WhenAsync(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).WhenAsync(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.WhenAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<EntitySavedQuery, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.UnlessAsync(Func<EntitySavedQuery, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.UnlessAsync(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).UnlessAsync(Func(Of EntitySavedQuery, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).UnlessAsync(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of EntitySavedQuery, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<EntitySavedQuery>.UnlessAsync(Func<EntitySavedQuery, ValidationContext<EntitySavedQuery>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.UnlessAsync(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).UnlessAsync(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).UnlessAsync(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of EntitySavedQuery, ValidationContext(Of EntitySavedQuery), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.UnlessAsync(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include(FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include(FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  name: Include(IValidator<EntitySavedQuery>)
  nameWithType: AbstractValidator<EntitySavedQuery>.Include(IValidator<EntitySavedQuery>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Include(FluentValidation.IValidator<Innova.Data.StructuredSearch.EntitySavedQuery>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Include(IValidator(Of EntitySavedQuery))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Include(FluentValidation.IValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery))
  name.vb: Include(IValidator(Of EntitySavedQuery))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include(FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include(FluentValidation.IValidator{Innova.Data.StructuredSearch.EntitySavedQuery})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include``1(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,{TValidator}})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include``1(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<EntitySavedQuery, TValidator>)
  nameWithType: AbstractValidator<EntitySavedQuery>.Include<TValidator>(Func<EntitySavedQuery, TValidator>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.Include<TValidator>(System.Func<Innova.Data.StructuredSearch.EntitySavedQuery, TValidator>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).Include(Of TValidator)(Func(Of EntitySavedQuery, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).Include(Of TValidator)(System.Func(Of Innova.Data.StructuredSearch.EntitySavedQuery, TValidator))
  name.vb: Include(Of TValidator)(Func(Of EntitySavedQuery, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include``1(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.Include``1(System.Func{Innova.Data.StructuredSearch.EntitySavedQuery,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.GetEnumerator
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<EntitySavedQuery>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.EnsureInstanceNotNull(System.Object)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<EntitySavedQuery>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.PreValidate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.PreValidate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  name: PreValidate(ValidationContext<EntitySavedQuery>, ValidationResult)
  nameWithType: AbstractValidator<EntitySavedQuery>.PreValidate(ValidationContext<EntitySavedQuery>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.PreValidate(FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).PreValidate(ValidationContext(Of EntitySavedQuery), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).PreValidate(FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of EntitySavedQuery), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.PreValidate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.PreValidate(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RaiseValidationException(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RaiseValidationException(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  name: RaiseValidationException(ValidationContext<EntitySavedQuery>, ValidationResult)
  nameWithType: AbstractValidator<EntitySavedQuery>.RaiseValidationException(ValidationContext<EntitySavedQuery>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.RaiseValidationException(FluentValidation.ValidationContext<Innova.Data.StructuredSearch.EntitySavedQuery>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).RaiseValidationException(ValidationContext(Of EntitySavedQuery), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).RaiseValidationException(FluentValidation.ValidationContext(Of Innova.Data.StructuredSearch.EntitySavedQuery), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of EntitySavedQuery), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RaiseValidationException(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RaiseValidationException(FluentValidation.ValidationContext{Innova.Data.StructuredSearch.EntitySavedQuery},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.OnRuleAdded(FluentValidation.IValidationRule{Innova.Data.StructuredSearch.EntitySavedQuery})
  commentId: M:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.OnRuleAdded(FluentValidation.IValidationRule{Innova.Data.StructuredSearch.EntitySavedQuery})
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  name: OnRuleAdded(IValidationRule<EntitySavedQuery>)
  nameWithType: AbstractValidator<EntitySavedQuery>.OnRuleAdded(IValidationRule<EntitySavedQuery>)
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.OnRuleAdded(FluentValidation.IValidationRule<Innova.Data.StructuredSearch.EntitySavedQuery>)
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).OnRuleAdded(IValidationRule(Of EntitySavedQuery))
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).OnRuleAdded(FluentValidation.IValidationRule(Of Innova.Data.StructuredSearch.EntitySavedQuery))
  name.vb: OnRuleAdded(IValidationRule(Of EntitySavedQuery))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.OnRuleAdded(FluentValidation.IValidationRule{Innova.Data.StructuredSearch.EntitySavedQuery})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.OnRuleAdded(FluentValidation.IValidationRule{Innova.Data.StructuredSearch.EntitySavedQuery})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.EntitySavedQuery
    name: EntitySavedQuery
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CascadeMode
  commentId: P:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.CascadeMode
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.CascadeMode
  name: CascadeMode
  nameWithType: AbstractValidator<EntitySavedQuery>.CascadeMode
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.CascadeMode
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).CascadeMode
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.ClassLevelCascadeMode
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<EntitySavedQuery>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}.RuleLevelCascadeMode
  parent: FluentValidation.AbstractValidator{Innova.Data.StructuredSearch.EntitySavedQuery}
  definition: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<EntitySavedQuery>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<Innova.Data.StructuredSearch.EntitySavedQuery>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of EntitySavedQuery).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Innova.Data.StructuredSearch.EntitySavedQuery).RuleLevelCascadeMode
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Data.ExtensionMethods.Batch``1(System.Int32)
  commentId: M:Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: Innova.Data.ExtensionMethods
  definition: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  name: Batch<IValidationRule>(IEnumerable<IValidationRule>, int)
  nameWithType: ExtensionMethods.Batch<IValidationRule>(IEnumerable<IValidationRule>, int)
  fullName: Innova.Data.ExtensionMethods.Batch<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>, int)
  nameWithType.vb: ExtensionMethods.Batch(Of IValidationRule)(IEnumerable(Of IValidationRule), Integer)
  fullName.vb: Innova.Data.ExtensionMethods.Batch(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule), Integer)
  name.vb: Batch(Of IValidationRule)(IEnumerable(Of IValidationRule), Integer)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  name: AsBindingList<IValidationRule>(IEnumerable<IValidationRule>)
  nameWithType: ExtensionMethods.AsBindingList<IValidationRule>(IEnumerable<IValidationRule>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>)
  nameWithType.vb: ExtensionMethods.AsBindingList(Of IValidationRule)(IEnumerable(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule))
  name.vb: AsBindingList(Of IValidationRule)(IEnumerable(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  nameWithType: ExtensionMethods.ToObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>)
  nameWithType.vb: ExtensionMethods.ToObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule))
  name.vb: ToObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToReadOnlyObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  nameWithType: ExtensionMethods.ToReadOnlyObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>)
  nameWithType.vb: ExtensionMethods.ToReadOnlyObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule))
  name.vb: ToReadOnlyObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Action{FluentValidation.IValidationRule})
  commentId: M:Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: Innova.Prism.Library.Extensions.CollectionExtensions
  definition: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  name: ForEach<IValidationRule>(IEnumerable<IValidationRule>, Action<IValidationRule>)
  nameWithType: CollectionExtensions.ForEach<IValidationRule>(IEnumerable<IValidationRule>, Action<IValidationRule>)
  fullName: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>, System.Action<FluentValidation.IValidationRule>)
  nameWithType.vb: CollectionExtensions.ForEach(Of IValidationRule)(IEnumerable(Of IValidationRule), Action(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule), System.Action(Of FluentValidation.IValidationRule))
  name.vb: ForEach(Of IValidationRule)(IEnumerable(Of IValidationRule), Action(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Action{FluentValidation.IValidationRule})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Action{FluentValidation.IValidationRule})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.IEnumerable.Innova.Data.ExtensionMethods.FastCast``1
  commentId: M:Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  parent: Innova.Data.ExtensionMethods
  definition: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  name: FastCast<T>(IEnumerable)
  nameWithType: ExtensionMethods.FastCast<T>(IEnumerable)
  fullName: Innova.Data.ExtensionMethods.FastCast<T>(System.Collections.IEnumerable)
  nameWithType.vb: ExtensionMethods.FastCast(Of T)(IEnumerable)
  fullName.vb: Innova.Data.ExtensionMethods.FastCast(Of T)(System.Collections.IEnumerable)
  name.vb: FastCast(Of T)(IEnumerable)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  name: Count(IEnumerable)
  nameWithType: ExtensionMethods.Count(IEnumerable)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  name: Skip(IEnumerable, int)
  nameWithType: ExtensionMethods.Skip(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Skip(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, Integer)
  name.vb: Skip(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  name: Take(IEnumerable, int)
  nameWithType: ExtensionMethods.Take(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Take(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, Integer)
  name.vb: Take(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FluentValidation.AbstractValidator`1
  commentId: T:FluentValidation.AbstractValidator`1
  isExternal: true
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FluentValidation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FluentValidation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: Innova.Data.Validation.BaseValidator`1
  commentId: T:Innova.Data.Validation.BaseValidator`1
  href: Innova.Data.Validation.BaseValidator-1.html
  name: BaseValidator<T>
  nameWithType: BaseValidator<T>
  fullName: Innova.Data.Validation.BaseValidator<T>
  nameWithType.vb: BaseValidator(Of T)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T)
  name.vb: BaseValidator(Of T)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1
    name: BaseValidator
    href: Innova.Data.Validation.BaseValidator-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1
    name: BaseValidator
    href: Innova.Data.Validation.BaseValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Validation
  commentId: N:Innova.Data.Validation
  href: Innova.html
  name: Innova.Data.Validation
  nameWithType: Innova.Data.Validation
  fullName: Innova.Data.Validation
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Validation
    name: Validation
    href: Innova.Data.Validation.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Validation
    name: Validation
    href: Innova.Data.Validation.html
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Innova.Data.Validation.IEntityValidator`1
  commentId: T:Innova.Data.Validation.IEntityValidator`1
  href: Innova.Data.Validation.IEntityValidator-1.html
  name: IEntityValidator<T>
  nameWithType: IEntityValidator<T>
  fullName: Innova.Data.Validation.IEntityValidator<T>
  nameWithType.vb: IEntityValidator(Of T)
  fullName.vb: Innova.Data.Validation.IEntityValidator(Of T)
  name.vb: IEntityValidator(Of T)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
    href: Innova.Data.Validation.IEntityValidator-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
    href: Innova.Data.Validation.IEntityValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation.IValidator`1
  commentId: T:FluentValidation.IValidator`1
  isExternal: true
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FluentValidation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FluentValidation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  commentId: P:Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  name: IgnoreProperties
  nameWithType: BaseValidator<T>.IgnoreProperties
  fullName: Innova.Data.Validation.BaseValidator<T>.IgnoreProperties
  nameWithType.vb: BaseValidator(Of T).IgnoreProperties
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IgnoreProperties
- uid: Innova.Data.Validation.BaseValidator`1.InsertRulesets
  commentId: P:Innova.Data.Validation.BaseValidator`1.InsertRulesets
  name: InsertRulesets
  nameWithType: BaseValidator<T>.InsertRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.InsertRulesets
  nameWithType.vb: BaseValidator(Of T).InsertRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).InsertRulesets
- uid: Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  commentId: P:Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  name: UpdateRulesets
  nameWithType: BaseValidator<T>.UpdateRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.UpdateRulesets
  nameWithType.vb: BaseValidator(Of T).UpdateRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).UpdateRulesets
- uid: Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  commentId: P:Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  name: DeleteRulesets
  nameWithType: BaseValidator<T>.DeleteRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.DeleteRulesets
  nameWithType.vb: BaseValidator(Of T).DeleteRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).DeleteRulesets
- uid: Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  commentId: P:Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  name: DefaultRuleSet
  nameWithType: BaseValidator<T>.DefaultRuleSet
  fullName: Innova.Data.Validation.BaseValidator<T>.DefaultRuleSet
  nameWithType.vb: BaseValidator(Of T).DefaultRuleSet
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).DefaultRuleSet
- uid: Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Validate(T, ValidationRuleSetEnum, CancellationToken)
  nameWithType: BaseValidator<T>.Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName: Innova.Data.Validation.BaseValidator<T>.Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  nameWithType.vb: BaseValidator(Of T).Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
  commentId: M:Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType: BaseValidator<T>.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  fullName: Innova.Data.Validation.BaseValidator<T>.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType.vb: BaseValidator(Of T).ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  name.vb: ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: AddPropertyToIgnore<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: BaseValidator<T>.AddPropertyToIgnore<TProperty>(Expression<Func<T, TProperty>>)
  fullName: Innova.Data.Validation.BaseValidator<T>.AddPropertyToIgnore<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: BaseValidator(Of T).AddPropertyToIgnore(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).AddPropertyToIgnore(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: AddPropertyToIgnore(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: AddPropertyToIgnore
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: AddPropertyToIgnore
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
  commentId: M:Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddPropertyToIgnore(string)
  nameWithType: BaseValidator<T>.AddPropertyToIgnore(string)
  fullName: Innova.Data.Validation.BaseValidator<T>.AddPropertyToIgnore(string)
  nameWithType.vb: BaseValidator(Of T).AddPropertyToIgnore(String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).AddPropertyToIgnore(String)
  name.vb: AddPropertyToIgnore(String)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
    name: AddPropertyToIgnore
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
    name: AddPropertyToIgnore
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: IsPropertyIgnored<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: BaseValidator<T>.IsPropertyIgnored<TProperty>(Expression<Func<T, TProperty>>)
  fullName: Innova.Data.Validation.BaseValidator<T>.IsPropertyIgnored<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: BaseValidator(Of T).IsPropertyIgnored(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IsPropertyIgnored(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: IsPropertyIgnored(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: IsPropertyIgnored
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: IsPropertyIgnored
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
  commentId: M:Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsPropertyIgnored(string)
  nameWithType: BaseValidator<T>.IsPropertyIgnored(string)
  fullName: Innova.Data.Validation.BaseValidator<T>.IsPropertyIgnored(string)
  nameWithType.vb: BaseValidator(Of T).IsPropertyIgnored(String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IsPropertyIgnored(String)
  name.vb: IsPropertyIgnored(String)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
    name: IsPropertyIgnored
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
    name: IsPropertyIgnored
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(`0)
  commentId: M:FluentValidation.AbstractValidator`1.Validate(`0)
  isExternal: true
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FluentValidation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  isExternal: true
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FluentValidation.AbstractValidator<T>.Validate(FluentValidation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(FluentValidation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(FluentValidation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator`1.CreateDescriptor
  isExternal: true
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<T, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of T, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<T, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of T, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<T>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<T>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  isExternal: true
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FluentValidation.AbstractValidator<T>.Include(FluentValidation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(FluentValidation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  commentId: M:FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FluentValidation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  isExternal: true
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<T>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<T>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.PreValidate(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).PreValidate(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.RaiseValidationException(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RaiseValidationException(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  commentId: M:FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  isExternal: true
  name: OnRuleAdded(IValidationRule<T>)
  nameWithType: AbstractValidator<T>.OnRuleAdded(IValidationRule<T>)
  fullName: FluentValidation.AbstractValidator<T>.OnRuleAdded(FluentValidation.IValidationRule<T>)
  nameWithType.vb: AbstractValidator(Of T).OnRuleAdded(IValidationRule(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).OnRuleAdded(FluentValidation.IValidationRule(Of T))
  name.vb: OnRuleAdded(IValidationRule(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.CascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.CascadeMode
  isExternal: true
  name: CascadeMode
  nameWithType: AbstractValidator<T>.CascadeMode
  fullName: FluentValidation.AbstractValidator<T>.CascadeMode
  nameWithType.vb: AbstractValidator(Of T).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).CascadeMode
- uid: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  isExternal: true
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<T>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  isExternal: true
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<T>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleLevelCascadeMode
- uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  name: Batch<T>(IEnumerable<T>, int)
  nameWithType: ExtensionMethods.Batch<T>(IEnumerable<T>, int)
  fullName: Innova.Data.ExtensionMethods.Batch<T>(System.Collections.Generic.IEnumerable<T>, int)
  nameWithType.vb: ExtensionMethods.Batch(Of T)(IEnumerable(Of T), Integer)
  fullName.vb: Innova.Data.ExtensionMethods.Batch(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer)
  name.vb: Batch(Of T)(IEnumerable(Of T), Integer)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Data.ExtensionMethods
  commentId: T:Innova.Data.ExtensionMethods
  parent: Innova.Data
  href: Innova.Data.ExtensionMethods.html
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Innova.Data.ExtensionMethods
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  name: AsBindingList<T>(IEnumerable<T>)
  nameWithType: ExtensionMethods.AsBindingList<T>(IEnumerable<T>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExtensionMethods.AsBindingList(Of T)(IEnumerable(Of T))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AsBindingList(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  commentId: T:Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  parent: Innova.Prism.Library.ExtensionMethods
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.html
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToObservableCollection<T>(IEnumerable<T>)
  nameWithType: ExtensionMethods.ToObservableCollection<T>(IEnumerable<T>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExtensionMethods.ToObservableCollection(Of T)(IEnumerable(Of T))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToObservableCollection(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToReadOnlyObservableCollection<T>(IEnumerable<T>)
  nameWithType: ExtensionMethods.ToReadOnlyObservableCollection<T>(IEnumerable<T>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExtensionMethods.ToReadOnlyObservableCollection(Of T)(IEnumerable(Of T))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToReadOnlyObservableCollection(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: CollectionExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: CollectionExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.Extensions.CollectionExtensions
  commentId: T:Innova.Prism.Library.Extensions.CollectionExtensions
  parent: Innova.Prism.Library.Extensions
  href: Innova.Prism.Library.Extensions.CollectionExtensions.html
  name: CollectionExtensions
  nameWithType: CollectionExtensions
  fullName: Innova.Prism.Library.Extensions.CollectionExtensions
- uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  commentId: M:Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  isExternal: true
  href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  name: FastCast<T>(IEnumerable)
  nameWithType: ExtensionMethods.FastCast<T>(IEnumerable)
  fullName: Innova.Data.ExtensionMethods.FastCast<T>(System.Collections.IEnumerable)
  nameWithType.vb: ExtensionMethods.FastCast(Of T)(IEnumerable)
  fullName.vb: Innova.Data.ExtensionMethods.FastCast(Of T)(System.Collections.IEnumerable)
  name.vb: FastCast(Of T)(IEnumerable)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  name: Count(IEnumerable)
  nameWithType: ExtensionMethods.Count(IEnumerable)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  name: Skip(IEnumerable, int)
  nameWithType: ExtensionMethods.Skip(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Skip(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, Integer)
  name.vb: Skip(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  name: Take(IEnumerable, int)
  nameWithType: ExtensionMethods.Take(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Take(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, Integer)
  name.vb: Take(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Data
  commentId: N:Innova.Data
  href: Innova.html
  name: Innova.Data
  nameWithType: Innova.Data
  fullName: Innova.Data
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
- uid: Innova.Prism.Library.ExtensionMethods
  commentId: N:Innova.Prism.Library.ExtensionMethods
  href: Innova.html
  name: Innova.Prism.Library.ExtensionMethods
  nameWithType: Innova.Prism.Library.ExtensionMethods
  fullName: Innova.Prism.Library.ExtensionMethods
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.ExtensionMethods
    name: ExtensionMethods
    href: Innova.Prism.Library.ExtensionMethods.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.ExtensionMethods
    name: ExtensionMethods
    href: Innova.Prism.Library.ExtensionMethods.html
- uid: Innova.Prism.Library.Extensions
  commentId: N:Innova.Prism.Library.Extensions
  href: Innova.html
  name: Innova.Prism.Library.Extensions
  nameWithType: Innova.Prism.Library.Extensions
  fullName: Innova.Prism.Library.Extensions
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Extensions
    name: Extensions
    href: Innova.Prism.Library.Extensions.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Extensions
    name: Extensions
    href: Innova.Prism.Library.Extensions.html
- uid: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.#ctor*
  commentId: Overload:Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.#ctor
  href: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.-ctor.html#Innova_Prism_Library_StructuredSearch_Views_EntitySavedQueryValidator__ctor
  name: EntitySavedQueryValidator
  nameWithType: EntitySavedQueryValidator.EntitySavedQueryValidator
  fullName: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.EntitySavedQueryValidator
  nameWithType.vb: EntitySavedQueryValidator.New
  fullName.vb: Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator.New
  name.vb: New
memberLayout: SeparatePages
