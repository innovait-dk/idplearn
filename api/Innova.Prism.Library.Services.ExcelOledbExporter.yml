### YamlMime:ManagedReference
items:
- uid: Innova.Prism.Library.Services.ExcelOledbExporter
  commentId: T:Innova.Prism.Library.Services.ExcelOledbExporter
  id: ExcelOledbExporter
  parent: Innova.Prism.Library.Services
  children:
  - Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync(System.Data.DataTable,System.String)
  - Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed
  langs:
  - csharp
  - vb
  name: ExcelOledbExporter
  nameWithType: ExcelOledbExporter
  fullName: Innova.Prism.Library.Services.ExcelOledbExporter
  type: Class
  source:
    id: ExcelOledbExporter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\Services\ExcelOledbExporter.cs
    startLine: 18
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.Services
  summary: Provides functionality to export a DataTable to an Excel file using OleDb.
  example: []
  syntax:
    content: public static class ExcelOledbExporter
    content.vb: Public Module ExcelOledbExporter
  inheritance:
  - System.Object
- uid: Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed
  commentId: M:Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed
  id: IsOledb12Installed
  parent: Innova.Prism.Library.Services.ExcelOledbExporter
  langs:
  - csharp
  - vb
  name: IsOledb12Installed()
  nameWithType: ExcelOledbExporter.IsOledb12Installed()
  fullName: Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed()
  type: Method
  source:
    id: IsOledb12Installed
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\Services\ExcelOledbExporter.cs
    startLine: 50
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.Services
  summary: Checks if the OLE DB 12.0 driver is installed.
  example: []
  syntax:
    content: public static bool IsOledb12Installed()
    return:
      type: System.Boolean
      description: True if the OLE DB 12.0 driver is installed, otherwise false.
    content.vb: Public Shared Function IsOledb12Installed() As Boolean
  overload: Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed*
- uid: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync(System.Data.DataTable,System.String)
  commentId: M:Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync(System.Data.DataTable,System.String)
  id: ExportToExcelOleDbAsync(System.Data.DataTable,System.String)
  parent: Innova.Prism.Library.Services.ExcelOledbExporter
  langs:
  - csharp
  - vb
  name: ExportToExcelOleDbAsync(DataTable, string)
  nameWithType: ExcelOledbExporter.ExportToExcelOleDbAsync(DataTable, string)
  fullName: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync(System.Data.DataTable, string)
  type: Method
  source:
    id: ExportToExcelOleDbAsync
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\Services\ExcelOledbExporter.cs
    startLine: 64
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.Services
  summary: Exports the specified DataTable to an Excel file asynchronously.
  example: []
  syntax:
    content: public static Task<bool> ExportToExcelOleDbAsync(DataTable dataTable, string fileName)
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: The DataTable to export.
    - id: fileName
      type: System.String
      description: The name of the Excel file.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the export is successful, otherwise false.
    content.vb: Public Shared Function ExportToExcelOleDbAsync(dataTable As DataTable, fileName As String) As Task(Of Boolean)
  overload: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync*
  nameWithType.vb: ExcelOledbExporter.ExportToExcelOleDbAsync(DataTable, String)
  fullName.vb: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync(System.Data.DataTable, String)
  name.vb: ExportToExcelOleDbAsync(DataTable, String)
references:
- uid: Innova.Prism.Library.Services
  commentId: N:Innova.Prism.Library.Services
  href: Innova.html
  name: Innova.Prism.Library.Services
  nameWithType: Innova.Prism.Library.Services
  fullName: Innova.Prism.Library.Services
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Services
    name: Services
    href: Innova.Prism.Library.Services.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Services
    name: Services
    href: Innova.Prism.Library.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed*
  commentId: Overload:Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed
  href: Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed.html#Innova_Prism_Library_Services_ExcelOledbExporter_IsOledb12Installed
  name: IsOledb12Installed
  nameWithType: ExcelOledbExporter.IsOledb12Installed
  fullName: Innova.Prism.Library.Services.ExcelOledbExporter.IsOledb12Installed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync*
  commentId: Overload:Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync
  href: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync.html#Innova_Prism_Library_Services_ExcelOledbExporter_ExportToExcelOleDbAsync_System_Data_DataTable_System_String_
  name: ExportToExcelOleDbAsync
  nameWithType: ExcelOledbExporter.ExportToExcelOleDbAsync
  fullName: Innova.Prism.Library.Services.ExcelOledbExporter.ExportToExcelOleDbAsync
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
memberLayout: SeparatePages
