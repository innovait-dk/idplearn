### YamlMime:ManagedReference
items:
- uid: Innova.Data.Entity.IEntityServiceExtensions
  commentId: T:Innova.Data.Entity.IEntityServiceExtensions
  id: IEntityServiceExtensions
  parent: Innova.Data.Entity
  children:
  - Innova.Data.Entity.IEntityServiceExtensions.Count``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Count``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Create``1(Innova.Data.Entity.IEntityService{``0},Innova.Data.Entity.IPropertyValues,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Delete``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Delete``2(Innova.Data.Entity.IShowEntityService{``0,``1},``1,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Exists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.GetList``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.GetList``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Insert``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Insert``2(Innova.Data.Entity.IInsertEntityService{``0,``1},``1,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Insert``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.NotExists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Update``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Update``2(Innova.Data.Entity.IEditEntityService{``0,``1},``1,System.Threading.CancellationToken)
  - Innova.Data.Entity.IEntityServiceExtensions.Update``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IEntityServiceExtensions
  nameWithType: IEntityServiceExtensions
  fullName: Innova.Data.Entity.IEntityServiceExtensions
  type: Class
  source:
    id: IEntityServiceExtensions
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 14
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Extension methods for IEntityService.
  example: []
  syntax:
    content: public static class IEntityServiceExtensions
    content.vb: Public Module IEntityServiceExtensions
  inheritance:
  - System.Object
- uid: Innova.Data.Entity.IEntityServiceExtensions.Delete``2(Innova.Data.Entity.IShowEntityService{``0,``1},``1,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Delete``2(Innova.Data.Entity.IShowEntityService{``0,``1},``1,System.Threading.CancellationToken)
  id: Delete``2(Innova.Data.Entity.IShowEntityService{``0,``1},``1,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Delete<T, TShow>(IShowEntityService<T, TShow>, TShow, CancellationToken)
  nameWithType: IEntityServiceExtensions.Delete<T, TShow>(IShowEntityService<T, TShow>, TShow, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Delete<T, TShow>(Innova.Data.Entity.IShowEntityService<T, TShow>, TShow, System.Threading.CancellationToken)
  type: Method
  source:
    id: Delete
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 27
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Deletes a single entity of type TShow from the IShowEntityService.
  example: []
  syntax:
    content: 'public static Task Delete<T, TShow>(this IShowEntityService<T, TShow> entityService, TShow entity, CancellationToken cancellationToken = default) where T : class where TShow : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IShowEntityService{{T},{TShow}}
      description: The IShowEntityService instance.
    - id: entity
      type: '{TShow}'
      description: The entity to delete.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TShow
      description: The type of the entity to show.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Delete(Of T As Class, TShow As Class)(entityService As IShowEntityService(Of T, TShow), entity As TShow, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innova.Data.Entity.IEntityServiceExtensions.Delete*
  nameWithType.vb: IEntityServiceExtensions.Delete(Of T, TShow)(IShowEntityService(Of T, TShow), TShow, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Delete(Of T, TShow)(Innova.Data.Entity.IShowEntityService(Of T, TShow), TShow, System.Threading.CancellationToken)
  name.vb: Delete(Of T, TShow)(IShowEntityService(Of T, TShow), TShow, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Update``2(Innova.Data.Entity.IEditEntityService{``0,``1},``1,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Update``2(Innova.Data.Entity.IEditEntityService{``0,``1},``1,System.Threading.CancellationToken)
  id: Update``2(Innova.Data.Entity.IEditEntityService{``0,``1},``1,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Update<T, TEdit>(IEditEntityService<T, TEdit>, TEdit, CancellationToken)
  nameWithType: IEntityServiceExtensions.Update<T, TEdit>(IEditEntityService<T, TEdit>, TEdit, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Update<T, TEdit>(Innova.Data.Entity.IEditEntityService<T, TEdit>, TEdit, System.Threading.CancellationToken)
  type: Method
  source:
    id: Update
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 43
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Updates a single entity of type TEdit using the IEditEntityService.
  example: []
  syntax:
    content: 'public static Task<List<PrimaryKeys<T>>> Update<T, TEdit>(this IEditEntityService<T, TEdit> entityService, TEdit entity, CancellationToken cancellationToken = default) where T : class where TEdit : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEditEntityService{{T},{TEdit}}
      description: The IEditEntityService instance.
    - id: entity
      type: '{TEdit}'
      description: The entity to update.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TEdit
      description: The type of the entity to edit.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Update(Of T As Class, TEdit As Class)(entityService As IEditEntityService(Of T, TEdit), entity As TEdit, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of PrimaryKeys(Of T)))
  overload: Innova.Data.Entity.IEntityServiceExtensions.Update*
  nameWithType.vb: IEntityServiceExtensions.Update(Of T, TEdit)(IEditEntityService(Of T, TEdit), TEdit, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Update(Of T, TEdit)(Innova.Data.Entity.IEditEntityService(Of T, TEdit), TEdit, System.Threading.CancellationToken)
  name.vb: Update(Of T, TEdit)(IEditEntityService(Of T, TEdit), TEdit, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Update``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Update``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  id: Update``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Update<T, TList>(IListEntityService<T, TList>, TList, CancellationToken)
  nameWithType: IEntityServiceExtensions.Update<T, TList>(IListEntityService<T, TList>, TList, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Update<T, TList>(Innova.Data.Entity.IListEntityService<T, TList>, TList, System.Threading.CancellationToken)
  type: Method
  source:
    id: Update
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 59
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Updates a single entity of type TList using the IListEntityService.
  example: []
  syntax:
    content: 'public static Task<List<PrimaryKeys<T>>> Update<T, TList>(this IListEntityService<T, TList> entityService, TList entity, CancellationToken cancellationToken = default) where T : class where TList : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IListEntityService{{T},{TList}}
      description: The IListEntityService instance.
    - id: entity
      type: '{TList}'
      description: The entity to update.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TList
      description: The type of the entity in the list.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Update(Of T As Class, TList As Class)(entityService As IListEntityService(Of T, TList), entity As TList, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of PrimaryKeys(Of T)))
  overload: Innova.Data.Entity.IEntityServiceExtensions.Update*
  nameWithType.vb: IEntityServiceExtensions.Update(Of T, TList)(IListEntityService(Of T, TList), TList, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Update(Of T, TList)(Innova.Data.Entity.IListEntityService(Of T, TList), TList, System.Threading.CancellationToken)
  name.vb: Update(Of T, TList)(IListEntityService(Of T, TList), TList, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Delete``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Delete``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  id: Delete``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Delete<T, TList>(IListEntityService<T, TList>, TList, CancellationToken)
  nameWithType: IEntityServiceExtensions.Delete<T, TList>(IListEntityService<T, TList>, TList, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Delete<T, TList>(Innova.Data.Entity.IListEntityService<T, TList>, TList, System.Threading.CancellationToken)
  type: Method
  source:
    id: Delete
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 73
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Deletes a single entity of type TList from the IListEntityService.
  example: []
  syntax:
    content: 'public static Task Delete<T, TList>(this IListEntityService<T, TList> entityService, TList entity, CancellationToken cancellationToken = default) where T : class where TList : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IListEntityService{{T},{TList}}
      description: The IListEntityService instance.
    - id: entity
      type: '{TList}'
      description: The entity to delete.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TList
      description: The type of the entity in the list.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Delete(Of T As Class, TList As Class)(entityService As IListEntityService(Of T, TList), entity As TList, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innova.Data.Entity.IEntityServiceExtensions.Delete*
  nameWithType.vb: IEntityServiceExtensions.Delete(Of T, TList)(IListEntityService(Of T, TList), TList, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Delete(Of T, TList)(Innova.Data.Entity.IListEntityService(Of T, TList), TList, System.Threading.CancellationToken)
  name.vb: Delete(Of T, TList)(IListEntityService(Of T, TList), TList, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Insert``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Insert``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  id: Insert``2(Innova.Data.Entity.IListEntityService{``0,``1},``1,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Insert<T, TList>(IListEntityService<T, TList>, TList, CancellationToken)
  nameWithType: IEntityServiceExtensions.Insert<T, TList>(IListEntityService<T, TList>, TList, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Insert<T, TList>(Innova.Data.Entity.IListEntityService<T, TList>, TList, System.Threading.CancellationToken)
  type: Method
  source:
    id: Insert
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 87
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Inserts a single entity of type TList into the IListEntityService.
  example: []
  syntax:
    content: 'public static Task<List<PrimaryKeys<T>>> Insert<T, TList>(this IListEntityService<T, TList> entityService, TList entity, CancellationToken cancellationToken = default) where T : class where TList : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IListEntityService{{T},{TList}}
      description: The IListEntityService instance.
    - id: entity
      type: '{TList}'
      description: The entity to insert.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TList
      description: The type of the entity in the list.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Insert(Of T As Class, TList As Class)(entityService As IListEntityService(Of T, TList), entity As TList, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of PrimaryKeys(Of T)))
  overload: Innova.Data.Entity.IEntityServiceExtensions.Insert*
  nameWithType.vb: IEntityServiceExtensions.Insert(Of T, TList)(IListEntityService(Of T, TList), TList, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Insert(Of T, TList)(Innova.Data.Entity.IListEntityService(Of T, TList), TList, System.Threading.CancellationToken)
  name.vb: Insert(Of T, TList)(IListEntityService(Of T, TList), TList, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Insert``2(Innova.Data.Entity.IInsertEntityService{``0,``1},``1,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Insert``2(Innova.Data.Entity.IInsertEntityService{``0,``1},``1,System.Threading.CancellationToken)
  id: Insert``2(Innova.Data.Entity.IInsertEntityService{``0,``1},``1,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Insert<T, TInsert>(IInsertEntityService<T, TInsert>, TInsert, CancellationToken)
  nameWithType: IEntityServiceExtensions.Insert<T, TInsert>(IInsertEntityService<T, TInsert>, TInsert, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Insert<T, TInsert>(Innova.Data.Entity.IInsertEntityService<T, TInsert>, TInsert, System.Threading.CancellationToken)
  type: Method
  source:
    id: Insert
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 103
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Inserts a single entity of type TInsert into the IInsertEntityService.
  example: []
  syntax:
    content: 'public static Task<List<PrimaryKeys<T>>> Insert<T, TInsert>(this IInsertEntityService<T, TInsert> entityService, TInsert entity, CancellationToken cancellationToken = default) where T : class where TInsert : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IInsertEntityService{{T},{TInsert}}
      description: The IInsertEntityService instance.
    - id: entity
      type: '{TInsert}'
      description: The entity to insert.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TInsert
      description: The type of the entity to insert.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Insert(Of T As Class, TInsert As Class)(entityService As IInsertEntityService(Of T, TInsert), entity As TInsert, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of PrimaryKeys(Of T)))
  overload: Innova.Data.Entity.IEntityServiceExtensions.Insert*
  nameWithType.vb: IEntityServiceExtensions.Insert(Of T, TInsert)(IInsertEntityService(Of T, TInsert), TInsert, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Insert(Of T, TInsert)(Innova.Data.Entity.IInsertEntityService(Of T, TInsert), TInsert, System.Threading.CancellationToken)
  name.vb: Insert(Of T, TInsert)(IInsertEntityService(Of T, TInsert), TInsert, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Count``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Count``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  id: Count``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Count<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  nameWithType: IEntityServiceExtensions.Count<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Count<T>(Innova.Data.Entity.IEntityService<T>, System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Count
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 118
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Counts the number of entities of type T that satisfy the specified condition using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<int> Count<T>(this IEntityService<T> entityService, Expression<Func<T, bool>> where, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The condition to satisfy.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Count(Of T As Class)(entityService As IEntityService(Of T), where As Expression(Of Func(Of T, Boolean)), cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innova.Data.Entity.IEntityServiceExtensions.Count*
  nameWithType.vb: IEntityServiceExtensions.Count(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Count(Of T)(Innova.Data.Entity.IEntityService(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Threading.CancellationToken)
  name.vb: Count(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Count``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Count``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  id: Count``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Count<T>(IEntityService<T>, CancellationToken)
  nameWithType: IEntityServiceExtensions.Count<T>(IEntityService<T>, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Count<T>(Innova.Data.Entity.IEntityService<T>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Count
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 134
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Counts the total number of entities of type T using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<int> Count<T>(this IEntityService<T> entityService, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Count(Of T As Class)(entityService As IEntityService(Of T), cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innova.Data.Entity.IEntityServiceExtensions.Count*
  nameWithType.vb: IEntityServiceExtensions.Count(Of T)(IEntityService(Of T), CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Count(Of T)(Innova.Data.Entity.IEntityService(Of T), System.Threading.CancellationToken)
  name.vb: Count(Of T)(IEntityService(Of T), CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Exists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Exists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  id: Exists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Exists<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  nameWithType: IEntityServiceExtensions.Exists<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Exists<T>(Innova.Data.Entity.IEntityService<T>, System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Exists
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 148
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Checks if any entity of type T satisfies the specified condition using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<bool> Exists<T>(this IEntityService<T> entityService, Expression<Func<T, bool>> where, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The condition to satisfy.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Exists(Of T As Class)(entityService As IEntityService(Of T), where As Expression(Of Func(Of T, Boolean)), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innova.Data.Entity.IEntityServiceExtensions.Exists*
  nameWithType.vb: IEntityServiceExtensions.Exists(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Exists(Of T)(Innova.Data.Entity.IEntityService(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Threading.CancellationToken)
  name.vb: Exists(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.GetList``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.GetList``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  id: GetList``1(Innova.Data.Entity.IEntityService{``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: GetList<T>(IEntityService<T>, CancellationToken)
  nameWithType: IEntityServiceExtensions.GetList<T>(IEntityService<T>, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.GetList<T>(Innova.Data.Entity.IEntityService<T>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetList
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 166
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets a list of entities of type T using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<List<T>> GetList<T>(this IEntityService<T> entityService, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function GetList(Of T As Class)(entityService As IEntityService(Of T), cancellationToken As CancellationToken = Nothing) As Task(Of List(Of T))
  overload: Innova.Data.Entity.IEntityServiceExtensions.GetList*
  nameWithType.vb: IEntityServiceExtensions.GetList(Of T)(IEntityService(Of T), CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.GetList(Of T)(Innova.Data.Entity.IEntityService(Of T), System.Threading.CancellationToken)
  name.vb: GetList(Of T)(IEntityService(Of T), CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.GetList``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.GetList``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  id: GetList``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: GetList<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  nameWithType: IEntityServiceExtensions.GetList<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.GetList<T>(Innova.Data.Entity.IEntityService<T>, System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetList
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 180
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets a list of entities of type T that satisfy the specified condition using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<List<T>> GetList<T>(this IEntityService<T> entityService, Expression<Func<T, bool>> where, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The condition to satisfy.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function GetList(Of T As Class)(entityService As IEntityService(Of T), where As Expression(Of Func(Of T, Boolean)), cancellationToken As CancellationToken = Nothing) As Task(Of List(Of T))
  overload: Innova.Data.Entity.IEntityServiceExtensions.GetList*
  nameWithType.vb: IEntityServiceExtensions.GetList(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.GetList(Of T)(Innova.Data.Entity.IEntityService(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Threading.CancellationToken)
  name.vb: GetList(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.NotExists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.NotExists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  id: NotExists``1(Innova.Data.Entity.IEntityService{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: NotExists<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  nameWithType: IEntityServiceExtensions.NotExists<T>(IEntityService<T>, Expression<Func<T, bool>>, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.NotExists<T>(Innova.Data.Entity.IEntityService<T>, System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: NotExists
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 197
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Checks if no entity of type T satisfies the specified condition using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<bool> NotExists<T>(this IEntityService<T> entityService, Expression<Func<T, bool>> where, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: where
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The condition to satisfy.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function NotExists(Of T As Class)(entityService As IEntityService(Of T), where As Expression(Of Func(Of T, Boolean)), cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innova.Data.Entity.IEntityServiceExtensions.NotExists*
  nameWithType.vb: IEntityServiceExtensions.NotExists(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.NotExists(Of T)(Innova.Data.Entity.IEntityService(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Threading.CancellationToken)
  name.vb: NotExists(Of T)(IEntityService(Of T), Expression(Of Func(Of T, Boolean)), CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Create``1(Innova.Data.Entity.IEntityService{``0},Innova.Data.Entity.IPropertyValues,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Create``1(Innova.Data.Entity.IEntityService{``0},Innova.Data.Entity.IPropertyValues,System.Threading.CancellationToken)
  id: Create``1(Innova.Data.Entity.IEntityService{``0},Innova.Data.Entity.IPropertyValues,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Create<T>(IEntityService<T>, IPropertyValues, CancellationToken)
  nameWithType: IEntityServiceExtensions.Create<T>(IEntityService<T>, IPropertyValues, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Create<T>(Innova.Data.Entity.IEntityService<T>, Innova.Data.Entity.IPropertyValues, System.Threading.CancellationToken)
  type: Method
  source:
    id: Create
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 213
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Creates a new entity of type <code class="typeparamref">T</code> using the <xref href="Innova.Data.Entity.IEntityService%601" data-throw-if-not-resolved="false"></xref> and sets its property values.
  example: []
  syntax:
    content: 'public static Task<T> Create<T>(this IEntityService<T> entityService, IPropertyValues propertyValues, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The <xref href="Innova.Data.Entity.IEntityService%601" data-throw-if-not-resolved="false"></xref> instance.
    - id: propertyValues
      type: Innova.Data.Entity.IPropertyValues
      description: The property values to set on the new entity.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation. The task result contains the newly created entity with the specified property values set.
    content.vb: Public Shared Function Create(Of T As Class)(entityService As IEntityService(Of T), propertyValues As IPropertyValues, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innova.Data.Entity.IEntityServiceExtensions.Create*
  nameWithType.vb: IEntityServiceExtensions.Create(Of T)(IEntityService(Of T), IPropertyValues, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Create(Of T)(Innova.Data.Entity.IEntityService(Of T), Innova.Data.Entity.IPropertyValues, System.Threading.CancellationToken)
  name.vb: Create(Of T)(IEntityService(Of T), IPropertyValues, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Insert``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Insert``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  id: Insert``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Insert<T>(IEntityService<T>, T, CancellationToken)
  nameWithType: IEntityServiceExtensions.Insert<T>(IEntityService<T>, T, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Insert<T>(Innova.Data.Entity.IEntityService<T>, T, System.Threading.CancellationToken)
  type: Method
  source:
    id: Insert
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 228
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Inserts a single entity of type T into the IEntityService.
  example: []
  syntax:
    content: 'public static Task<PrimaryKeys<T>> Insert<T>(this IEntityService<T> entityService, T entity, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: entity
      type: '{T}'
      description: The entity to insert.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{Innova.Data.Entity.PrimaryKeys{{T}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Insert(Of T As Class)(entityService As IEntityService(Of T), entity As T, cancellationToken As CancellationToken = Nothing) As Task(Of PrimaryKeys(Of T))
  overload: Innova.Data.Entity.IEntityServiceExtensions.Insert*
  nameWithType.vb: IEntityServiceExtensions.Insert(Of T)(IEntityService(Of T), T, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Insert(Of T)(Innova.Data.Entity.IEntityService(Of T), T, System.Threading.CancellationToken)
  name.vb: Insert(Of T)(IEntityService(Of T), T, CancellationToken)
- uid: Innova.Data.Entity.IEntityServiceExtensions.Update``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Entity.IEntityServiceExtensions.Update``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  id: Update``1(Innova.Data.Entity.IEntityService{``0},``0,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityServiceExtensions
  langs:
  - csharp
  - vb
  name: Update<T>(IEntityService<T>, T, CancellationToken)
  nameWithType: IEntityServiceExtensions.Update<T>(IEntityService<T>, T, CancellationToken)
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Update<T>(Innova.Data.Entity.IEntityService<T>, T, System.Threading.CancellationToken)
  type: Method
  source:
    id: Update
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityServiceExtensions.cs
    startLine: 242
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Updates a single entity of type T using the IEntityService.
  example: []
  syntax:
    content: 'public static Task<PrimaryKeys<T>> Update<T>(this IEntityService<T> entityService, T entity, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entityService
      type: Innova.Data.Entity.IEntityService{{T}}
      description: The IEntityService instance.
    - id: entity
      type: '{T}'
      description: The entity to update.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Threading.Tasks.Task{Innova.Data.Entity.PrimaryKeys{{T}}}
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function Update(Of T As Class)(entityService As IEntityService(Of T), entity As T, cancellationToken As CancellationToken = Nothing) As Task(Of PrimaryKeys(Of T))
  overload: Innova.Data.Entity.IEntityServiceExtensions.Update*
  nameWithType.vb: IEntityServiceExtensions.Update(Of T)(IEntityService(Of T), T, CancellationToken)
  fullName.vb: Innova.Data.Entity.IEntityServiceExtensions.Update(Of T)(Innova.Data.Entity.IEntityService(Of T), T, System.Threading.CancellationToken)
  name.vb: Update(Of T)(IEntityService(Of T), T, CancellationToken)
references:
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.Entity.IEntityServiceExtensions.Delete*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.Delete
  href: Innova.Data.Entity.IEntityServiceExtensions.Delete.html#Innova_Data_Entity_IEntityServiceExtensions_Delete__2_Innova_Data_Entity_IShowEntityService___0___1____1_System_Threading_CancellationToken_
  name: Delete
  nameWithType: IEntityServiceExtensions.Delete
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Delete
- uid: Innova.Data.Entity.IShowEntityService{{T},{TShow}}
  commentId: T:Innova.Data.Entity.IShowEntityService{`0,`2}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.IShowEntityService`2
  href: Innova.Data.Entity.IShowEntityService-2.html
  name: IShowEntityService<T, TShow>
  nameWithType: IShowEntityService<T, TShow>
  fullName: Innova.Data.Entity.IShowEntityService<T, TShow>
  nameWithType.vb: IShowEntityService(Of T, TShow)
  fullName.vb: Innova.Data.Entity.IShowEntityService(Of T, TShow)
  name.vb: IShowEntityService(Of T, TShow)
  spec.csharp:
  - uid: Innova.Data.Entity.IShowEntityService`2
    name: IShowEntityService
    href: Innova.Data.Entity.IShowEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TShow
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IShowEntityService`2
    name: IShowEntityService
    href: Innova.Data.Entity.IShowEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TShow
  - name: )
- uid: '{TShow}'
  commentId: '!:TShow'
  definition: TShow
  name: TShow
  nameWithType: TShow
  fullName: TShow
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Innova.Data.Entity.IShowEntityService`2
  commentId: T:Innova.Data.Entity.IShowEntityService`2
  href: Innova.Data.Entity.IShowEntityService-2.html
  name: IShowEntityService<T, TShow>
  nameWithType: IShowEntityService<T, TShow>
  fullName: Innova.Data.Entity.IShowEntityService<T, TShow>
  nameWithType.vb: IShowEntityService(Of T, TShow)
  fullName.vb: Innova.Data.Entity.IShowEntityService(Of T, TShow)
  name.vb: IShowEntityService(Of T, TShow)
  spec.csharp:
  - uid: Innova.Data.Entity.IShowEntityService`2
    name: IShowEntityService
    href: Innova.Data.Entity.IShowEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TShow
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IShowEntityService`2
    name: IShowEntityService
    href: Innova.Data.Entity.IShowEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TShow
  - name: )
- uid: TShow
  commentId: '!:TShow'
  name: TShow
  nameWithType: TShow
  fullName: TShow
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innova.Data.Entity.IEntityServiceExtensions.Update*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.Update
  href: Innova.Data.Entity.IEntityServiceExtensions.Update.html#Innova_Data_Entity_IEntityServiceExtensions_Update__2_Innova_Data_Entity_IEditEntityService___0___1____1_System_Threading_CancellationToken_
  name: Update
  nameWithType: IEntityServiceExtensions.Update
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Update
- uid: Innova.Data.Entity.IEditEntityService{{T},{TEdit}}
  commentId: T:Innova.Data.Entity.IEditEntityService{`0,`1}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.IEditEntityService`2
  href: Innova.Data.Entity.IEditEntityService-2.html
  name: IEditEntityService<T, TEdit>
  nameWithType: IEditEntityService<T, TEdit>
  fullName: Innova.Data.Entity.IEditEntityService<T, TEdit>
  nameWithType.vb: IEditEntityService(Of T, TEdit)
  fullName.vb: Innova.Data.Entity.IEditEntityService(Of T, TEdit)
  name.vb: IEditEntityService(Of T, TEdit)
  spec.csharp:
  - uid: Innova.Data.Entity.IEditEntityService`2
    name: IEditEntityService
    href: Innova.Data.Entity.IEditEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TEdit
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IEditEntityService`2
    name: IEditEntityService
    href: Innova.Data.Entity.IEditEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TEdit
  - name: )
- uid: '{TEdit}'
  commentId: '!:TEdit'
  definition: TEdit
  name: TEdit
  nameWithType: TEdit
  fullName: TEdit
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{`0}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<PrimaryKeys<T>>>
  nameWithType: Task<List<PrimaryKeys<T>>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Innova.Data.Entity.PrimaryKeys<T>>>
  nameWithType.vb: Task(Of List(Of PrimaryKeys(Of T)))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Innova.Data.Entity.PrimaryKeys(Of T)))
  name.vb: Task(Of List(Of PrimaryKeys(Of T)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Entity.IEditEntityService`2
  commentId: T:Innova.Data.Entity.IEditEntityService`2
  href: Innova.Data.Entity.IEditEntityService-2.html
  name: IEditEntityService<T, TEdit>
  nameWithType: IEditEntityService<T, TEdit>
  fullName: Innova.Data.Entity.IEditEntityService<T, TEdit>
  nameWithType.vb: IEditEntityService(Of T, TEdit)
  fullName.vb: Innova.Data.Entity.IEditEntityService(Of T, TEdit)
  name.vb: IEditEntityService(Of T, TEdit)
  spec.csharp:
  - uid: Innova.Data.Entity.IEditEntityService`2
    name: IEditEntityService
    href: Innova.Data.Entity.IEditEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TEdit
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IEditEntityService`2
    name: IEditEntityService
    href: Innova.Data.Entity.IEditEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TEdit
  - name: )
- uid: TEdit
  name: TEdit
  nameWithType: TEdit
  fullName: TEdit
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Innova.Data.Entity.IListEntityService{{T},{TList}}
  commentId: T:Innova.Data.Entity.IListEntityService{`0,`4}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.IListEntityService`2
  href: Innova.Data.Entity.IListEntityService-2.html
  name: IListEntityService<T, TList>
  nameWithType: IListEntityService<T, TList>
  fullName: Innova.Data.Entity.IListEntityService<T, TList>
  nameWithType.vb: IListEntityService(Of T, TList)
  fullName.vb: Innova.Data.Entity.IListEntityService(Of T, TList)
  name.vb: IListEntityService(Of T, TList)
  spec.csharp:
  - uid: Innova.Data.Entity.IListEntityService`2
    name: IListEntityService
    href: Innova.Data.Entity.IListEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TList
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IListEntityService`2
    name: IListEntityService
    href: Innova.Data.Entity.IListEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TList
  - name: )
- uid: '{TList}'
  commentId: '!:TList'
  definition: TList
  name: TList
  nameWithType: TList
  fullName: TList
- uid: Innova.Data.Entity.IListEntityService`2
  commentId: T:Innova.Data.Entity.IListEntityService`2
  href: Innova.Data.Entity.IListEntityService-2.html
  name: IListEntityService<T, TList>
  nameWithType: IListEntityService<T, TList>
  fullName: Innova.Data.Entity.IListEntityService<T, TList>
  nameWithType.vb: IListEntityService(Of T, TList)
  fullName.vb: Innova.Data.Entity.IListEntityService(Of T, TList)
  name.vb: IListEntityService(Of T, TList)
  spec.csharp:
  - uid: Innova.Data.Entity.IListEntityService`2
    name: IListEntityService
    href: Innova.Data.Entity.IListEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TList
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IListEntityService`2
    name: IListEntityService
    href: Innova.Data.Entity.IListEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TList
  - name: )
- uid: TList
  name: TList
  nameWithType: TList
  fullName: TList
- uid: Innova.Data.Entity.IEntityServiceExtensions.Insert*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.Insert
  href: Innova.Data.Entity.IEntityServiceExtensions.Insert.html#Innova_Data_Entity_IEntityServiceExtensions_Insert__2_Innova_Data_Entity_IListEntityService___0___1____1_System_Threading_CancellationToken_
  name: Insert
  nameWithType: IEntityServiceExtensions.Insert
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Insert
- uid: Innova.Data.Entity.IInsertEntityService{{T},{TInsert}}
  commentId: T:Innova.Data.Entity.IInsertEntityService{`0,`3}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.IInsertEntityService`2
  href: Innova.Data.Entity.IInsertEntityService-2.html
  name: IInsertEntityService<T, TInsert>
  nameWithType: IInsertEntityService<T, TInsert>
  fullName: Innova.Data.Entity.IInsertEntityService<T, TInsert>
  nameWithType.vb: IInsertEntityService(Of T, TInsert)
  fullName.vb: Innova.Data.Entity.IInsertEntityService(Of T, TInsert)
  name.vb: IInsertEntityService(Of T, TInsert)
  spec.csharp:
  - uid: Innova.Data.Entity.IInsertEntityService`2
    name: IInsertEntityService
    href: Innova.Data.Entity.IInsertEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TInsert
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IInsertEntityService`2
    name: IInsertEntityService
    href: Innova.Data.Entity.IInsertEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TInsert
  - name: )
- uid: '{TInsert}'
  commentId: '!:TInsert'
  definition: TInsert
  name: TInsert
  nameWithType: TInsert
  fullName: TInsert
- uid: Innova.Data.Entity.IInsertEntityService`2
  commentId: T:Innova.Data.Entity.IInsertEntityService`2
  href: Innova.Data.Entity.IInsertEntityService-2.html
  name: IInsertEntityService<T, TInsert>
  nameWithType: IInsertEntityService<T, TInsert>
  fullName: Innova.Data.Entity.IInsertEntityService<T, TInsert>
  nameWithType.vb: IInsertEntityService(Of T, TInsert)
  fullName.vb: Innova.Data.Entity.IInsertEntityService(Of T, TInsert)
  name.vb: IInsertEntityService(Of T, TInsert)
  spec.csharp:
  - uid: Innova.Data.Entity.IInsertEntityService`2
    name: IInsertEntityService
    href: Innova.Data.Entity.IInsertEntityService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TInsert
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IInsertEntityService`2
    name: IInsertEntityService
    href: Innova.Data.Entity.IInsertEntityService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TInsert
  - name: )
- uid: TInsert
  name: TInsert
  nameWithType: TInsert
  fullName: TInsert
- uid: Innova.Data.Entity.IEntityServiceExtensions.Count*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.Count
  href: Innova.Data.Entity.IEntityServiceExtensions.Count.html#Innova_Data_Entity_IEntityServiceExtensions_Count__1_Innova_Data_Entity_IEntityService___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Threading_CancellationToken_
  name: Count
  nameWithType: IEntityServiceExtensions.Count
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Count
- uid: Innova.Data.Entity.IEntityService{{T}}
  commentId: T:Innova.Data.Entity.IEntityService{`0}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.IEntityService`1
  href: Innova.Data.Entity.IEntityService-1.html
  name: IEntityService<T>
  nameWithType: IEntityService<T>
  fullName: Innova.Data.Entity.IEntityService<T>
  nameWithType.vb: IEntityService(Of T)
  fullName.vb: Innova.Data.Entity.IEntityService(Of T)
  name.vb: IEntityService(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.IEntityService`1
    name: IEntityService
    href: Innova.Data.Entity.IEntityService-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IEntityService`1
    name: IEntityService
    href: Innova.Data.Entity.IEntityService-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, bool>>
  nameWithType: Expression<Func<T, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, bool>>
  nameWithType.vb: Expression(Of Func(Of T, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean))
  name.vb: Expression(Of Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Data.Entity.IEntityService`1
  commentId: T:Innova.Data.Entity.IEntityService`1
  href: Innova.Data.Entity.IEntityService-1.html
  name: IEntityService<T>
  nameWithType: IEntityService<T>
  fullName: Innova.Data.Entity.IEntityService<T>
  nameWithType.vb: IEntityService(Of T)
  fullName.vb: Innova.Data.Entity.IEntityService(Of T)
  name.vb: IEntityService(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.IEntityService`1
    name: IEntityService
    href: Innova.Data.Entity.IEntityService-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IEntityService`1
    name: IEntityService
    href: Innova.Data.Entity.IEntityService-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Innova.Data.Entity.IEntityServiceExtensions.Exists*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.Exists
  href: Innova.Data.Entity.IEntityServiceExtensions.Exists.html#Innova_Data_Entity_IEntityServiceExtensions_Exists__1_Innova_Data_Entity_IEntityService___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Threading_CancellationToken_
  name: Exists
  nameWithType: IEntityServiceExtensions.Exists
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Exists
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Innova.Data.Entity.IEntityServiceExtensions.GetList*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.GetList
  href: Innova.Data.Entity.IEntityServiceExtensions.GetList.html#Innova_Data_Entity_IEntityServiceExtensions_GetList__1_Innova_Data_Entity_IEntityService___0__System_Threading_CancellationToken_
  name: GetList
  nameWithType: IEntityServiceExtensions.GetList
  fullName: Innova.Data.Entity.IEntityServiceExtensions.GetList
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<T>>
  nameWithType: Task<List<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<T>>
  nameWithType.vb: Task(Of List(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of T))
  name.vb: Task(Of List(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Data.Entity.IEntityServiceExtensions.NotExists*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.NotExists
  href: Innova.Data.Entity.IEntityServiceExtensions.NotExists.html#Innova_Data_Entity_IEntityServiceExtensions_NotExists__1_Innova_Data_Entity_IEntityService___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Threading_CancellationToken_
  name: NotExists
  nameWithType: IEntityServiceExtensions.NotExists
  fullName: Innova.Data.Entity.IEntityServiceExtensions.NotExists
- uid: Innova.Data.Entity.IEntityServiceExtensions.Create*
  commentId: Overload:Innova.Data.Entity.IEntityServiceExtensions.Create
  href: Innova.Data.Entity.IEntityServiceExtensions.Create.html#Innova_Data_Entity_IEntityServiceExtensions_Create__1_Innova_Data_Entity_IEntityService___0__Innova_Data_Entity_IPropertyValues_System_Threading_CancellationToken_
  name: Create
  nameWithType: IEntityServiceExtensions.Create
  fullName: Innova.Data.Entity.IEntityServiceExtensions.Create
- uid: Innova.Data.Entity.IPropertyValues
  commentId: T:Innova.Data.Entity.IPropertyValues
  parent: Innova.Data.Entity
  href: Innova.Data.Entity.IPropertyValues.html
  name: IPropertyValues
  nameWithType: IPropertyValues
  fullName: Innova.Data.Entity.IPropertyValues
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task{Innova.Data.Entity.PrimaryKeys{{T}}}
  commentId: T:System.Threading.Tasks.Task{Innova.Data.Entity.PrimaryKeys{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PrimaryKeys<T>>
  nameWithType: Task<PrimaryKeys<T>>
  fullName: System.Threading.Tasks.Task<Innova.Data.Entity.PrimaryKeys<T>>
  nameWithType.vb: Task(Of PrimaryKeys(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Innova.Data.Entity.PrimaryKeys(Of T))
  name.vb: Task(Of PrimaryKeys(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
memberLayout: SeparatePages
