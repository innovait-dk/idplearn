### YamlMime:ManagedReference
items:
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility
  commentId: T:Innova.Data.StructuredSearch.Operators.OperatorUtility
  id: OperatorUtility
  parent: Innova.Data.StructuredSearch.Operators
  children:
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue(System.DateTime,System.Type,System.DateTimeKind)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  - Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.ExpressionType)
  langs:
  - csharp
  - vb
  name: OperatorUtility
  nameWithType: OperatorUtility
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility
  type: Class
  source:
    id: OperatorUtility
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 10
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  syntax:
    content: public static class OperatorUtility
    content.vb: Public Module OperatorUtility
  inheritance:
  - System.Object
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue(System.DateTime,System.Type,System.DateTimeKind)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue(System.DateTime,System.Type,System.DateTimeKind)
  id: GetDateValue(System.DateTime,System.Type,System.DateTimeKind)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateValue(DateTime, Type, DateTimeKind)
  nameWithType: OperatorUtility.GetDateValue(DateTime, Type, DateTimeKind)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue(System.DateTime, System.Type, System.DateTimeKind)
  type: Method
  source:
    id: GetDateValue
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 57
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the date value.
  example: []
  syntax:
    content: public static object GetDateValue(DateTime date, Type memberType, DateTimeKind dateKind = DateTimeKind.Utc)
    parameters:
    - id: date
      type: System.DateTime
      description: The date.
    - id: memberType
      type: System.Type
      description: Type of the member.
    - id: dateKind
      type: System.DateTimeKind
      description: Kind of the date.
    return:
      type: System.Object
      description: ''
    content.vb: Public Shared Function GetDateValue([date] As Date, memberType As Type, dateKind As DateTimeKind = DateTimeKind.Utc) As Object
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue*
  nameWithType.vb: OperatorUtility.GetDateValue(Date, Type, DateTimeKind)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue(Date, System.Type, System.DateTimeKind)
  name.vb: GetDateValue(Date, Type, DateTimeKind)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetContainsExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetContainsExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetContainsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 72
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the specified property contains the filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetContainsExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property contains the filter value.
    content.vb: Public Shared Function GetContainsExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression*
  nameWithType.vb: OperatorUtility.GetContainsExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetContainsExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetContainsExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetContainsExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetContainsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 86
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property contains the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetContainsExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value to check.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property contains the filter value.
    content.vb: Public Shared Function GetContainsExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression*
  nameWithType.vb: OperatorUtility.GetContainsExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetContainsExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotContainsExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetNotContainsExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetNotContainsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 104
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents the negation of a contains operation.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotContainsExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The value to filter.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the negation of the contains operation.
    content.vb: Public Shared Function GetNotContainsExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression*
  nameWithType.vb: OperatorUtility.GetNotContainsExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetNotContainsExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetNotContainsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotContainsExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetNotContainsExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetNotContainsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 118
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents the negation of a contains operation.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotContainsExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property to check.
    - id: filterValue
      type: System.Object
      description: The value to check for containment.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the negation of the contains operation.
    content.vb: Public Shared Function GetNotContainsExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression*
  nameWithType.vb: OperatorUtility.GetNotContainsExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetNotContainsExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateNotEqualsExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetDateNotEqualsExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetDateNotEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 136
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents the inequality comparison of a date property with a filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateNotEqualsExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the inequality comparison.
    content.vb: Public Shared Function GetDateNotEqualsExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression*
  nameWithType.vb: OperatorUtility.GetDateNotEqualsExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetDateNotEqualsExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetDateNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateNotEqualsExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetDateNotEqualsExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetDateNotEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 150
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents the inequality comparison of a date property with a filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateNotEqualsExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the date property.
    - id: filterValue
      type: System.Object
      description: The filter value to compare with the date property.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the inequality comparison.
    content.vb: Public Shared Function GetDateNotEqualsExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression*
  nameWithType.vb: OperatorUtility.GetDateNotEqualsExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetDateNotEqualsExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateEqualsExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetDateEqualsExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetDateEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 189
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the date property is equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateEqualsExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the date property is equal to the specified filter value.
    content.vb: Public Shared Function GetDateEqualsExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression*
  nameWithType.vb: OperatorUtility.GetDateEqualsExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetDateEqualsExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetDateEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateEqualsExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetDateEqualsExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetDateEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 203
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the date property is equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateEqualsExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the date property.
    - id: filterValue
      type: System.Object
      description: The filter value to compare against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the date property is equal to the filter value.
    content.vb: Public Shared Function GetDateEqualsExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression*
  nameWithType.vb: OperatorUtility.GetDateEqualsExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetDateEqualsExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotEqualsExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetNotEqualsExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetNotEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 231
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents the inequality comparison between the property expression and the filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotEqualsExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property to compare.
    - id: filterValue
      type: System.Object
      description: The value to compare against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the inequality comparison.
    content.vb: Public Shared Function GetNotEqualsExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression*
  nameWithType.vb: OperatorUtility.GetNotEqualsExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetNotEqualsExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetNotEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotEqualsExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetNotEqualsExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetNotEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 247
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents the inequality comparison between the specified property and filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotEqualsExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the inequality comparison.
    content.vb: Public Shared Function GetNotEqualsExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression*
  nameWithType.vb: OperatorUtility.GetNotEqualsExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetNotEqualsExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetMonthExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetMonthExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetMonthExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 295
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that filters records based on the month of a property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetMonthExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value representing the month.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that filters records based on the month of a property.
    content.vb: Public Shared Function GetMonthExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression*
  nameWithType.vb: OperatorUtility.GetMonthExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetMonthExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetMonthExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetMonthExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetMonthExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetMonthExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 327
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression for filtering by month.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetMonthExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression for filtering by month.
    content.vb: Public Shared Function GetMonthExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression*
  nameWithType.vb: OperatorUtility.GetMonthExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetMonthExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  id: GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetQuarterExpression<T>(ParameterExpression, Expression, object, object)
  nameWithType: OperatorUtility.GetQuarterExpression<T>(ParameterExpression, Expression, object, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object, object)
  type: Method
  source:
    id: GetQuarterExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 344
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression for filtering records based on the quarter of a date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetQuarterExpression<T>(ParameterExpression parameter, Expression propertyExpression, object startMonth, object endMonth)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the date property.
    - id: startMonth
      type: System.Object
      description: The start month of the quarter.
    - id: endMonth
      type: System.Object
      description: The end month of the quarter.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression for filtering records based on the quarter of a date property.
    content.vb: Public Shared Function GetQuarterExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, startMonth As Object, endMonth As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression*
  nameWithType.vb: OperatorUtility.GetQuarterExpression(Of T)(ParameterExpression, Expression, Object, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object, Object)
  name.vb: GetQuarterExpression(Of T)(ParameterExpression, Expression, Object, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  id: GetQuarterExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetQuarterExpression<T>(ParameterExpression, string, object, object)
  nameWithType: OperatorUtility.GetQuarterExpression<T>(ParameterExpression, string, object, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression<T>(System.Linq.Expressions.ParameterExpression, string, object, object)
  type: Method
  source:
    id: GetQuarterExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 380
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the quarter expression for filtering data based on the specified start and end months.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetQuarterExpression<T>(ParameterExpression parameter, string propertyName, object startMonth, object endMonth)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: startMonth
      type: System.Object
      description: The start month of the quarter.
    - id: endMonth
      type: System.Object
      description: The end month of the quarter.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the quarter filter.
    content.vb: Public Shared Function GetQuarterExpression(Of T)(parameter As ParameterExpression, propertyName As String, startMonth As Object, endMonth As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression*
  nameWithType.vb: OperatorUtility.GetQuarterExpression(Of T)(ParameterExpression, String, Object, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object, Object)
  name.vb: GetQuarterExpression(Of T)(ParameterExpression, String, Object, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetEqualsExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetEqualsExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 398
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks for equality between the property value and the filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetEqualsExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks for equality.
    content.vb: Public Shared Function GetEqualsExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression*
  nameWithType.vb: OperatorUtility.GetEqualsExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetEqualsExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetEqualsExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetEqualsExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetEqualsExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetEqualsExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 415
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the specified property is equal to the filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetEqualsExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property is equal to the filter value.
    content.vb: Public Shared Function GetEqualsExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression*
  nameWithType.vb: OperatorUtility.GetEqualsExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetEqualsExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetStartsWithExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetStartsWithExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetStartsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 430
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the specified property starts with the filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetStartsWithExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property starts with the filter value.
    content.vb: Public Shared Function GetStartsWithExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression*
  nameWithType.vb: OperatorUtility.GetStartsWithExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetStartsWithExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetStartsWithExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetStartsWithExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetStartsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 444
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that checks if the property value starts with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetStartsWithExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that checks if the property value starts with the specified filter value.
    content.vb: Public Shared Function GetStartsWithExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression*
  nameWithType.vb: OperatorUtility.GetStartsWithExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetStartsWithExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotStartsWithExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetNotStartsWithExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetNotStartsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 460
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that checks if the property value does not start with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotStartsWithExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that checks if the property value does not start with the specified filter value.
    content.vb: Public Shared Function GetNotStartsWithExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression*
  nameWithType.vb: OperatorUtility.GetNotStartsWithExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetNotStartsWithExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetNotStartsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotStartsWithExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetNotStartsWithExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetNotStartsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 474
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that checks if the property value does not start with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotStartsWithExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that checks if the property value does not start with the specified filter value.
    content.vb: Public Shared Function GetNotStartsWithExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression*
  nameWithType.vb: OperatorUtility.GetNotStartsWithExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetNotStartsWithExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotEndsWithExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetNotEndsWithExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetNotEndsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 492
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a condition where the specified property does not end with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotEndsWithExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetNotEndsWithExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression*
  nameWithType.vb: OperatorUtility.GetNotEndsWithExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetNotEndsWithExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetNotEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotEndsWithExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetNotEndsWithExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetNotEndsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 506
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a condition where the specified property does not end with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotEndsWithExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetNotEndsWithExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression*
  nameWithType.vb: OperatorUtility.GetNotEndsWithExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetNotEndsWithExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetEndsWithExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetEndsWithExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetEndsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 522
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a condition where the specified property ends with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetEndsWithExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetEndsWithExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression*
  nameWithType.vb: OperatorUtility.GetEndsWithExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetEndsWithExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetEndsWithExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetEndsWithExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetEndsWithExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetEndsWithExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 536
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a condition where the specified property ends with the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetEndsWithExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetEndsWithExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression*
  nameWithType.vb: OperatorUtility.GetEndsWithExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetEndsWithExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetGreaterThanExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetGreaterThanExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetGreaterThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 552
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a greater than comparison for the specified property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetGreaterThanExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The value to compare against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the greater than comparison.
    content.vb: Public Shared Function GetGreaterThanExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression*
  nameWithType.vb: OperatorUtility.GetGreaterThanExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetGreaterThanExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.ExpressionType)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.ExpressionType)
  id: GetStringCompareToExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.ExpressionType)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetStringCompareToExpression<T>(ParameterExpression, Expression, object, ExpressionType)
  nameWithType: OperatorUtility.GetStringCompareToExpression<T>(ParameterExpression, Expression, object, ExpressionType)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object, System.Linq.Expressions.ExpressionType)
  type: Method
  source:
    id: GetStringCompareToExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 567
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a string comparison using the CompareTo method.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetStringCompareToExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue, ExpressionType expressionType)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The value to compare against.
    - id: expressionType
      type: System.Linq.Expressions.ExpressionType
      description: The type of comparison expression.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the string comparison.
    content.vb: Public Shared Function GetStringCompareToExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object, expressionType As ExpressionType) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression*
  nameWithType.vb: OperatorUtility.GetStringCompareToExpression(Of T)(ParameterExpression, Expression, Object, ExpressionType)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object, System.Linq.Expressions.ExpressionType)
  name.vb: GetStringCompareToExpression(Of T)(ParameterExpression, Expression, Object, ExpressionType)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetGreaterThanExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetGreaterThanExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetGreaterThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 602
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a greater than comparison for the specified property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetGreaterThanExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The value to compare against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the greater than comparison.
    content.vb: Public Shared Function GetGreaterThanExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression*
  nameWithType.vb: OperatorUtility.GetGreaterThanExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetGreaterThanExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateGreaterThanExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetDateGreaterThanExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetDateGreaterThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 617
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a greater than comparison for the specified date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateGreaterThanExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the date property.
    - id: filterValue
      type: System.Object
      description: The value to compare against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the greater than comparison.
    content.vb: Public Shared Function GetDateGreaterThanExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression*
  nameWithType.vb: OperatorUtility.GetDateGreaterThanExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetDateGreaterThanExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetDateGreaterThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateGreaterThanExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetDateGreaterThanExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetDateGreaterThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 631
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a greater than comparison for the specified date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateGreaterThanExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the date property.
    - id: filterValue
      type: System.Object
      description: The value to compare against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the greater than comparison.
    content.vb: Public Shared Function GetDateGreaterThanExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression*
  nameWithType.vb: OperatorUtility.GetDateGreaterThanExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetDateGreaterThanExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateGreaterThanOrEqualExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetDateGreaterThanOrEqualExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetDateGreaterThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 652
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents a greater than or equal comparison for a date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateGreaterThanOrEqualExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the greater than or equal comparison.
    content.vb: Public Shared Function GetDateGreaterThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetDateGreaterThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetDateGreaterThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetDateGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateGreaterThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetDateGreaterThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetDateGreaterThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 666
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents a greater than or equal comparison for a date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateGreaterThanOrEqualExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the greater than or equal comparison.
    content.vb: Public Shared Function GetDateGreaterThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetDateGreaterThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetDateGreaterThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateLessThanExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetDateLessThanExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetDateLessThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 687
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents a less than comparison for a date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateLessThanExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the less than comparison.
    content.vb: Public Shared Function GetDateLessThanExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression*
  nameWithType.vb: OperatorUtility.GetDateLessThanExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetDateLessThanExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetDateLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateLessThanExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetDateLessThanExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetDateLessThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 701
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents a less than comparison for a date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateLessThanExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the less than comparison.
    content.vb: Public Shared Function GetDateLessThanExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression*
  nameWithType.vb: OperatorUtility.GetDateLessThanExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetDateLessThanExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateLessThanOrEqualExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetDateLessThanOrEqualExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetDateLessThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 722
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that represents a less than or equal comparison for a date property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateLessThanOrEqualExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression representing the less than or equal comparison.
    content.vb: Public Shared Function GetDateLessThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetDateLessThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetDateLessThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetDateLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetDateLessThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetDateLessThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetDateLessThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 736
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents the condition where the property value is less than or equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetDateLessThanOrEqualExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetDateLessThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetDateLessThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetDateLessThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetGreaterThanOrEqualExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetGreaterThanOrEqualExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetGreaterThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 757
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents the condition where the property value is greater than or equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetGreaterThanOrEqualExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetGreaterThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetGreaterThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetGreaterThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetGreaterThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetGreaterThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetGreaterThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetGreaterThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 771
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents the condition where the property value is greater than or equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetGreaterThanOrEqualExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetGreaterThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetGreaterThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetGreaterThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetLessThanExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetLessThanExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetLessThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 786
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents the condition where the property value is less than the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetLessThanExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetLessThanExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression*
  nameWithType.vb: OperatorUtility.GetLessThanExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetLessThanExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetLessThanExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetLessThanExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetLessThanExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetLessThanExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 800
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents the condition where the property value is less than the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetLessThanExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression representing the condition.
    content.vb: Public Shared Function GetLessThanExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression*
  nameWithType.vb: OperatorUtility.GetLessThanExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetLessThanExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  id: GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetLessThanOrEqualExpression<T>(ParameterExpression, string, object)
  nameWithType: OperatorUtility.GetLessThanOrEqualExpression<T>(ParameterExpression, string, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, string, object)
  type: Method
  source:
    id: GetLessThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 816
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property value is less than or equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetLessThanOrEqualExpression<T>(ParameterExpression parameter, string propertyName, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property value is less than or equal to the specified filter value.
    content.vb: Public Shared Function GetLessThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyName As String, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetLessThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object)
  name.vb: GetLessThanOrEqualExpression(Of T)(ParameterExpression, String, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  id: GetLessThanOrEqualExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetLessThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  nameWithType: OperatorUtility.GetLessThanOrEqualExpression<T>(ParameterExpression, Expression, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object)
  type: Method
  source:
    id: GetLessThanOrEqualExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 830
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property value is less than or equal to the specified filter value.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetLessThanOrEqualExpression<T>(ParameterExpression parameter, Expression propertyExpression, object filterValue)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: filterValue
      type: System.Object
      description: The filter value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property value is less than or equal to the specified filter value.
    content.vb: Public Shared Function GetLessThanOrEqualExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, filterValue As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression*
  nameWithType.vb: OperatorUtility.GetLessThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object)
  name.vb: GetLessThanOrEqualExpression(Of T)(ParameterExpression, Expression, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  id: GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetIsNullExpression<T>(ParameterExpression, string)
  nameWithType: OperatorUtility.GetIsNullExpression<T>(ParameterExpression, string)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression<T>(System.Linq.Expressions.ParameterExpression, string)
  type: Method
  source:
    id: GetIsNullExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 844
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property value is null.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetIsNullExpression<T>(ParameterExpression parameter, string propertyName)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property value is null.
    content.vb: Public Shared Function GetIsNullExpression(Of T)(parameter As ParameterExpression, propertyName As String) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression*
  nameWithType.vb: OperatorUtility.GetIsNullExpression(Of T)(ParameterExpression, String)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression(Of T)(System.Linq.Expressions.ParameterExpression, String)
  name.vb: GetIsNullExpression(Of T)(ParameterExpression, String)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  id: GetIsNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetIsNullExpression<T>(ParameterExpression, Expression)
  nameWithType: OperatorUtility.GetIsNullExpression<T>(ParameterExpression, Expression)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  type: Method
  source:
    id: GetIsNullExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 857
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property value is null.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetIsNullExpression<T>(ParameterExpression parameter, Expression propertyExpression)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property value is null.
    content.vb: Public Shared Function GetIsNullExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression*
  nameWithType.vb: OperatorUtility.GetIsNullExpression(Of T)(ParameterExpression, Expression)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  name.vb: GetIsNullExpression(Of T)(ParameterExpression, Expression)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  id: GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.String)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetIsNotNullExpression<T>(ParameterExpression, string)
  nameWithType: OperatorUtility.GetIsNotNullExpression<T>(ParameterExpression, string)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression<T>(System.Linq.Expressions.ParameterExpression, string)
  type: Method
  source:
    id: GetIsNotNullExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 872
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property is not null.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetIsNotNullExpression<T>(ParameterExpression parameter, string propertyName)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property is not null.
    content.vb: Public Shared Function GetIsNotNullExpression(Of T)(parameter As ParameterExpression, propertyName As String) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression*
  nameWithType.vb: OperatorUtility.GetIsNotNullExpression(Of T)(ParameterExpression, String)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression(Of T)(System.Linq.Expressions.ParameterExpression, String)
  name.vb: GetIsNotNullExpression(Of T)(ParameterExpression, String)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  id: GetIsNotNullExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetIsNotNullExpression<T>(ParameterExpression, Expression)
  nameWithType: OperatorUtility.GetIsNotNullExpression<T>(ParameterExpression, Expression)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  type: Method
  source:
    id: GetIsNotNullExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 885
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property is not null.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetIsNotNullExpression<T>(ParameterExpression parameter, Expression propertyExpression)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property is not null.
    content.vb: Public Shared Function GetIsNotNullExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression*
  nameWithType.vb: OperatorUtility.GetIsNotNullExpression(Of T)(ParameterExpression, Expression)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  name.vb: GetIsNotNullExpression(Of T)(ParameterExpression, Expression)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  id: GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetInExpression<T>(ParameterExpression, string, IEnumerable)
  nameWithType: OperatorUtility.GetInExpression<T>(ParameterExpression, string, IEnumerable)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression<T>(System.Linq.Expressions.ParameterExpression, string, System.Collections.IEnumerable)
  type: Method
  source:
    id: GetInExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 900
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets the expression that checks if the property is in the specified values.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetInExpression<T>(ParameterExpression parameter, string propertyName, IEnumerable values)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: values
      type: System.Collections.IEnumerable
      description: The values to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The expression that checks if the property is in the specified values.
    content.vb: Public Shared Function GetInExpression(Of T)(parameter As ParameterExpression, propertyName As String, values As IEnumerable) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression*
  nameWithType.vb: OperatorUtility.GetInExpression(Of T)(ParameterExpression, String, IEnumerable)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, System.Collections.IEnumerable)
  name.vb: GetInExpression(Of T)(ParameterExpression, String, IEnumerable)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  id: GetInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetInExpression<T>(ParameterExpression, Expression, IEnumerable)
  nameWithType: OperatorUtility.GetInExpression<T>(ParameterExpression, Expression, IEnumerable)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Collections.IEnumerable)
  type: Method
  source:
    id: GetInExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 915
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Generates an expression that checks if the property value is in the specified collection of values.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetInExpression<T>(ParameterExpression parameter, Expression propertyExpression, IEnumerable values)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property to check.
    - id: values
      type: System.Collections.IEnumerable
      description: The collection of values to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that represents the check for the property value being in the specified collection of values.
    content.vb: Public Shared Function GetInExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, values As IEnumerable) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression*
  nameWithType.vb: OperatorUtility.GetInExpression(Of T)(ParameterExpression, Expression, IEnumerable)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Collections.IEnumerable)
  name.vb: GetInExpression(Of T)(ParameterExpression, Expression, IEnumerable)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  id: GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Collections.IEnumerable)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotInExpression<T>(ParameterExpression, string, IEnumerable)
  nameWithType: OperatorUtility.GetNotInExpression<T>(ParameterExpression, string, IEnumerable)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression<T>(System.Linq.Expressions.ParameterExpression, string, System.Collections.IEnumerable)
  type: Method
  source:
    id: GetNotInExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 938
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Generates an expression that checks if the property value is not in the specified collection of values.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotInExpression<T>(ParameterExpression parameter, string propertyName, IEnumerable values)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property to check.
    - id: values
      type: System.Collections.IEnumerable
      description: The collection of values to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that represents the check for the property value not being in the specified collection of values.
    content.vb: Public Shared Function GetNotInExpression(Of T)(parameter As ParameterExpression, propertyName As String, values As IEnumerable) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression*
  nameWithType.vb: OperatorUtility.GetNotInExpression(Of T)(ParameterExpression, String, IEnumerable)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, System.Collections.IEnumerable)
  name.vb: GetNotInExpression(Of T)(ParameterExpression, String, IEnumerable)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  id: GetNotInExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Collections.IEnumerable)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetNotInExpression<T>(ParameterExpression, Expression, IEnumerable)
  nameWithType: OperatorUtility.GetNotInExpression<T>(ParameterExpression, Expression, IEnumerable)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Collections.IEnumerable)
  type: Method
  source:
    id: GetNotInExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 953
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Generates an expression that checks if the property value is not in the specified collection of values.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetNotInExpression<T>(ParameterExpression parameter, Expression propertyExpression, IEnumerable values)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property to check.
    - id: values
      type: System.Collections.IEnumerable
      description: The collection of values to check against.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that represents the check for the property value not being in the specified collection of values.
    content.vb: Public Shared Function GetNotInExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, values As IEnumerable) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression*
  nameWithType.vb: OperatorUtility.GetNotInExpression(Of T)(ParameterExpression, Expression, IEnumerable)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Collections.IEnumerable)
  name.vb: GetNotInExpression(Of T)(ParameterExpression, Expression, IEnumerable)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  id: GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.String,System.Object,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetBetweenExpression<T>(ParameterExpression, string, object, object)
  nameWithType: OperatorUtility.GetBetweenExpression<T>(ParameterExpression, string, object, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression<T>(System.Linq.Expressions.ParameterExpression, string, object, object)
  type: Method
  source:
    id: GetBetweenExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 979
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a between comparison for the specified property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetBetweenExpression<T>(ParameterExpression parameter, string propertyName, object from, object to)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: from
      type: System.Object
      description: The lower bound value.
    - id: to
      type: System.Object
      description: The upper bound value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that represents the between comparison.
    content.vb: Public Shared Function GetBetweenExpression(Of T)(parameter As ParameterExpression, propertyName As String, from As Object, [to] As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression*
  nameWithType.vb: OperatorUtility.GetBetweenExpression(Of T)(ParameterExpression, String, Object, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression(Of T)(System.Linq.Expressions.ParameterExpression, String, Object, Object)
  name.vb: GetBetweenExpression(Of T)(ParameterExpression, String, Object, Object)
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  commentId: M:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  id: GetBetweenExpression``1(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Object,System.Object)
  parent: Innova.Data.StructuredSearch.Operators.OperatorUtility
  langs:
  - csharp
  - vb
  name: GetBetweenExpression<T>(ParameterExpression, Expression, object, object)
  nameWithType: OperatorUtility.GetBetweenExpression<T>(ParameterExpression, Expression, object, object)
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression<T>(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, object, object)
  type: Method
  source:
    id: GetBetweenExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\Operators\OperatorUtility.cs
    startLine: 1019
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch.Operators
  summary: Gets an expression that represents a between comparison for the specified property.
  example: []
  syntax:
    content: public static Expression<Func<T, bool>> GetBetweenExpression<T>(ParameterExpression parameter, Expression propertyExpression, object from, object to)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.ParameterExpression
      description: The parameter expression.
    - id: propertyExpression
      type: System.Linq.Expressions.Expression
      description: The expression representing the property.
    - id: from
      type: System.Object
      description: The lower bound value.
    - id: to
      type: System.Object
      description: The upper bound value.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: An expression that represents the between comparison.
    content.vb: Public Shared Function GetBetweenExpression(Of T)(parameter As ParameterExpression, propertyExpression As Expression, from As Object, [to] As Object) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression*
  nameWithType.vb: OperatorUtility.GetBetweenExpression(Of T)(ParameterExpression, Expression, Object, Object)
  fullName.vb: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression(Of T)(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, Object, Object)
  name.vb: GetBetweenExpression(Of T)(ParameterExpression, Expression, Object, Object)
references:
- uid: Innova.Data.StructuredSearch.Operators
  commentId: N:Innova.Data.StructuredSearch.Operators
  href: Innova.html
  name: Innova.Data.StructuredSearch.Operators
  nameWithType: Innova.Data.StructuredSearch.Operators
  fullName: Innova.Data.StructuredSearch.Operators
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
  - name: .
  - uid: Innova.Data.StructuredSearch.Operators
    name: Operators
    href: Innova.Data.StructuredSearch.Operators.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
  - name: .
  - uid: Innova.Data.StructuredSearch.Operators
    name: Operators
    href: Innova.Data.StructuredSearch.Operators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateValue_System_DateTime_System_Type_System_DateTimeKind_
  name: GetDateValue
  nameWithType: OperatorUtility.GetDateValue
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateValue
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DateTimeKind
  commentId: T:System.DateTimeKind
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimekind
  name: DateTimeKind
  nameWithType: DateTimeKind
  fullName: System.DateTimeKind
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetContainsExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetContainsExpression
  nameWithType: OperatorUtility.GetContainsExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetContainsExpression
- uid: System.Linq.Expressions.ParameterExpression
  commentId: T:System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, bool>>
  nameWithType: Expression<Func<T, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, bool>>
  nameWithType.vb: Expression(Of Func(Of T, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean))
  name.vb: Expression(Of Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetNotContainsExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetNotContainsExpression
  nameWithType: OperatorUtility.GetNotContainsExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotContainsExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateNotEqualsExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetDateNotEqualsExpression
  nameWithType: OperatorUtility.GetDateNotEqualsExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateNotEqualsExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateEqualsExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetDateEqualsExpression
  nameWithType: OperatorUtility.GetDateEqualsExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateEqualsExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetNotEqualsExpression__1_System_Linq_Expressions_ParameterExpression_System_Linq_Expressions_Expression_System_Object_
  name: GetNotEqualsExpression
  nameWithType: OperatorUtility.GetNotEqualsExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEqualsExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetMonthExpression__1_System_Linq_Expressions_ParameterExpression_System_Linq_Expressions_Expression_System_Object_
  name: GetMonthExpression
  nameWithType: OperatorUtility.GetMonthExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetMonthExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetQuarterExpression__1_System_Linq_Expressions_ParameterExpression_System_Linq_Expressions_Expression_System_Object_System_Object_
  name: GetQuarterExpression
  nameWithType: OperatorUtility.GetQuarterExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetQuarterExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetEqualsExpression__1_System_Linq_Expressions_ParameterExpression_System_Linq_Expressions_Expression_System_Object_
  name: GetEqualsExpression
  nameWithType: OperatorUtility.GetEqualsExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEqualsExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetStartsWithExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetStartsWithExpression
  nameWithType: OperatorUtility.GetStartsWithExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStartsWithExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetNotStartsWithExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetNotStartsWithExpression
  nameWithType: OperatorUtility.GetNotStartsWithExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotStartsWithExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetNotEndsWithExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetNotEndsWithExpression
  nameWithType: OperatorUtility.GetNotEndsWithExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotEndsWithExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetEndsWithExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetEndsWithExpression
  nameWithType: OperatorUtility.GetEndsWithExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetEndsWithExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetGreaterThanExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetGreaterThanExpression
  nameWithType: OperatorUtility.GetGreaterThanExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetStringCompareToExpression__1_System_Linq_Expressions_ParameterExpression_System_Linq_Expressions_Expression_System_Object_System_Linq_Expressions_ExpressionType_
  name: GetStringCompareToExpression
  nameWithType: OperatorUtility.GetStringCompareToExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetStringCompareToExpression
- uid: System.Linq.Expressions.ExpressionType
  commentId: T:System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expressiontype
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateGreaterThanExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetDateGreaterThanExpression
  nameWithType: OperatorUtility.GetDateGreaterThanExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateGreaterThanOrEqualExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetDateGreaterThanOrEqualExpression
  nameWithType: OperatorUtility.GetDateGreaterThanOrEqualExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateGreaterThanOrEqualExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateLessThanExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetDateLessThanExpression
  nameWithType: OperatorUtility.GetDateLessThanExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetDateLessThanOrEqualExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetDateLessThanOrEqualExpression
  nameWithType: OperatorUtility.GetDateLessThanOrEqualExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetDateLessThanOrEqualExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetGreaterThanOrEqualExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetGreaterThanOrEqualExpression
  nameWithType: OperatorUtility.GetGreaterThanOrEqualExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetGreaterThanOrEqualExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetLessThanExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetLessThanExpression
  nameWithType: OperatorUtility.GetLessThanExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetLessThanOrEqualExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_
  name: GetLessThanOrEqualExpression
  nameWithType: OperatorUtility.GetLessThanOrEqualExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetLessThanOrEqualExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetIsNullExpression__1_System_Linq_Expressions_ParameterExpression_System_String_
  name: GetIsNullExpression
  nameWithType: OperatorUtility.GetIsNullExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNullExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetIsNotNullExpression__1_System_Linq_Expressions_ParameterExpression_System_String_
  name: GetIsNotNullExpression
  nameWithType: OperatorUtility.GetIsNotNullExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetIsNotNullExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetInExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Collections_IEnumerable_
  name: GetInExpression
  nameWithType: OperatorUtility.GetInExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetInExpression
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetNotInExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Collections_IEnumerable_
  name: GetNotInExpression
  nameWithType: OperatorUtility.GetNotInExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetNotInExpression
- uid: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression*
  commentId: Overload:Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression
  href: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression.html#Innova_Data_StructuredSearch_Operators_OperatorUtility_GetBetweenExpression__1_System_Linq_Expressions_ParameterExpression_System_String_System_Object_System_Object_
  name: GetBetweenExpression
  nameWithType: OperatorUtility.GetBetweenExpression
  fullName: Innova.Data.StructuredSearch.Operators.OperatorUtility.GetBetweenExpression
memberLayout: SeparatePages
