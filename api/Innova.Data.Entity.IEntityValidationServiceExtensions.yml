### YamlMime:ManagedReference
items:
- uid: Innova.Data.Entity.IEntityValidationServiceExtensions
  commentId: T:Innova.Data.Entity.IEntityValidationServiceExtensions
  id: IEntityValidationServiceExtensions
  parent: Innova.Data.Entity
  children:
  - Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid``2(Innova.Data.Entity.IEntityValidationService{``0,``1},``0,FluentValidation.Results.ValidationResult)
  - Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException``2(Innova.Data.Entity.IEntityValidationService{``0,``1},Innova.Data.Entity.IPrimaryKey)
  langs:
  - csharp
  - vb
  name: IEntityValidationServiceExtensions
  nameWithType: IEntityValidationServiceExtensions
  fullName: Innova.Data.Entity.IEntityValidationServiceExtensions
  type: Class
  source:
    id: IEntityValidationServiceExtensions
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityValidationServiceExtensions.cs
    startLine: 11
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Extension methods for IEntityValidationService.
  example: []
  syntax:
    content: public static class IEntityValidationServiceExtensions
    content.vb: Public Module IEntityValidationServiceExtensions
  inheritance:
  - System.Object
- uid: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid``2(Innova.Data.Entity.IEntityValidationService{``0,``1},``0,FluentValidation.Results.ValidationResult)
  commentId: M:Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid``2(Innova.Data.Entity.IEntityValidationService{``0,``1},``0,FluentValidation.Results.ValidationResult)
  id: IsEntityValid``2(Innova.Data.Entity.IEntityValidationService{``0,``1},``0,FluentValidation.Results.ValidationResult)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityValidationServiceExtensions
  langs:
  - csharp
  - vb
  name: IsEntityValid<T, TInterface>(IEntityValidationService<T, TInterface>, T, ValidationResult)
  nameWithType: IEntityValidationServiceExtensions.IsEntityValid<T, TInterface>(IEntityValidationService<T, TInterface>, T, ValidationResult)
  fullName: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid<T, TInterface>(Innova.Data.Entity.IEntityValidationService<T, TInterface>, T, FluentValidation.Results.ValidationResult)
  type: Method
  source:
    id: IsEntityValid
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityValidationServiceExtensions.cs
    startLine: 27
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Checks if the entity is valid based on the validation result.
  remarks: >-
    The entity is considered valid if it is not null and the validation result is valid.

    If the entity implements IDataErrorInfo, it is also checked if the Error property is empty.

    If the entity implements INotifyDataErrorInfo, it is also checked if it has no errors.
  example: []
  syntax:
    content: 'public static bool IsEntityValid<T, TInterface>(this IEntityValidationService<T, TInterface> service, T entity, ValidationResult validationResult) where T : class where TInterface : class'
    parameters:
    - id: service
      type: Innova.Data.Entity.IEntityValidationService{{T},{TInterface}}
      description: The IEntityValidationService instance.
    - id: entity
      type: '{T}'
      description: The entity to validate.
    - id: validationResult
      type: FluentValidation.Results.ValidationResult
      description: The validation result.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TInterface
      description: The interface type of the entity.
    return:
      type: System.Boolean
      description: True if the entity is valid, otherwise false.
    content.vb: Public Shared Function IsEntityValid(Of T As Class, TInterface As Class)(service As IEntityValidationService(Of T, TInterface), entity As T, validationResult As ValidationResult) As Boolean
  overload: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid*
  nameWithType.vb: IEntityValidationServiceExtensions.IsEntityValid(Of T, TInterface)(IEntityValidationService(Of T, TInterface), T, ValidationResult)
  fullName.vb: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid(Of T, TInterface)(Innova.Data.Entity.IEntityValidationService(Of T, TInterface), T, FluentValidation.Results.ValidationResult)
  name.vb: IsEntityValid(Of T, TInterface)(IEntityValidationService(Of T, TInterface), T, ValidationResult)
- uid: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException``2(Innova.Data.Entity.IEntityValidationService{``0,``1},Innova.Data.Entity.IPrimaryKey)
  commentId: M:Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException``2(Innova.Data.Entity.IEntityValidationService{``0,``1},Innova.Data.Entity.IPrimaryKey)
  id: IsPrimaryKeysValidAndThrowException``2(Innova.Data.Entity.IEntityValidationService{``0,``1},Innova.Data.Entity.IPrimaryKey)
  isExtensionMethod: true
  parent: Innova.Data.Entity.IEntityValidationServiceExtensions
  langs:
  - csharp
  - vb
  name: IsPrimaryKeysValidAndThrowException<T, TInterface>(IEntityValidationService<T, TInterface>, IPrimaryKey)
  nameWithType: IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException<T, TInterface>(IEntityValidationService<T, TInterface>, IPrimaryKey)
  fullName: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException<T, TInterface>(Innova.Data.Entity.IEntityValidationService<T, TInterface>, Innova.Data.Entity.IPrimaryKey)
  type: Method
  source:
    id: IsPrimaryKeysValidAndThrowException
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\IEntityValidationServiceExtensions.cs
    startLine: 59
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Checks if the primary keys are valid and throws an exception if they are not.
  example: []
  syntax:
    content: 'public static void IsPrimaryKeysValidAndThrowException<T, TInterface>(this IEntityValidationService<T, TInterface> service, IPrimaryKey primaryKeys) where T : class where TInterface : class'
    parameters:
    - id: service
      type: Innova.Data.Entity.IEntityValidationService{{T},{TInterface}}
      description: The IEntityValidationService instance.
    - id: primaryKeys
      type: Innova.Data.Entity.IPrimaryKey
      description: The primary keys to validate.
    typeParameters:
    - id: T
      description: The type of the entity.
    - id: TInterface
      description: The interface type of the entity.
    content.vb: Public Shared Sub IsPrimaryKeysValidAndThrowException(Of T As Class, TInterface As Class)(service As IEntityValidationService(Of T, TInterface), primaryKeys As IPrimaryKey)
  overload: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if the primary keys are not valid.
  nameWithType.vb: IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException(Of T, TInterface)(IEntityValidationService(Of T, TInterface), IPrimaryKey)
  fullName.vb: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException(Of T, TInterface)(Innova.Data.Entity.IEntityValidationService(Of T, TInterface), Innova.Data.Entity.IPrimaryKey)
  name.vb: IsPrimaryKeysValidAndThrowException(Of T, TInterface)(IEntityValidationService(Of T, TInterface), IPrimaryKey)
references:
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid*
  commentId: Overload:Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid
  href: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid.html#Innova_Data_Entity_IEntityValidationServiceExtensions_IsEntityValid__2_Innova_Data_Entity_IEntityValidationService___0___1____0_FluentValidation_Results_ValidationResult_
  name: IsEntityValid
  nameWithType: IEntityValidationServiceExtensions.IsEntityValid
  fullName: Innova.Data.Entity.IEntityValidationServiceExtensions.IsEntityValid
- uid: Innova.Data.Entity.IEntityValidationService{{T},{TInterface}}
  commentId: T:Innova.Data.Entity.IEntityValidationService{``0,``1}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.IEntityValidationService`2
  href: Innova.Data.Entity.IEntityValidationService-2.html
  name: IEntityValidationService<T, TInterface>
  nameWithType: IEntityValidationService<T, TInterface>
  fullName: Innova.Data.Entity.IEntityValidationService<T, TInterface>
  nameWithType.vb: IEntityValidationService(Of T, TInterface)
  fullName.vb: Innova.Data.Entity.IEntityValidationService(Of T, TInterface)
  name.vb: IEntityValidationService(Of T, TInterface)
  spec.csharp:
  - uid: Innova.Data.Entity.IEntityValidationService`2
    name: IEntityValidationService
    href: Innova.Data.Entity.IEntityValidationService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TInterface
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IEntityValidationService`2
    name: IEntityValidationService
    href: Innova.Data.Entity.IEntityValidationService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TInterface
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: FluentValidation.Results.ValidationResult
  commentId: T:FluentValidation.Results.ValidationResult
  parent: FluentValidation.Results
  isExternal: true
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: FluentValidation.Results.ValidationResult
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innova.Data.Entity.IEntityValidationService`2
  commentId: T:Innova.Data.Entity.IEntityValidationService`2
  href: Innova.Data.Entity.IEntityValidationService-2.html
  name: IEntityValidationService<T, TEntityInterface>
  nameWithType: IEntityValidationService<T, TEntityInterface>
  fullName: Innova.Data.Entity.IEntityValidationService<T, TEntityInterface>
  nameWithType.vb: IEntityValidationService(Of T, TEntityInterface)
  fullName.vb: Innova.Data.Entity.IEntityValidationService(Of T, TEntityInterface)
  name.vb: IEntityValidationService(Of T, TEntityInterface)
  spec.csharp:
  - uid: Innova.Data.Entity.IEntityValidationService`2
    name: IEntityValidationService
    href: Innova.Data.Entity.IEntityValidationService-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TEntityInterface
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.IEntityValidationService`2
    name: IEntityValidationService
    href: Innova.Data.Entity.IEntityValidationService-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TEntityInterface
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: FluentValidation.Results
  commentId: N:FluentValidation.Results
  isExternal: true
  name: FluentValidation.Results
  nameWithType: FluentValidation.Results
  fullName: FluentValidation.Results
  spec.csharp:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: FluentValidation
    name: FluentValidation
    isExternal: true
  - name: .
  - uid: FluentValidation.Results
    name: Results
    isExternal: true
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException*
  commentId: Overload:Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException
  href: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException.html#Innova_Data_Entity_IEntityValidationServiceExtensions_IsPrimaryKeysValidAndThrowException__2_Innova_Data_Entity_IEntityValidationService___0___1__Innova_Data_Entity_IPrimaryKey_
  name: IsPrimaryKeysValidAndThrowException
  nameWithType: IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException
  fullName: Innova.Data.Entity.IEntityValidationServiceExtensions.IsPrimaryKeysValidAndThrowException
- uid: Innova.Data.Entity.IPrimaryKey
  commentId: T:Innova.Data.Entity.IPrimaryKey
  parent: Innova.Data.Entity
  href: Innova.Data.Entity.IPrimaryKey.html
  name: IPrimaryKey
  nameWithType: IPrimaryKey
  fullName: Innova.Data.Entity.IPrimaryKey
memberLayout: SeparatePages
