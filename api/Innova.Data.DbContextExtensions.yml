### YamlMime:ManagedReference
items:
- uid: Innova.Data.DbContextExtensions
  commentId: T:Innova.Data.DbContextExtensions
  id: DbContextExtensions
  parent: Innova.Data
  children:
  - Innova.Data.DbContextExtensions.ConvertToSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  - Innova.Data.DbContextExtensions.ConvertToSqlParameter(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  - Innova.Data.DbContextExtensions.GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - Innova.Data.DbContextExtensions.GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.String)
  - Innova.Data.DbContextExtensions.GetKeyNames``1(Microsoft.EntityFrameworkCore.DbContext)
  - Innova.Data.DbContextExtensions.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.List{``0})
  - Innova.Data.DbContextExtensions.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  - Innova.Data.DbContextExtensions.GetPrimaryKey(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.String)
  - Innova.Data.DbContextExtensions.GetPrimaryKeysSelector``1(Microsoft.EntityFrameworkCore.DbContext)
  - Innova.Data.DbContextExtensions.GetSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  - Innova.Data.DbContextExtensions.GetTableName``1(Microsoft.EntityFrameworkCore.DbContext)
  - Innova.Data.DbContextExtensions.RawSql``1(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])
  - Innova.Data.DbContextExtensions.Set(Microsoft.EntityFrameworkCore.DbContext,System.Type)
  langs:
  - csharp
  - vb
  name: DbContextExtensions
  nameWithType: DbContextExtensions
  fullName: Innova.Data.DbContextExtensions
  type: Class
  source:
    id: DbContextExtensions
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 19
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Extension methods for DbContext.
  example: []
  syntax:
    content: public static class DbContextExtensions
    content.vb: Public Module DbContextExtensions
  inheritance:
  - System.Object
- uid: Innova.Data.DbContextExtensions.Set(Microsoft.EntityFrameworkCore.DbContext,System.Type)
  commentId: M:Innova.Data.DbContextExtensions.Set(Microsoft.EntityFrameworkCore.DbContext,System.Type)
  id: Set(Microsoft.EntityFrameworkCore.DbContext,System.Type)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: Set(DbContext, Type)
  nameWithType: DbContextExtensions.Set(DbContext, Type)
  fullName: Innova.Data.DbContextExtensions.Set(Microsoft.EntityFrameworkCore.DbContext, System.Type)
  type: Method
  source:
    id: Set
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 27
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets a queryable set for the specified entity type.
  example: []
  syntax:
    content: public static IQueryable<object> Set(this DbContext _context, Type t)
    parameters:
    - id: _context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: t
      type: System.Type
      description: The entity type.
    return:
      type: System.Linq.IQueryable{System.Object}
      description: A queryable set for the specified entity type.
    content.vb: Public Shared Function [Set](_context As DbContext, t As Type) As IQueryable(Of Object)
  overload: Innova.Data.DbContextExtensions.Set*
- uid: Innova.Data.DbContextExtensions.GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Innova.Data.DbContextExtensions.GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetColumnName<TEntity>(DbContext, Expression<Func<TEntity, object>>)
  nameWithType: DbContextExtensions.GetColumnName<TEntity>(DbContext, Expression<Func<TEntity, object>>)
  fullName: Innova.Data.DbContextExtensions.GetColumnName<TEntity>(Microsoft.EntityFrameworkCore.DbContext, System.Linq.Expressions.Expression<System.Func<TEntity, object>>)
  type: Method
  source:
    id: GetColumnName
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 40
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Resolves the column name from the entity model based on the property selector.
  example: []
  syntax:
    content: 'public static string GetColumnName<TEntity>(this DbContext dbContext, Expression<Func<TEntity, object>> columnSelector) where TEntity : class'
    parameters:
    - id: dbContext
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: columnSelector
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
      description: An expression selecting the column.
    typeParameters:
    - id: TEntity
    return:
      type: System.String
      description: The database column name.
    content.vb: Public Shared Function GetColumnName(Of TEntity As Class)(dbContext As DbContext, columnSelector As Expression(Of Func(Of TEntity, Object))) As String
  overload: Innova.Data.DbContextExtensions.GetColumnName*
  nameWithType.vb: DbContextExtensions.GetColumnName(Of TEntity)(DbContext, Expression(Of Func(Of TEntity, Object)))
  fullName.vb: Innova.Data.DbContextExtensions.GetColumnName(Of TEntity)(Microsoft.EntityFrameworkCore.DbContext, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object)))
  name.vb: GetColumnName(Of TEntity)(DbContext, Expression(Of Func(Of TEntity, Object)))
- uid: Innova.Data.DbContextExtensions.GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.String)
  commentId: M:Innova.Data.DbContextExtensions.GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.String)
  id: GetColumnName``1(Microsoft.EntityFrameworkCore.DbContext,System.String)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetColumnName<TEntity>(DbContext, string)
  nameWithType: DbContextExtensions.GetColumnName<TEntity>(DbContext, string)
  fullName: Innova.Data.DbContextExtensions.GetColumnName<TEntity>(Microsoft.EntityFrameworkCore.DbContext, string)
  type: Method
  source:
    id: GetColumnName
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 57
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  syntax:
    content: 'public static string GetColumnName<TEntity>(this DbContext dbContext, string propertyName) where TEntity : class'
    parameters:
    - id: dbContext
      type: Microsoft.EntityFrameworkCore.DbContext
    - id: propertyName
      type: System.String
    typeParameters:
    - id: TEntity
    return:
      type: System.String
    content.vb: Public Shared Function GetColumnName(Of TEntity As Class)(dbContext As DbContext, propertyName As String) As String
  overload: Innova.Data.DbContextExtensions.GetColumnName*
  nameWithType.vb: DbContextExtensions.GetColumnName(Of TEntity)(DbContext, String)
  fullName.vb: Innova.Data.DbContextExtensions.GetColumnName(Of TEntity)(Microsoft.EntityFrameworkCore.DbContext, String)
  name.vb: GetColumnName(Of TEntity)(DbContext, String)
- uid: Innova.Data.DbContextExtensions.GetTableName``1(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Innova.Data.DbContextExtensions.GetTableName``1(Microsoft.EntityFrameworkCore.DbContext)
  id: GetTableName``1(Microsoft.EntityFrameworkCore.DbContext)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetTableName<TEntity>(DbContext)
  nameWithType: DbContextExtensions.GetTableName<TEntity>(DbContext)
  fullName: Innova.Data.DbContextExtensions.GetTableName<TEntity>(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    id: GetTableName
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 84
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the fully qualified table name (including schema) for the specified entity type.
  example: []
  syntax:
    content: 'public static string GetTableName<TEntity>(this DbContext context) where TEntity : class'
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    typeParameters:
    - id: TEntity
      description: The entity type.
    return:
      type: System.String
      description: The fully qualified table name in the format [Schema].[TableName].
    content.vb: Public Shared Function GetTableName(Of TEntity As Class)(context As DbContext) As String
  overload: Innova.Data.DbContextExtensions.GetTableName*
  nameWithType.vb: DbContextExtensions.GetTableName(Of TEntity)(DbContext)
  fullName.vb: Innova.Data.DbContextExtensions.GetTableName(Of TEntity)(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: GetTableName(Of TEntity)(DbContext)
- uid: Innova.Data.DbContextExtensions.RawSql``1(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])
  commentId: M:Innova.Data.DbContextExtensions.RawSql``1(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])
  id: RawSql``1(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: RawSql<T>(DbContext, string, params KeyValuePair<string, object>[])
  nameWithType: DbContextExtensions.RawSql<T>(DbContext, string, params KeyValuePair<string, object>[])
  fullName: Innova.Data.DbContextExtensions.RawSql<T>(Microsoft.EntityFrameworkCore.DbContext, string, params System.Collections.Generic.KeyValuePair<string, object>[])
  type: Method
  source:
    id: RawSql
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 177
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Executes a raw SQL query and maps the result to a list of objects.
  example: []
  syntax:
    content: public static List<T> RawSql<T>(this DbContext dbContext, string sql, params KeyValuePair<string, object>[] parameters)
    parameters:
    - id: dbContext
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: sql
      type: System.String
      description: The SQL query.
    - id: parameters
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
      description: The parameters for the SQL query.
    typeParameters:
    - id: T
      description: The type of the objects.
    return:
      type: System.Collections.Generic.List{{T}}
      description: A list of objects mapped from the SQL query result.
    content.vb: Public Shared Function RawSql(Of T)(dbContext As DbContext, sql As String, ParamArray parameters As KeyValuePair(Of String, Object)()) As List(Of T)
  overload: Innova.Data.DbContextExtensions.RawSql*
  nameWithType.vb: DbContextExtensions.RawSql(Of T)(DbContext, String, ParamArray KeyValuePair(Of String, Object)())
  fullName.vb: Innova.Data.DbContextExtensions.RawSql(Of T)(Microsoft.EntityFrameworkCore.DbContext, String, ParamArray System.Collections.Generic.KeyValuePair(Of String, Object)())
  name.vb: RawSql(Of T)(DbContext, String, ParamArray KeyValuePair(Of String, Object)())
- uid: Innova.Data.DbContextExtensions.ConvertToSqlParameter(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  commentId: M:Innova.Data.DbContextExtensions.ConvertToSqlParameter(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  id: ConvertToSqlParameter(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: ConvertToSqlParameter(DbContext, IPrimaryKey)
  nameWithType: DbContextExtensions.ConvertToSqlParameter(DbContext, IPrimaryKey)
  fullName: Innova.Data.DbContextExtensions.ConvertToSqlParameter(Microsoft.EntityFrameworkCore.DbContext, Innova.Data.Entity.IPrimaryKey)
  type: Method
  source:
    id: ConvertToSqlParameter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 222
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Converts the primary keys to a list of SqlParameters.
  example: []
  syntax:
    content: public static List<SqlParameter> ConvertToSqlParameter(this DbContext ctx, IPrimaryKey keys)
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: keys
      type: Innova.Data.Entity.IPrimaryKey
      description: The primary keys.
    return:
      type: System.Collections.Generic.List{Microsoft.Data.SqlClient.SqlParameter}
      description: A list of SqlParameters representing the primary keys.
    content.vb: Public Shared Function ConvertToSqlParameter(ctx As DbContext, keys As IPrimaryKey) As List(Of SqlParameter)
  overload: Innova.Data.DbContextExtensions.ConvertToSqlParameter*
- uid: Innova.Data.DbContextExtensions.GetPrimaryKey(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.String)
  commentId: M:Innova.Data.DbContextExtensions.GetPrimaryKey(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.String)
  id: GetPrimaryKey(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.String)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetPrimaryKey(DbContext, Type, string)
  nameWithType: DbContextExtensions.GetPrimaryKey(DbContext, Type, string)
  fullName: Innova.Data.DbContextExtensions.GetPrimaryKey(Microsoft.EntityFrameworkCore.DbContext, System.Type, string)
  type: Method
  source:
    id: GetPrimaryKey
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 239
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the primary key for the specified entity type and key string.
  example: []
  syntax:
    content: public static IPrimaryKey GetPrimaryKey(this DbContext ctx, Type entityType, string key)
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: entityType
      type: System.Type
      description: The entity type.
    - id: key
      type: System.String
      description: The key string.
    return:
      type: Innova.Data.Entity.IPrimaryKey
      description: The primary key as an IPrimaryKey instance.
    content.vb: Public Shared Function GetPrimaryKey(ctx As DbContext, entityType As Type, key As String) As IPrimaryKey
  overload: Innova.Data.DbContextExtensions.GetPrimaryKey*
  nameWithType.vb: DbContextExtensions.GetPrimaryKey(DbContext, Type, String)
  fullName.vb: Innova.Data.DbContextExtensions.GetPrimaryKey(Microsoft.EntityFrameworkCore.DbContext, System.Type, String)
  name.vb: GetPrimaryKey(DbContext, Type, String)
- uid: Innova.Data.DbContextExtensions.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  commentId: M:Innova.Data.DbContextExtensions.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  id: GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetKeys<T>(DbContext, T)
  nameWithType: DbContextExtensions.GetKeys<T>(DbContext, T)
  fullName: Innova.Data.DbContextExtensions.GetKeys<T>(Microsoft.EntityFrameworkCore.DbContext, T)
  type: Method
  source:
    id: GetKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 272
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the primary keys for the specified entity.
  example: []
  syntax:
    content: 'public static PrimaryKeys<T> GetKeys<T>(this DbContext ctx, T entity) where T : class'
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: entity
      type: '{T}'
      description: The entity.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: Innova.Data.Entity.PrimaryKeys{{T}}
      description: The primary keys as a PrimaryKeys instance.
    content.vb: Public Shared Function GetKeys(Of T As Class)(ctx As DbContext, entity As T) As PrimaryKeys(Of T)
  overload: Innova.Data.DbContextExtensions.GetKeys*
  nameWithType.vb: DbContextExtensions.GetKeys(Of T)(DbContext, T)
  fullName.vb: Innova.Data.DbContextExtensions.GetKeys(Of T)(Microsoft.EntityFrameworkCore.DbContext, T)
  name.vb: GetKeys(Of T)(DbContext, T)
- uid: Innova.Data.DbContextExtensions.GetSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  commentId: M:Innova.Data.DbContextExtensions.GetSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  id: GetSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,``0)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetSqlKeys<T>(DbContext, T)
  nameWithType: DbContextExtensions.GetSqlKeys<T>(DbContext, T)
  fullName: Innova.Data.DbContextExtensions.GetSqlKeys<T>(Microsoft.EntityFrameworkCore.DbContext, T)
  type: Method
  source:
    id: GetSqlKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 307
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the SQL primary keys for the specified entity.
  example: []
  syntax:
    content: 'public static PrimaryKeys<T> GetSqlKeys<T>(this DbContext ctx, T entity) where T : class'
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: entity
      type: '{T}'
      description: The entity.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: Innova.Data.Entity.PrimaryKeys{{T}}
      description: The SQL primary keys as a PrimaryKeys instance.
    content.vb: Public Shared Function GetSqlKeys(Of T As Class)(ctx As DbContext, entity As T) As PrimaryKeys(Of T)
  overload: Innova.Data.DbContextExtensions.GetSqlKeys*
  nameWithType.vb: DbContextExtensions.GetSqlKeys(Of T)(DbContext, T)
  fullName.vb: Innova.Data.DbContextExtensions.GetSqlKeys(Of T)(Microsoft.EntityFrameworkCore.DbContext, T)
  name.vb: GetSqlKeys(Of T)(DbContext, T)
- uid: Innova.Data.DbContextExtensions.ConvertToSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  commentId: M:Innova.Data.DbContextExtensions.ConvertToSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  id: ConvertToSqlKeys``1(Microsoft.EntityFrameworkCore.DbContext,Innova.Data.Entity.IPrimaryKey)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: ConvertToSqlKeys<T>(DbContext, IPrimaryKey)
  nameWithType: DbContextExtensions.ConvertToSqlKeys<T>(DbContext, IPrimaryKey)
  fullName: Innova.Data.DbContextExtensions.ConvertToSqlKeys<T>(Microsoft.EntityFrameworkCore.DbContext, Innova.Data.Entity.IPrimaryKey)
  type: Method
  source:
    id: ConvertToSqlKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 331
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Converts the primary keys to SQL primary keys.
  example: []
  syntax:
    content: 'public static PrimaryKeys<T> ConvertToSqlKeys<T>(this DbContext ctx, IPrimaryKey primaryKeys) where T : class'
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: primaryKeys
      type: Innova.Data.Entity.IPrimaryKey
      description: The primary keys.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: Innova.Data.Entity.PrimaryKeys{{T}}
      description: The SQL primary keys as a PrimaryKeys instance.
    content.vb: Public Shared Function ConvertToSqlKeys(Of T As Class)(ctx As DbContext, primaryKeys As IPrimaryKey) As PrimaryKeys(Of T)
  overload: Innova.Data.DbContextExtensions.ConvertToSqlKeys*
  nameWithType.vb: DbContextExtensions.ConvertToSqlKeys(Of T)(DbContext, IPrimaryKey)
  fullName.vb: Innova.Data.DbContextExtensions.ConvertToSqlKeys(Of T)(Microsoft.EntityFrameworkCore.DbContext, Innova.Data.Entity.IPrimaryKey)
  name.vb: ConvertToSqlKeys(Of T)(DbContext, IPrimaryKey)
- uid: Innova.Data.DbContextExtensions.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.List{``0})
  commentId: M:Innova.Data.DbContextExtensions.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.List{``0})
  id: GetKeys``1(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.List{``0})
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetKeys<T>(DbContext, List<T>)
  nameWithType: DbContextExtensions.GetKeys<T>(DbContext, List<T>)
  fullName: Innova.Data.DbContextExtensions.GetKeys<T>(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.List<T>)
  type: Method
  source:
    id: GetKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 357
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the primary keys for the specified entities.
  example: []
  syntax:
    content: 'public static List<PrimaryKeys<T>> GetKeys<T>(this DbContext ctx, List<T> entities) where T : class'
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    - id: entities
      type: System.Collections.Generic.List{{T}}
      description: The entities.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}
      description: The primary keys as a list of PrimaryKeys instances.
    content.vb: Public Shared Function GetKeys(Of T As Class)(ctx As DbContext, entities As List(Of T)) As List(Of PrimaryKeys(Of T))
  overload: Innova.Data.DbContextExtensions.GetKeys*
  nameWithType.vb: DbContextExtensions.GetKeys(Of T)(DbContext, List(Of T))
  fullName.vb: Innova.Data.DbContextExtensions.GetKeys(Of T)(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.List(Of T))
  name.vb: GetKeys(Of T)(DbContext, List(Of T))
- uid: Innova.Data.DbContextExtensions.GetKeyNames``1(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Innova.Data.DbContextExtensions.GetKeyNames``1(Microsoft.EntityFrameworkCore.DbContext)
  id: GetKeyNames``1(Microsoft.EntityFrameworkCore.DbContext)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetKeyNames<T>(DbContext)
  nameWithType: DbContextExtensions.GetKeyNames<T>(DbContext)
  fullName: Innova.Data.DbContextExtensions.GetKeyNames<T>(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    id: GetKeyNames
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 401
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the names of the primary keys for the specified entity type.
  example: []
  syntax:
    content: 'public static List<string> GetKeyNames<T>(this DbContext ctx) where T : class'
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Collections.Generic.List{System.String}
      description: The names of the primary keys.
    content.vb: Public Shared Function GetKeyNames(Of T As Class)(ctx As DbContext) As List(Of String)
  overload: Innova.Data.DbContextExtensions.GetKeyNames*
  nameWithType.vb: DbContextExtensions.GetKeyNames(Of T)(DbContext)
  fullName.vb: Innova.Data.DbContextExtensions.GetKeyNames(Of T)(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: GetKeyNames(Of T)(DbContext)
- uid: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector``1(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Innova.Data.DbContextExtensions.GetPrimaryKeysSelector``1(Microsoft.EntityFrameworkCore.DbContext)
  id: GetPrimaryKeysSelector``1(Microsoft.EntityFrameworkCore.DbContext)
  isExtensionMethod: true
  parent: Innova.Data.DbContextExtensions
  langs:
  - csharp
  - vb
  name: GetPrimaryKeysSelector<T>(DbContext)
  nameWithType: DbContextExtensions.GetPrimaryKeysSelector<T>(DbContext)
  fullName: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector<T>(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    id: GetPrimaryKeysSelector
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Extensions\DbContextExtensions.cs
    startLine: 419
  assemblies:
  - Innova.Data
  namespace: Innova.Data
  summary: Gets the primary keys selector expression for the specified entity type.
  example: []
  syntax:
    content: 'public static Expression<Func<T, T>> GetPrimaryKeysSelector<T>(this DbContext ctx) where T : class'
    parameters:
    - id: ctx
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The DbContext instance.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},{T}}}
      description: The primary keys selector expression.
    content.vb: Public Shared Function GetPrimaryKeysSelector(Of T As Class)(ctx As DbContext) As Expression(Of Func(Of T, T))
  overload: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector*
  nameWithType.vb: DbContextExtensions.GetPrimaryKeysSelector(Of T)(DbContext)
  fullName.vb: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector(Of T)(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: GetPrimaryKeysSelector(Of T)(DbContext)
references:
- uid: Innova.Data
  commentId: N:Innova.Data
  href: Innova.html
  name: Innova.Data
  nameWithType: Innova.Data
  fullName: Innova.Data
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.DbContextExtensions.Set*
  commentId: Overload:Innova.Data.DbContextExtensions.Set
  href: Innova.Data.DbContextExtensions.Set.html#Innova_Data_DbContextExtensions_Set_Microsoft_EntityFrameworkCore_DbContext_System_Type_
  name: Set
  nameWithType: DbContextExtensions.Set
  fullName: Innova.Data.DbContextExtensions.Set
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.IQueryable{System.Object}
  commentId: T:System.Linq.IQueryable{System.Object}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<object>
  nameWithType: IQueryable<object>
  fullName: System.Linq.IQueryable<object>
  nameWithType.vb: IQueryable(Of Object)
  fullName.vb: System.Linq.IQueryable(Of Object)
  name.vb: IQueryable(Of Object)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: Innova.Data.DbContextExtensions.GetColumnName*
  commentId: Overload:Innova.Data.DbContextExtensions.GetColumnName
  href: Innova.Data.DbContextExtensions.GetColumnName.html#Innova_Data_DbContextExtensions_GetColumnName__1_Microsoft_EntityFrameworkCore_DbContext_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetColumnName
  nameWithType: DbContextExtensions.GetColumnName
  fullName: Innova.Data.DbContextExtensions.GetColumnName
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, object>>
  nameWithType: Expression<Func<TEntity, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, object>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Object))
  name.vb: Expression(Of Func(Of TEntity, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Innova.Data.DbContextExtensions.GetTableName*
  commentId: Overload:Innova.Data.DbContextExtensions.GetTableName
  href: Innova.Data.DbContextExtensions.GetTableName.html#Innova_Data_DbContextExtensions_GetTableName__1_Microsoft_EntityFrameworkCore_DbContext_
  name: GetTableName
  nameWithType: DbContextExtensions.GetTableName
  fullName: Innova.Data.DbContextExtensions.GetTableName
- uid: Innova.Data.DbContextExtensions.RawSql*
  commentId: Overload:Innova.Data.DbContextExtensions.RawSql
  href: Innova.Data.DbContextExtensions.RawSql.html#Innova_Data_DbContextExtensions_RawSql__1_Microsoft_EntityFrameworkCore_DbContext_System_String_System_Collections_Generic_KeyValuePair_System_String_System_Object____
  name: RawSql
  nameWithType: DbContextExtensions.RawSql
  fullName: Innova.Data.DbContextExtensions.RawSql
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<string, object>[]
  nameWithType: KeyValuePair<string, object>[]
  fullName: System.Collections.Generic.KeyValuePair<string, object>[]
  nameWithType.vb: KeyValuePair(Of String, Object)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of String, Object)()
  name.vb: KeyValuePair(Of String, Object)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: (
  - name: )
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innova.Data.DbContextExtensions.ConvertToSqlParameter*
  commentId: Overload:Innova.Data.DbContextExtensions.ConvertToSqlParameter
  href: Innova.Data.DbContextExtensions.ConvertToSqlParameter.html#Innova_Data_DbContextExtensions_ConvertToSqlParameter_Microsoft_EntityFrameworkCore_DbContext_Innova_Data_Entity_IPrimaryKey_
  name: ConvertToSqlParameter
  nameWithType: DbContextExtensions.ConvertToSqlParameter
  fullName: Innova.Data.DbContextExtensions.ConvertToSqlParameter
- uid: Innova.Data.Entity.IPrimaryKey
  commentId: T:Innova.Data.Entity.IPrimaryKey
  parent: Innova.Data.Entity
  href: Innova.Data.Entity.IPrimaryKey.html
  name: IPrimaryKey
  nameWithType: IPrimaryKey
  fullName: Innova.Data.Entity.IPrimaryKey
- uid: System.Collections.Generic.List{Microsoft.Data.SqlClient.SqlParameter}
  commentId: T:System.Collections.Generic.List{Microsoft.Data.SqlClient.SqlParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SqlParameter>
  nameWithType: List<SqlParameter>
  fullName: System.Collections.Generic.List<Microsoft.Data.SqlClient.SqlParameter>
  nameWithType.vb: List(Of SqlParameter)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Data.SqlClient.SqlParameter)
  name.vb: List(Of SqlParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Microsoft.Data.SqlClient.SqlParameter
    name: SqlParameter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlparameter
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Data.SqlClient.SqlParameter
    name: SqlParameter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlparameter
  - name: )
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: Innova.Data.DbContextExtensions.GetPrimaryKey*
  commentId: Overload:Innova.Data.DbContextExtensions.GetPrimaryKey
  href: Innova.Data.DbContextExtensions.GetPrimaryKey.html#Innova_Data_DbContextExtensions_GetPrimaryKey_Microsoft_EntityFrameworkCore_DbContext_System_Type_System_String_
  name: GetPrimaryKey
  nameWithType: DbContextExtensions.GetPrimaryKey
  fullName: Innova.Data.DbContextExtensions.GetPrimaryKey
- uid: Innova.Data.DbContextExtensions.GetKeys*
  commentId: Overload:Innova.Data.DbContextExtensions.GetKeys
  href: Innova.Data.DbContextExtensions.GetKeys.html#Innova_Data_DbContextExtensions_GetKeys__1_Microsoft_EntityFrameworkCore_DbContext___0_
  name: GetKeys
  nameWithType: DbContextExtensions.GetKeys
  fullName: Innova.Data.DbContextExtensions.GetKeys
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innova.Data.Entity.PrimaryKeys{{T}}
  commentId: T:Innova.Data.Entity.PrimaryKeys{``0}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.PrimaryKeys`1
  href: Innova.Data.Entity.PrimaryKeys-1.html
  name: PrimaryKeys<T>
  nameWithType: PrimaryKeys<T>
  fullName: Innova.Data.Entity.PrimaryKeys<T>
  nameWithType.vb: PrimaryKeys(Of T)
  fullName.vb: Innova.Data.Entity.PrimaryKeys(Of T)
  name.vb: PrimaryKeys(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innova.Data.Entity.PrimaryKeys`1
  commentId: T:Innova.Data.Entity.PrimaryKeys`1
  href: Innova.Data.Entity.PrimaryKeys-1.html
  name: PrimaryKeys<T>
  nameWithType: PrimaryKeys<T>
  fullName: Innova.Data.Entity.PrimaryKeys<T>
  nameWithType.vb: PrimaryKeys(Of T)
  fullName.vb: Innova.Data.Entity.PrimaryKeys(Of T)
  name.vb: PrimaryKeys(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.DbContextExtensions.GetSqlKeys*
  commentId: Overload:Innova.Data.DbContextExtensions.GetSqlKeys
  href: Innova.Data.DbContextExtensions.GetSqlKeys.html#Innova_Data_DbContextExtensions_GetSqlKeys__1_Microsoft_EntityFrameworkCore_DbContext___0_
  name: GetSqlKeys
  nameWithType: DbContextExtensions.GetSqlKeys
  fullName: Innova.Data.DbContextExtensions.GetSqlKeys
- uid: Innova.Data.DbContextExtensions.ConvertToSqlKeys*
  commentId: Overload:Innova.Data.DbContextExtensions.ConvertToSqlKeys
  href: Innova.Data.DbContextExtensions.ConvertToSqlKeys.html#Innova_Data_DbContextExtensions_ConvertToSqlKeys__1_Microsoft_EntityFrameworkCore_DbContext_Innova_Data_Entity_IPrimaryKey_
  name: ConvertToSqlKeys
  nameWithType: DbContextExtensions.ConvertToSqlKeys
  fullName: Innova.Data.DbContextExtensions.ConvertToSqlKeys
- uid: System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{{T}}}
  commentId: T:System.Collections.Generic.List{Innova.Data.Entity.PrimaryKeys{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PrimaryKeys<T>>
  nameWithType: List<PrimaryKeys<T>>
  fullName: System.Collections.Generic.List<Innova.Data.Entity.PrimaryKeys<T>>
  nameWithType.vb: List(Of PrimaryKeys(Of T))
  fullName.vb: System.Collections.Generic.List(Of Innova.Data.Entity.PrimaryKeys(Of T))
  name.vb: List(Of PrimaryKeys(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Data.DbContextExtensions.GetKeyNames*
  commentId: Overload:Innova.Data.DbContextExtensions.GetKeyNames
  href: Innova.Data.DbContextExtensions.GetKeyNames.html#Innova_Data_DbContextExtensions_GetKeyNames__1_Microsoft_EntityFrameworkCore_DbContext_
  name: GetKeyNames
  nameWithType: DbContextExtensions.GetKeyNames
  fullName: Innova.Data.DbContextExtensions.GetKeyNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector*
  commentId: Overload:Innova.Data.DbContextExtensions.GetPrimaryKeysSelector
  href: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector.html#Innova_Data_DbContextExtensions_GetPrimaryKeysSelector__1_Microsoft_EntityFrameworkCore_DbContext_
  name: GetPrimaryKeysSelector
  nameWithType: DbContextExtensions.GetPrimaryKeysSelector
  fullName: Innova.Data.DbContextExtensions.GetPrimaryKeysSelector
- uid: System.Linq.Expressions.Expression{System.Func{{T},{T}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, T>>
  nameWithType: Expression<Func<T, T>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, T>>
  nameWithType.vb: Expression(Of Func(Of T, T))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, T))
  name.vb: Expression(Of Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
memberLayout: SeparatePages
