### YamlMime:ManagedReference
items:
- uid: Innova.Data.Validation.BaseValidator`1
  commentId: T:Innova.Data.Validation.BaseValidator`1
  id: BaseValidator`1
  parent: Innova.Data.Validation
  children:
  - Innova.Data.Validation.BaseValidator`1.#ctor
  - Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
  - Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  - Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  - Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  - Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  - Innova.Data.Validation.BaseValidator`1.InsertRulesets
  - Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
  - Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  - Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  - Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  - Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: BaseValidator<T>
  nameWithType: BaseValidator<T>
  fullName: Innova.Data.Validation.BaseValidator<T>
  type: Class
  source:
    id: BaseValidator
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 17
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Base class for entity validators.
  example: []
  syntax:
    content: 'public abstract class BaseValidator<T> : AbstractValidator<T>, IEnumerable<IValidationRule>, IEnumerable, IEntityValidator<T>, IValidator<T>, IValidator, IEntityValidator'
    typeParameters:
    - id: T
      description: The type of entity being validated.
    content.vb: Public MustInherit Class BaseValidator(Of T) Inherits AbstractValidator(Of T) Implements IEnumerable(Of IValidationRule), IEnumerable, IEntityValidator(Of T), IValidator(Of T), IValidator, IEntityValidator
  inheritance:
  - System.Object
  - FluentValidation.AbstractValidator{{T}}
  derivedClasses:
  - Innova.Prism.Library.StructuredSearch.Views.EntitySavedQueryValidator
  implements:
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  - System.Collections.IEnumerable
  - Innova.Data.Validation.IEntityValidator{{T}}
  - FluentValidation.IValidator{{T}}
  - FluentValidation.IValidator
  - Innova.Data.Validation.IEntityValidator
  inheritedMembers:
  - FluentValidation.AbstractValidator{{T}}.Validate({T})
  - FluentValidation.AbstractValidator{{T}}.ValidateAsync({T},System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{{T}}.Validate(FluentValidation.ValidationContext{{T}})
  - FluentValidation.AbstractValidator{{T}}.ValidateAsync(FluentValidation.ValidationContext{{T}},System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{{T}}.CreateDescriptor
  - FluentValidation.AbstractValidator{{T}}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}})
  - FluentValidation.AbstractValidator{{T}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}},System.Func{{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{{T}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}},System.Func{{T},{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{{T}}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TElement}}}})
  - FluentValidation.AbstractValidator{{T}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{{T}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{T},{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{{T}}.RuleSet(System.String,System.Action)
  - FluentValidation.AbstractValidator{{T}}.When(System.Func{{T},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{{T}}.When(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{{T}}.Unless(System.Func{{T},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{{T}}.Unless(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{{T}}.WhenAsync(System.Func{{T},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{{T}}.WhenAsync(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{{T}}.UnlessAsync(System.Func{{T},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{{T}}.UnlessAsync(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{{T}}.Include(FluentValidation.IValidator{{T}})
  - FluentValidation.AbstractValidator{{T}}.Include``1(System.Func{{T},{TValidator}})
  - FluentValidation.AbstractValidator{{T}}.GetEnumerator
  - FluentValidation.AbstractValidator{{T}}.EnsureInstanceNotNull(System.Object)
  - FluentValidation.AbstractValidator{{T}}.PreValidate(FluentValidation.ValidationContext{{T}},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{{T}}.RaiseValidationException(FluentValidation.ValidationContext{{T}},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{{T}}.OnRuleAdded(FluentValidation.IValidationRule{{T}})
  - FluentValidation.AbstractValidator{{T}}.CascadeMode
  - FluentValidation.AbstractValidator{{T}}.ClassLevelCascadeMode
  - FluentValidation.AbstractValidator{{T}}.RuleLevelCascadeMode
  extensionMethods:
  - FluentValidation.IValidator.Innova.Data.Validation.IValidatorExtensions.GetCaption``1(System.Linq.Expressions.Expression{System.Func{{EntityType},System.Object}})
  - FluentValidation.IValidator.Innova.Data.Validation.IValidatorExtensions.GetCaption``1(System.String)
  - FluentValidation.IValidator{`0}.Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(System.Linq.Expressions.Expression{System.Func{{T},System.Object}})
  - FluentValidation.IValidator{`0}.Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(System.String,System.Linq.Expressions.Expression{System.Func{{T},System.Object}})
  - FluentValidation.IValidator{`0}.Innova.Data.Validation.ValidationExtensions.Validate``1({T},System.String,System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[])
  - FluentValidation.IValidator{`0}.Innova.Data.Validation.ValidationExtensions.Validate``1({T},System.String,System.String)
  - FluentValidation.IValidator{`0}.Innova.Data.Validation.ValidationExtensions.Validate``1({T},System.String,System.String[])
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Data.ExtensionMethods.Batch``1(System.Int32)
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Action{FluentValidation.IValidationRule})
  - System.Collections.IEnumerable.Innova.Data.ExtensionMethods.FastCast``1
  - System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count
  - System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Int32)
  - System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Int32)
  nameWithType.vb: BaseValidator(Of T)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T)
  name.vb: BaseValidator(Of T)
- uid: Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  commentId: P:Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  id: IgnoreProperties
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: IgnoreProperties
  nameWithType: BaseValidator<T>.IgnoreProperties
  fullName: Innova.Data.Validation.BaseValidator<T>.IgnoreProperties
  type: Property
  source:
    id: IgnoreProperties
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 22
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Gets or sets the list of properties to ignore during validation.
  example: []
  syntax:
    content: protected List<string> IgnoreProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Property IgnoreProperties As List(Of String)
  overload: Innova.Data.Validation.BaseValidator`1.IgnoreProperties*
  nameWithType.vb: BaseValidator(Of T).IgnoreProperties
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IgnoreProperties
- uid: Innova.Data.Validation.BaseValidator`1.InsertRulesets
  commentId: P:Innova.Data.Validation.BaseValidator`1.InsertRulesets
  id: InsertRulesets
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: InsertRulesets
  nameWithType: BaseValidator<T>.InsertRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.InsertRulesets
  type: Property
  source:
    id: InsertRulesets
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 27
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Gets or sets the list of rulesets for entity insertion.
  example: []
  syntax:
    content: protected List<string> InsertRulesets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Property InsertRulesets As List(Of String)
  overload: Innova.Data.Validation.BaseValidator`1.InsertRulesets*
  nameWithType.vb: BaseValidator(Of T).InsertRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).InsertRulesets
- uid: Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  commentId: P:Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  id: UpdateRulesets
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: UpdateRulesets
  nameWithType: BaseValidator<T>.UpdateRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.UpdateRulesets
  type: Property
  source:
    id: UpdateRulesets
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 32
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Gets or sets the list of rulesets for entity update.
  example: []
  syntax:
    content: protected List<string> UpdateRulesets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Property UpdateRulesets As List(Of String)
  overload: Innova.Data.Validation.BaseValidator`1.UpdateRulesets*
  nameWithType.vb: BaseValidator(Of T).UpdateRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).UpdateRulesets
- uid: Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  commentId: P:Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  id: DeleteRulesets
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: DeleteRulesets
  nameWithType: BaseValidator<T>.DeleteRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.DeleteRulesets
  type: Property
  source:
    id: DeleteRulesets
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 37
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Gets or sets the list of rulesets for entity deletion.
  example: []
  syntax:
    content: protected List<string> DeleteRulesets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Property DeleteRulesets As List(Of String)
  overload: Innova.Data.Validation.BaseValidator`1.DeleteRulesets*
  nameWithType.vb: BaseValidator(Of T).DeleteRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).DeleteRulesets
- uid: Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  commentId: P:Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  id: DefaultRuleSet
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: DefaultRuleSet
  nameWithType: BaseValidator<T>.DefaultRuleSet
  fullName: Innova.Data.Validation.BaseValidator<T>.DefaultRuleSet
  type: Property
  source:
    id: DefaultRuleSet
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 42
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Gets or sets the default ruleset for validation.
  example: []
  syntax:
    content: public ValidationRuleSetEnum DefaultRuleSet { get; set; }
    parameters: []
    return:
      type: Innova.Data.Validation.ValidationRuleSetEnum
    content.vb: Public Property DefaultRuleSet As ValidationRuleSetEnum
  overload: Innova.Data.Validation.BaseValidator`1.DefaultRuleSet*
  implements:
  - Innova.Data.Validation.IEntityValidator.DefaultRuleSet
  nameWithType.vb: BaseValidator(Of T).DefaultRuleSet
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).DefaultRuleSet
- uid: Innova.Data.Validation.BaseValidator`1.#ctor
  commentId: M:Innova.Data.Validation.BaseValidator`1.#ctor
  id: '#ctor'
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: BaseValidator()
  nameWithType: BaseValidator<T>.BaseValidator()
  fullName: Innova.Data.Validation.BaseValidator<T>.BaseValidator()
  type: Constructor
  source:
    id: .ctor
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 47
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Initializes a new instance of the <xref href="Innova.Data.Validation.BaseValidator%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BaseValidator()
    content.vb: Public Sub New()
  overload: Innova.Data.Validation.BaseValidator`1.#ctor*
  nameWithType.vb: BaseValidator(Of T).New()
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).New()
  name.vb: New()
- uid: Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Validation.BaseValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  id: Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: Validate(T, ValidationRuleSetEnum, CancellationToken)
  nameWithType: BaseValidator<T>.Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName: Innova.Data.Validation.BaseValidator<T>.Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  type: Method
  source:
    id: Validate
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 66
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Validates the specified entity using the specified validation ruleset.
  example: []
  syntax:
    content: public virtual Task<ValidationResult> Validate(T entity, ValidationRuleSetEnum validationRuleSetEnum, CancellationToken cancellationToken = default)
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to validate.
    - id: validationRuleSetEnum
      type: Innova.Data.Validation.ValidationRuleSetEnum
      description: The validation ruleset to use.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{FluentValidation.Results.ValidationResult}
      description: The validation result.
    content.vb: Public Overridable Function Validate(entity As T, validationRuleSetEnum As ValidationRuleSetEnum, cancellationToken As CancellationToken = Nothing) As Task(Of ValidationResult)
  overload: Innova.Data.Validation.BaseValidator`1.Validate*
  implements:
  - Innova.Data.Validation.IEntityValidator{{T}}.Validate({T},Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  nameWithType.vb: BaseValidator(Of T).Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
- uid: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
  commentId: M:Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset``1(``0,System.String)
  id: ValidateByDefaultRuleset``1(``0,System.String)
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType: BaseValidator<T>.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  fullName: Innova.Data.Validation.BaseValidator<T>.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  type: Method
  source:
    id: ValidateByDefaultRuleset
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 83
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Validates the specified entity property using the default validation ruleset.
  example: []
  syntax:
    content: public Task<ValidationResult> ValidateByDefaultRuleset<TEntity>(TEntity entity, string propertyName = null)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity to validate.
    - id: propertyName
      type: System.String
      description: The name of the property to validate.
    typeParameters:
    - id: TEntity
      description: The type of entity to validate.
    return:
      type: System.Threading.Tasks.Task{FluentValidation.Results.ValidationResult}
      description: The validation result.
    content.vb: Public Function ValidateByDefaultRuleset(Of TEntity)(entity As TEntity, propertyName As String = Nothing) As Task(Of ValidationResult)
  overload: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset*
  implements:
  - Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1({TEntity},System.String)
  nameWithType.vb: BaseValidator(Of T).ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  name.vb: ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
- uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: AddPropertyToIgnore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: AddPropertyToIgnore<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: BaseValidator<T>.AddPropertyToIgnore<TProperty>(Expression<Func<T, TProperty>>)
  fullName: Innova.Data.Validation.BaseValidator<T>.AddPropertyToIgnore<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  type: Method
  source:
    id: AddPropertyToIgnore
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 114
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Adds the specified property to the list of properties to ignore during validation.
  example: []
  syntax:
    content: protected void AddPropertyToIgnore<TProperty>(Expression<Func<T, TProperty>> expression)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}}
      description: The expression representing the property.
    typeParameters:
    - id: TProperty
      description: The type of the property.
    content.vb: Protected Sub AddPropertyToIgnore(Of TProperty)(expression As Expression(Of Func(Of T, TProperty)))
  overload: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore*
  nameWithType.vb: BaseValidator(Of T).AddPropertyToIgnore(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).AddPropertyToIgnore(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: AddPropertyToIgnore(Of TProperty)(Expression(Of Func(Of T, TProperty)))
- uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
  commentId: M:Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore(System.String)
  id: AddPropertyToIgnore(System.String)
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: AddPropertyToIgnore(string)
  nameWithType: BaseValidator<T>.AddPropertyToIgnore(string)
  fullName: Innova.Data.Validation.BaseValidator<T>.AddPropertyToIgnore(string)
  type: Method
  source:
    id: AddPropertyToIgnore
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 124
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Adds the specified property to the list of properties to ignore during validation.
  example: []
  syntax:
    content: protected void AddPropertyToIgnore(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property.
    content.vb: Protected Sub AddPropertyToIgnore(propertyName As String)
  overload: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore*
  nameWithType.vb: BaseValidator(Of T).AddPropertyToIgnore(String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).AddPropertyToIgnore(String)
  name.vb: AddPropertyToIgnore(String)
- uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: IsPropertyIgnored``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: IsPropertyIgnored<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: BaseValidator<T>.IsPropertyIgnored<TProperty>(Expression<Func<T, TProperty>>)
  fullName: Innova.Data.Validation.BaseValidator<T>.IsPropertyIgnored<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  type: Method
  source:
    id: IsPropertyIgnored
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 135
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Determines whether the specified property is ignored during validation.
  example: []
  syntax:
    content: protected bool IsPropertyIgnored<TProperty>(Expression<Func<T, TProperty>> expression)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}}
      description: The expression representing the property.
    typeParameters:
    - id: TProperty
      description: The type of the property.
    return:
      type: System.Boolean
      description: <code>true</code> if the property is ignored; otherwise, <code>false</code>.
    content.vb: Protected Function IsPropertyIgnored(Of TProperty)(expression As Expression(Of Func(Of T, TProperty))) As Boolean
  overload: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored*
  nameWithType.vb: BaseValidator(Of T).IsPropertyIgnored(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IsPropertyIgnored(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: IsPropertyIgnored(Of TProperty)(Expression(Of Func(Of T, TProperty)))
- uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
  commentId: M:Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored(System.String)
  id: IsPropertyIgnored(System.String)
  parent: Innova.Data.Validation.BaseValidator`1
  langs:
  - csharp
  - vb
  name: IsPropertyIgnored(string)
  nameWithType: BaseValidator<T>.IsPropertyIgnored(string)
  fullName: Innova.Data.Validation.BaseValidator<T>.IsPropertyIgnored(string)
  type: Method
  source:
    id: IsPropertyIgnored
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Validation\BaseValidator.cs
    startLine: 146
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Validation
  summary: Determines whether the specified property is ignored during validation.
  example: []
  syntax:
    content: protected bool IsPropertyIgnored(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the property.
    return:
      type: System.Boolean
      description: <code>true</code> if the property is ignored; otherwise, <code>false</code>.
    content.vb: Protected Function IsPropertyIgnored(name As String) As Boolean
  overload: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored*
  nameWithType.vb: BaseValidator(Of T).IsPropertyIgnored(String)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IsPropertyIgnored(String)
  name.vb: IsPropertyIgnored(String)
references:
- uid: Innova.Data.Validation
  commentId: N:Innova.Data.Validation
  href: Innova.html
  name: Innova.Data.Validation
  nameWithType: Innova.Data.Validation
  fullName: Innova.Data.Validation
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Validation
    name: Validation
    href: Innova.Data.Validation.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Validation
    name: Validation
    href: Innova.Data.Validation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FluentValidation.AbstractValidator{{T}}
  commentId: T:FluentValidation.AbstractValidator{`0}
  parent: FluentValidation
  definition: FluentValidation.AbstractValidator`1
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FluentValidation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FluentValidation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  commentId: T:System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IValidationRule>
  nameWithType: IEnumerable<IValidationRule>
  fullName: System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>
  nameWithType.vb: IEnumerable(Of IValidationRule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule)
  name.vb: IEnumerable(Of IValidationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Innova.Data.Validation.IEntityValidator{{T}}
  commentId: T:Innova.Data.Validation.IEntityValidator{`0}
  parent: Innova.Data.Validation
  definition: Innova.Data.Validation.IEntityValidator`1
  href: Innova.Data.Validation.IEntityValidator-1.html
  name: IEntityValidator<T>
  nameWithType: IEntityValidator<T>
  fullName: Innova.Data.Validation.IEntityValidator<T>
  nameWithType.vb: IEntityValidator(Of T)
  fullName.vb: Innova.Data.Validation.IEntityValidator(Of T)
  name.vb: IEntityValidator(Of T)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
    href: Innova.Data.Validation.IEntityValidator-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
    href: Innova.Data.Validation.IEntityValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation.IValidator{{T}}
  commentId: T:FluentValidation.IValidator{`0}
  parent: FluentValidation
  definition: FluentValidation.IValidator`1
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FluentValidation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FluentValidation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation.IValidator
  commentId: T:FluentValidation.IValidator
  parent: FluentValidation
  isExternal: true
  name: IValidator
  nameWithType: IValidator
  fullName: FluentValidation.IValidator
- uid: Innova.Data.Validation.IEntityValidator
  commentId: T:Innova.Data.Validation.IEntityValidator
  parent: Innova.Data.Validation
  href: Innova.Data.Validation.IEntityValidator.html
  name: IEntityValidator
  nameWithType: IEntityValidator
  fullName: Innova.Data.Validation.IEntityValidator
- uid: FluentValidation.AbstractValidator{{T}}.Validate({T})
  commentId: M:FluentValidation.AbstractValidator{`0}.Validate(`0)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Validate(`0)
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FluentValidation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.ValidateAsync({T},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{`0}.ValidateAsync(`0,System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Validate(FluentValidation.ValidationContext{{T}})
  commentId: M:FluentValidation.AbstractValidator{`0}.Validate(FluentValidation.ValidationContext{`0})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FluentValidation.AbstractValidator<T>.Validate(FluentValidation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(FluentValidation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.ValidateAsync(FluentValidation.ValidationContext{{T}},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{`0}.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(FluentValidation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator{`0}.CreateDescriptor
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}})
  commentId: M:FluentValidation.AbstractValidator{`0}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}},System.Func{{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}},System.Func{{T},{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<T, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of T, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TElement}}}})
  commentId: M:FluentValidation.AbstractValidator{`0}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{T},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{T},{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<T, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of T, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.RuleSet(System.String,System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<T>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<T>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.When(System.Func{{T},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.When(System.Func{`0,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.When(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Unless(System.Func{{T},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.Unless(System.Func{`0,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Unless(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.WhenAsync(System.Func{{T},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.WhenAsync(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.UnlessAsync(System.Func{{T},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.UnlessAsync(System.Func{{T},FluentValidation.ValidationContext{{T}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Include(FluentValidation.IValidator{{T}})
  commentId: M:FluentValidation.AbstractValidator{`0}.Include(FluentValidation.IValidator{`0})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FluentValidation.AbstractValidator<T>.Include(FluentValidation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(FluentValidation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.Include``1(System.Func{{T},{TValidator}})
  commentId: M:FluentValidation.AbstractValidator{`0}.Include``1(System.Func{`0,``0})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FluentValidation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator{`0}.GetEnumerator
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator{`0}.EnsureInstanceNotNull(System.Object)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<T>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<T>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.PreValidate(FluentValidation.ValidationContext{{T}},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{`0}.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.PreValidate(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).PreValidate(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.RaiseValidationException(FluentValidation.ValidationContext{{T}},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{`0}.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.RaiseValidationException(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RaiseValidationException(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.OnRuleAdded(FluentValidation.IValidationRule{{T}})
  commentId: M:FluentValidation.AbstractValidator{`0}.OnRuleAdded(FluentValidation.IValidationRule{`0})
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  name: OnRuleAdded(IValidationRule<T>)
  nameWithType: AbstractValidator<T>.OnRuleAdded(IValidationRule<T>)
  fullName: FluentValidation.AbstractValidator<T>.OnRuleAdded(FluentValidation.IValidationRule<T>)
  nameWithType.vb: AbstractValidator(Of T).OnRuleAdded(IValidationRule(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).OnRuleAdded(FluentValidation.IValidationRule(Of T))
  name.vb: OnRuleAdded(IValidationRule(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{`0}.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{`0}.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{{T}}.CascadeMode
  commentId: P:FluentValidation.AbstractValidator{`0}.CascadeMode
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.CascadeMode
  name: CascadeMode
  nameWithType: AbstractValidator<T>.CascadeMode
  fullName: FluentValidation.AbstractValidator<T>.CascadeMode
  nameWithType.vb: AbstractValidator(Of T).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).CascadeMode
- uid: FluentValidation.AbstractValidator{{T}}.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{`0}.ClassLevelCascadeMode
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<T>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator{{T}}.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{`0}.RuleLevelCascadeMode
  parent: FluentValidation.AbstractValidator{{T}}
  definition: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<T>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleLevelCascadeMode
- uid: FluentValidation.IValidator.Innova.Data.Validation.IValidatorExtensions.GetCaption``1(System.Linq.Expressions.Expression{System.Func{{EntityType},System.Object}})
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Innova.Data.Validation.IValidatorExtensions
  definition: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetCaption<EntityType>(IValidator, Expression<Func<EntityType, object>>)
  nameWithType: IValidatorExtensions.GetCaption<EntityType>(IValidator, Expression<Func<EntityType, object>>)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetCaption<EntityType>(FluentValidation.IValidator, System.Linq.Expressions.Expression<System.Func<EntityType, object>>)
  nameWithType.vb: IValidatorExtensions.GetCaption(Of EntityType)(IValidator, Expression(Of Func(Of EntityType, Object)))
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetCaption(Of EntityType)(FluentValidation.IValidator, System.Linq.Expressions.Expression(Of System.Func(Of EntityType, Object)))
  name.vb: GetCaption(Of EntityType)(IValidator, Expression(Of Func(Of EntityType, Object)))
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: <
  - name: EntityType
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: EntityType
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: EntityType
  - name: )
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: EntityType
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.IValidator.Innova.Data.Validation.IValidatorExtensions.GetCaption``1(System.String)
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
  parent: Innova.Data.Validation.IValidatorExtensions
  definition: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
  href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_String_
  name: GetCaption<EntityType>(IValidator, string)
  nameWithType: IValidatorExtensions.GetCaption<EntityType>(IValidator, string)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetCaption<EntityType>(FluentValidation.IValidator, string)
  nameWithType.vb: IValidatorExtensions.GetCaption(Of EntityType)(IValidator, String)
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetCaption(Of EntityType)(FluentValidation.IValidator, String)
  name.vb: GetCaption(Of EntityType)(IValidator, String)
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_String_
  - name: <
  - name: EntityType
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: EntityType
  - name: )
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FluentValidation.IValidator{`0}.Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(System.Linq.Expressions.Expression{System.Func{{T},System.Object}})
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Innova.Data.Validation.IValidatorExtensions
  definition: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessageForRelatedDeletion__1_FluentValidation_IValidator___0__System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetErrorMessageForRelatedDeletion<T>(IValidator<T>, Expression<Func<T, object>>)
  nameWithType: IValidatorExtensions.GetErrorMessageForRelatedDeletion<T>(IValidator<T>, Expression<Func<T, object>>)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion<T>(FluentValidation.IValidator<T>, System.Linq.Expressions.Expression<System.Func<T, object>>)
  nameWithType.vb: IValidatorExtensions.GetErrorMessageForRelatedDeletion(Of T)(IValidator(Of T), Expression(Of Func(Of T, Object)))
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion(Of T)(FluentValidation.IValidator(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)))
  name.vb: GetErrorMessageForRelatedDeletion(Of T)(IValidator(Of T), Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
    name: GetErrorMessageForRelatedDeletion
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessageForRelatedDeletion__1_FluentValidation_IValidator___0__System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
    name: GetErrorMessageForRelatedDeletion
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessageForRelatedDeletion__1_FluentValidation_IValidator___0__System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.IValidator{`0}.Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(System.String,System.Linq.Expressions.Expression{System.Func{{T},System.Object}})
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: Innova.Data.Validation.IValidatorExtensions
  definition: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessage__1_FluentValidation_IValidator___0__System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetErrorMessage<T>(IValidator<T>, string, Expression<Func<T, object>>)
  nameWithType: IValidatorExtensions.GetErrorMessage<T>(IValidator<T>, string, Expression<Func<T, object>>)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage<T>(FluentValidation.IValidator<T>, string, System.Linq.Expressions.Expression<System.Func<T, object>>)
  nameWithType.vb: IValidatorExtensions.GetErrorMessage(Of T)(IValidator(Of T), String, Expression(Of Func(Of T, Object)))
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage(Of T)(FluentValidation.IValidator(Of T), String, System.Linq.Expressions.Expression(Of System.Func(Of T, Object)))
  name.vb: GetErrorMessage(Of T)(IValidator(Of T), String, Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{`0},System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
    name: GetErrorMessage
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessage__1_FluentValidation_IValidator___0__System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{`0},System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
    name: GetErrorMessage
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessage__1_FluentValidation_IValidator___0__System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.IValidator{`0}.Innova.Data.Validation.ValidationExtensions.Validate``1({T},System.String,System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[])
  commentId: M:Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  parent: Innova.Data.Validation.ValidationExtensions
  definition: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object_____
  name: Validate<T>(IValidator<T>, T, string, Expression<Func<T, object>>[])
  nameWithType: ValidationExtensions.Validate<T>(IValidator<T>, T, string, Expression<Func<T, object>>[])
  fullName: Innova.Data.Validation.ValidationExtensions.Validate<T>(FluentValidation.IValidator<T>, T, string, System.Linq.Expressions.Expression<System.Func<T, object>>[])
  nameWithType.vb: ValidationExtensions.Validate(Of T)(IValidator(Of T), T, String, Expression(Of Func(Of T, Object))())
  fullName.vb: Innova.Data.Validation.ValidationExtensions.Validate(Of T)(FluentValidation.IValidator(Of T), T, String, System.Linq.Expressions.Expression(Of System.Func(Of T, Object))())
  name.vb: Validate(Of T)(IValidator(Of T), T, String, Expression(Of Func(Of T, Object))())
  spec.csharp:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{`0},`0,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object_____
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{`0},`0,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object_____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
  - name: )
- uid: FluentValidation.IValidator{`0}.Innova.Data.Validation.ValidationExtensions.Validate``1({T},System.String,System.String)
  commentId: M:Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String)
  parent: Innova.Data.Validation.ValidationExtensions
  definition: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String)
  href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String_
  name: Validate<T>(IValidator<T>, T, string, string)
  nameWithType: ValidationExtensions.Validate<T>(IValidator<T>, T, string, string)
  fullName: Innova.Data.Validation.ValidationExtensions.Validate<T>(FluentValidation.IValidator<T>, T, string, string)
  nameWithType.vb: ValidationExtensions.Validate(Of T)(IValidator(Of T), T, String, String)
  fullName.vb: Innova.Data.Validation.ValidationExtensions.Validate(Of T)(FluentValidation.IValidator(Of T), T, String, String)
  name.vb: Validate(Of T)(IValidator(Of T), T, String, String)
  spec.csharp:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{`0},`0,System.String,System.String)
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{`0},`0,System.String,System.String)
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: FluentValidation.IValidator{`0}.Innova.Data.Validation.ValidationExtensions.Validate``1({T},System.String,System.String[])
  commentId: M:Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String[])
  parent: Innova.Data.Validation.ValidationExtensions
  definition: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String[])
  href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String___
  name: Validate<T>(IValidator<T>, T, string, string[])
  nameWithType: ValidationExtensions.Validate<T>(IValidator<T>, T, string, string[])
  fullName: Innova.Data.Validation.ValidationExtensions.Validate<T>(FluentValidation.IValidator<T>, T, string, string[])
  nameWithType.vb: ValidationExtensions.Validate(Of T)(IValidator(Of T), T, String, String())
  fullName.vb: Innova.Data.Validation.ValidationExtensions.Validate(Of T)(FluentValidation.IValidator(Of T), T, String, String())
  name.vb: Validate(Of T)(IValidator(Of T), T, String, String())
  spec.csharp:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{`0},`0,System.String,System.String[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{`0},`0,System.String,System.String[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Data.ExtensionMethods.Batch``1(System.Int32)
  commentId: M:Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: Innova.Data.ExtensionMethods
  definition: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  name: Batch<IValidationRule>(IEnumerable<IValidationRule>, int)
  nameWithType: ExtensionMethods.Batch<IValidationRule>(IEnumerable<IValidationRule>, int)
  fullName: Innova.Data.ExtensionMethods.Batch<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>, int)
  nameWithType.vb: ExtensionMethods.Batch(Of IValidationRule)(IEnumerable(Of IValidationRule), Integer)
  fullName.vb: Innova.Data.ExtensionMethods.Batch(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule), Integer)
  name.vb: Batch(Of IValidationRule)(IEnumerable(Of IValidationRule), Integer)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  name: AsBindingList<IValidationRule>(IEnumerable<IValidationRule>)
  nameWithType: ExtensionMethods.AsBindingList<IValidationRule>(IEnumerable<IValidationRule>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>)
  nameWithType.vb: ExtensionMethods.AsBindingList(Of IValidationRule)(IEnumerable(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule))
  name.vb: AsBindingList(Of IValidationRule)(IEnumerable(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  nameWithType: ExtensionMethods.ToObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>)
  nameWithType.vb: ExtensionMethods.ToObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule))
  name.vb: ToObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToReadOnlyObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  nameWithType: ExtensionMethods.ToReadOnlyObservableCollection<IValidationRule>(IEnumerable<IValidationRule>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>)
  nameWithType.vb: ExtensionMethods.ToReadOnlyObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule))
  name.vb: ToReadOnlyObservableCollection(Of IValidationRule)(IEnumerable(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}.Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Action{FluentValidation.IValidationRule})
  commentId: M:Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: Innova.Prism.Library.Extensions.CollectionExtensions
  definition: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  name: ForEach<IValidationRule>(IEnumerable<IValidationRule>, Action<IValidationRule>)
  nameWithType: CollectionExtensions.ForEach<IValidationRule>(IEnumerable<IValidationRule>, Action<IValidationRule>)
  fullName: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach<FluentValidation.IValidationRule>(System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>, System.Action<FluentValidation.IValidationRule>)
  nameWithType.vb: CollectionExtensions.ForEach(Of IValidationRule)(IEnumerable(Of IValidationRule), Action(Of IValidationRule))
  fullName.vb: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach(Of FluentValidation.IValidationRule)(System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule), System.Action(Of FluentValidation.IValidationRule))
  name.vb: ForEach(Of IValidationRule)(IEnumerable(Of IValidationRule), Action(Of IValidationRule))
  spec.csharp:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Action{FluentValidation.IValidationRule})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule},System.Action{FluentValidation.IValidationRule})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.IEnumerable.Innova.Data.ExtensionMethods.FastCast``1
  commentId: M:Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  parent: Innova.Data.ExtensionMethods
  definition: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  name: FastCast<T>(IEnumerable)
  nameWithType: ExtensionMethods.FastCast<T>(IEnumerable)
  fullName: Innova.Data.ExtensionMethods.FastCast<T>(System.Collections.IEnumerable)
  nameWithType.vb: ExtensionMethods.FastCast(Of T)(IEnumerable)
  fullName.vb: Innova.Data.ExtensionMethods.FastCast(Of T)(System.Collections.IEnumerable)
  name.vb: FastCast(Of T)(IEnumerable)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  name: Count(IEnumerable)
  nameWithType: ExtensionMethods.Count(IEnumerable)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  name: Skip(IEnumerable, int)
  nameWithType: ExtensionMethods.Skip(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Skip(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, Integer)
  name.vb: Skip(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.IEnumerable.Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  parent: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  definition: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  name: Take(IEnumerable, int)
  nameWithType: ExtensionMethods.Take(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Take(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, Integer)
  name.vb: Take(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FluentValidation.AbstractValidator`1
  commentId: T:FluentValidation.AbstractValidator`1
  isExternal: true
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FluentValidation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FluentValidation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Innova.Data.Validation.IEntityValidator`1
  commentId: T:Innova.Data.Validation.IEntityValidator`1
  href: Innova.Data.Validation.IEntityValidator-1.html
  name: IEntityValidator<T>
  nameWithType: IEntityValidator<T>
  fullName: Innova.Data.Validation.IEntityValidator<T>
  nameWithType.vb: IEntityValidator(Of T)
  fullName.vb: Innova.Data.Validation.IEntityValidator(Of T)
  name.vb: IEntityValidator(Of T)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
    href: Innova.Data.Validation.IEntityValidator-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator`1
    name: IEntityValidator
    href: Innova.Data.Validation.IEntityValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation.IValidator`1
  commentId: T:FluentValidation.IValidator`1
  isExternal: true
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FluentValidation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FluentValidation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(`0)
  commentId: M:FluentValidation.AbstractValidator`1.Validate(`0)
  isExternal: true
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FluentValidation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  isExternal: true
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FluentValidation.AbstractValidator<T>.Validate(FluentValidation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(FluentValidation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(FluentValidation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator`1.CreateDescriptor
  isExternal: true
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<T, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of T, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<T, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of T, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<T>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<T>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  isExternal: true
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FluentValidation.AbstractValidator<T>.Include(FluentValidation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(FluentValidation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  commentId: M:FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FluentValidation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  isExternal: true
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<T>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<T>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.PreValidate(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).PreValidate(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.RaiseValidationException(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RaiseValidationException(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  commentId: M:FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  isExternal: true
  name: OnRuleAdded(IValidationRule<T>)
  nameWithType: AbstractValidator<T>.OnRuleAdded(IValidationRule<T>)
  fullName: FluentValidation.AbstractValidator<T>.OnRuleAdded(FluentValidation.IValidationRule<T>)
  nameWithType.vb: AbstractValidator(Of T).OnRuleAdded(IValidationRule(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).OnRuleAdded(FluentValidation.IValidationRule(Of T))
  name.vb: OnRuleAdded(IValidationRule(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.CascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.CascadeMode
  isExternal: true
  name: CascadeMode
  nameWithType: AbstractValidator<T>.CascadeMode
  fullName: FluentValidation.AbstractValidator<T>.CascadeMode
  nameWithType.vb: AbstractValidator(Of T).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).CascadeMode
- uid: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  isExternal: true
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<T>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  isExternal: true
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<T>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleLevelCascadeMode
- uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExternal: true
  href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetCaption<EntityType>(IValidator, Expression<Func<EntityType, object>>)
  nameWithType: IValidatorExtensions.GetCaption<EntityType>(IValidator, Expression<Func<EntityType, object>>)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetCaption<EntityType>(FluentValidation.IValidator, System.Linq.Expressions.Expression<System.Func<EntityType, object>>)
  nameWithType.vb: IValidatorExtensions.GetCaption(Of EntityType)(IValidator, Expression(Of Func(Of EntityType, Object)))
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetCaption(Of EntityType)(FluentValidation.IValidator, System.Linq.Expressions.Expression(Of System.Func(Of EntityType, Object)))
  name.vb: GetCaption(Of EntityType)(IValidator, Expression(Of Func(Of EntityType, Object)))
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: <
  - name: EntityType
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: EntityType
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: EntityType
  - name: )
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: EntityType
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.IValidatorExtensions
  commentId: T:Innova.Data.Validation.IValidatorExtensions
  parent: Innova.Data.Validation
  href: Innova.Data.Validation.IValidatorExtensions.html
  name: IValidatorExtensions
  nameWithType: IValidatorExtensions
  fullName: Innova.Data.Validation.IValidatorExtensions
- uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
  isExternal: true
  href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_String_
  name: GetCaption<EntityType>(IValidator, string)
  nameWithType: IValidatorExtensions.GetCaption<EntityType>(IValidator, string)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetCaption<EntityType>(FluentValidation.IValidator, string)
  nameWithType.vb: IValidatorExtensions.GetCaption(Of EntityType)(IValidator, String)
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetCaption(Of EntityType)(FluentValidation.IValidator, String)
  name.vb: GetCaption(Of EntityType)(IValidator, String)
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_String_
  - name: <
  - name: EntityType
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetCaption``1(FluentValidation.IValidator,System.String)
    name: GetCaption
    href: Innova.Data.Validation.IValidatorExtensions.GetCaption.html#Innova_Data_Validation_IValidatorExtensions_GetCaption__1_FluentValidation_IValidator_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: EntityType
  - name: )
  - name: (
  - uid: FluentValidation.IValidator
    name: IValidator
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExternal: true
  href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessageForRelatedDeletion__1_FluentValidation_IValidator___0__System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetErrorMessageForRelatedDeletion<T>(IValidator<T>, Expression<Func<T, object>>)
  nameWithType: IValidatorExtensions.GetErrorMessageForRelatedDeletion<T>(IValidator<T>, Expression<Func<T, object>>)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion<T>(FluentValidation.IValidator<T>, System.Linq.Expressions.Expression<System.Func<T, object>>)
  nameWithType.vb: IValidatorExtensions.GetErrorMessageForRelatedDeletion(Of T)(IValidator(Of T), Expression(Of Func(Of T, Object)))
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion(Of T)(FluentValidation.IValidator(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)))
  name.vb: GetErrorMessageForRelatedDeletion(Of T)(IValidator(Of T), Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetErrorMessageForRelatedDeletion
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessageForRelatedDeletion__1_FluentValidation_IValidator___0__System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion``1(FluentValidation.IValidator{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetErrorMessageForRelatedDeletion
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessageForRelatedDeletion.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessageForRelatedDeletion__1_FluentValidation_IValidator___0__System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExternal: true
  href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessage__1_FluentValidation_IValidator___0__System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  name: GetErrorMessage<T>(IValidator<T>, string, Expression<Func<T, object>>)
  nameWithType: IValidatorExtensions.GetErrorMessage<T>(IValidator<T>, string, Expression<Func<T, object>>)
  fullName: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage<T>(FluentValidation.IValidator<T>, string, System.Linq.Expressions.Expression<System.Func<T, object>>)
  nameWithType.vb: IValidatorExtensions.GetErrorMessage(Of T)(IValidator(Of T), String, Expression(Of Func(Of T, Object)))
  fullName.vb: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage(Of T)(FluentValidation.IValidator(Of T), String, System.Linq.Expressions.Expression(Of System.Func(Of T, Object)))
  name.vb: GetErrorMessage(Of T)(IValidator(Of T), String, Expression(Of Func(Of T, Object)))
  spec.csharp:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetErrorMessage
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessage__1_FluentValidation_IValidator___0__System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage``1(FluentValidation.IValidator{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: GetErrorMessage
    href: Innova.Data.Validation.IValidatorExtensions.GetErrorMessage.html#Innova_Data_Validation_IValidatorExtensions_GetErrorMessage__1_FluentValidation_IValidator___0__System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: )
- uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExternal: true
  href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object_____
  name: Validate<T>(IValidator<T>, T, string, Expression<Func<T, object>>[])
  nameWithType: ValidationExtensions.Validate<T>(IValidator<T>, T, string, Expression<Func<T, object>>[])
  fullName: Innova.Data.Validation.ValidationExtensions.Validate<T>(FluentValidation.IValidator<T>, T, string, System.Linq.Expressions.Expression<System.Func<T, object>>[])
  nameWithType.vb: ValidationExtensions.Validate(Of T)(IValidator(Of T), T, String, Expression(Of Func(Of T, Object))())
  fullName.vb: Innova.Data.Validation.ValidationExtensions.Validate(Of T)(FluentValidation.IValidator(Of T), T, String, System.Linq.Expressions.Expression(Of System.Func(Of T, Object))())
  name.vb: Validate(Of T)(IValidator(Of T), T, String, Expression(Of Func(Of T, Object))())
  spec.csharp:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object_____
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_Linq_Expressions_Expression_System_Func___0_System_Object_____
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
  - name: )
  - name: (
  - name: )
  - name: )
- uid: Innova.Data.Validation.ValidationExtensions
  commentId: T:Innova.Data.Validation.ValidationExtensions
  parent: Innova.Data.Validation
  href: Innova.Data.Validation.ValidationExtensions.html
  name: ValidationExtensions
  nameWithType: ValidationExtensions
  fullName: Innova.Data.Validation.ValidationExtensions
- uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String)
  commentId: M:Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String)
  isExternal: true
  href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String_
  name: Validate<T>(IValidator<T>, T, string, string)
  nameWithType: ValidationExtensions.Validate<T>(IValidator<T>, T, string, string)
  fullName: Innova.Data.Validation.ValidationExtensions.Validate<T>(FluentValidation.IValidator<T>, T, string, string)
  nameWithType.vb: ValidationExtensions.Validate(Of T)(IValidator(Of T), T, String, String)
  fullName.vb: Innova.Data.Validation.ValidationExtensions.Validate(Of T)(FluentValidation.IValidator(Of T), T, String, String)
  name.vb: Validate(Of T)(IValidator(Of T), T, String, String)
  spec.csharp:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String)
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String)
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String[])
  commentId: M:Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String[])
  isExternal: true
  href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String___
  name: Validate<T>(IValidator<T>, T, string, string[])
  nameWithType: ValidationExtensions.Validate<T>(IValidator<T>, T, string, string[])
  fullName: Innova.Data.Validation.ValidationExtensions.Validate<T>(FluentValidation.IValidator<T>, T, string, string[])
  nameWithType.vb: ValidationExtensions.Validate(Of T)(IValidator(Of T), T, String, String())
  fullName.vb: Innova.Data.Validation.ValidationExtensions.Validate(Of T)(FluentValidation.IValidator(Of T), T, String, String())
  name.vb: Validate(Of T)(IValidator(Of T), T, String, String())
  spec.csharp:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.ValidationExtensions.Validate``1(FluentValidation.IValidator{``0},``0,System.String,System.String[])
    name: Validate
    href: Innova.Data.Validation.ValidationExtensions.Validate.html#Innova_Data_Validation_ValidationExtensions_Validate__1_FluentValidation_IValidator___0____0_System_String_System_String___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  name: Batch<T>(IEnumerable<T>, int)
  nameWithType: ExtensionMethods.Batch<T>(IEnumerable<T>, int)
  fullName: Innova.Data.ExtensionMethods.Batch<T>(System.Collections.Generic.IEnumerable<T>, int)
  nameWithType.vb: ExtensionMethods.Batch(Of T)(IEnumerable(Of T), Integer)
  fullName.vb: Innova.Data.ExtensionMethods.Batch(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer)
  name.vb: Batch(Of T)(IEnumerable(Of T), Integer)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch
    href: Innova.Data.ExtensionMethods.Batch.html#Innova_Data_ExtensionMethods_Batch__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Data.ExtensionMethods
  commentId: T:Innova.Data.ExtensionMethods
  parent: Innova.Data
  href: Innova.Data.ExtensionMethods.html
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Innova.Data.ExtensionMethods
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  name: AsBindingList<T>(IEnumerable<T>)
  nameWithType: ExtensionMethods.AsBindingList<T>(IEnumerable<T>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExtensionMethods.AsBindingList(Of T)(IEnumerable(Of T))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AsBindingList(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList``1(System.Collections.Generic.IEnumerable{``0})
    name: AsBindingList
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.AsBindingList.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_AsBindingList__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  commentId: T:Innova.Prism.Library.ExtensionMethods.ExtensionMethods
  parent: Innova.Prism.Library.ExtensionMethods
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.html
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToObservableCollection<T>(IEnumerable<T>)
  nameWithType: ExtensionMethods.ToObservableCollection<T>(IEnumerable<T>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExtensionMethods.ToObservableCollection(Of T)(IEnumerable(Of T))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToObservableCollection(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  name: ToReadOnlyObservableCollection<T>(IEnumerable<T>)
  nameWithType: ExtensionMethods.ToReadOnlyObservableCollection<T>(IEnumerable<T>)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExtensionMethods.ToReadOnlyObservableCollection(Of T)(IEnumerable(Of T))
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ToReadOnlyObservableCollection(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: ToReadOnlyObservableCollection
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.ToReadOnlyObservableCollection.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_ToReadOnlyObservableCollection__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: CollectionExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: CollectionExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach
    href: Innova.Prism.Library.Extensions.CollectionExtensions.ForEach.html#Innova_Prism_Library_Extensions_CollectionExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Prism.Library.Extensions.CollectionExtensions
  commentId: T:Innova.Prism.Library.Extensions.CollectionExtensions
  parent: Innova.Prism.Library.Extensions
  href: Innova.Prism.Library.Extensions.CollectionExtensions.html
  name: CollectionExtensions
  nameWithType: CollectionExtensions
  fullName: Innova.Prism.Library.Extensions.CollectionExtensions
- uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  commentId: M:Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
  isExternal: true
  href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  name: FastCast<T>(IEnumerable)
  nameWithType: ExtensionMethods.FastCast<T>(IEnumerable)
  fullName: Innova.Data.ExtensionMethods.FastCast<T>(System.Collections.IEnumerable)
  nameWithType.vb: ExtensionMethods.FastCast(Of T)(IEnumerable)
  fullName.vb: Innova.Data.ExtensionMethods.FastCast(Of T)(System.Collections.IEnumerable)
  name.vb: FastCast(Of T)(IEnumerable)
  spec.csharp:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Data.ExtensionMethods.FastCast``1(System.Collections.IEnumerable)
    name: FastCast
    href: Innova.Data.ExtensionMethods.FastCast.html#Innova_Data_ExtensionMethods_FastCast__1_System_Collections_IEnumerable_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  name: Count(IEnumerable)
  nameWithType: ExtensionMethods.Count(IEnumerable)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count(System.Collections.IEnumerable)
    name: Count
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Count.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Count_System_Collections_IEnumerable_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  name: Skip(IEnumerable, int)
  nameWithType: ExtensionMethods.Skip(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Skip(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable, Integer)
  name.vb: Skip(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip(System.Collections.IEnumerable,System.Int32)
    name: Skip
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Skip.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Skip_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  commentId: M:Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
  isExternal: true
  href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  name: Take(IEnumerable, int)
  nameWithType: ExtensionMethods.Take(IEnumerable, int)
  fullName: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, int)
  nameWithType.vb: ExtensionMethods.Take(IEnumerable, Integer)
  fullName.vb: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable, Integer)
  name.vb: Take(IEnumerable, Integer)
  spec.csharp:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take(System.Collections.IEnumerable,System.Int32)
    name: Take
    href: Innova.Prism.Library.ExtensionMethods.ExtensionMethods.Take.html#Innova_Prism_Library_ExtensionMethods_ExtensionMethods_Take_System_Collections_IEnumerable_System_Int32_
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innova.Data
  commentId: N:Innova.Data
  href: Innova.html
  name: Innova.Data
  nameWithType: Innova.Data
  fullName: Innova.Data
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
- uid: Innova.Prism.Library.ExtensionMethods
  commentId: N:Innova.Prism.Library.ExtensionMethods
  href: Innova.html
  name: Innova.Prism.Library.ExtensionMethods
  nameWithType: Innova.Prism.Library.ExtensionMethods
  fullName: Innova.Prism.Library.ExtensionMethods
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.ExtensionMethods
    name: ExtensionMethods
    href: Innova.Prism.Library.ExtensionMethods.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.ExtensionMethods
    name: ExtensionMethods
    href: Innova.Prism.Library.ExtensionMethods.html
- uid: Innova.Prism.Library.Extensions
  commentId: N:Innova.Prism.Library.Extensions
  href: Innova.html
  name: Innova.Prism.Library.Extensions
  nameWithType: Innova.Prism.Library.Extensions
  fullName: Innova.Prism.Library.Extensions
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Extensions
    name: Extensions
    href: Innova.Prism.Library.Extensions.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Extensions
    name: Extensions
    href: Innova.Prism.Library.Extensions.html
- uid: Innova.Data.Validation.BaseValidator`1.IgnoreProperties*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.IgnoreProperties
  href: Innova.Data.Validation.BaseValidator-1.IgnoreProperties.html#Innova_Data_Validation_BaseValidator_1_IgnoreProperties
  name: IgnoreProperties
  nameWithType: BaseValidator<T>.IgnoreProperties
  fullName: Innova.Data.Validation.BaseValidator<T>.IgnoreProperties
  nameWithType.vb: BaseValidator(Of T).IgnoreProperties
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IgnoreProperties
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.InsertRulesets*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.InsertRulesets
  href: Innova.Data.Validation.BaseValidator-1.InsertRulesets.html#Innova_Data_Validation_BaseValidator_1_InsertRulesets
  name: InsertRulesets
  nameWithType: BaseValidator<T>.InsertRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.InsertRulesets
  nameWithType.vb: BaseValidator(Of T).InsertRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).InsertRulesets
- uid: Innova.Data.Validation.BaseValidator`1.UpdateRulesets*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.UpdateRulesets
  href: Innova.Data.Validation.BaseValidator-1.UpdateRulesets.html#Innova_Data_Validation_BaseValidator_1_UpdateRulesets
  name: UpdateRulesets
  nameWithType: BaseValidator<T>.UpdateRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.UpdateRulesets
  nameWithType.vb: BaseValidator(Of T).UpdateRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).UpdateRulesets
- uid: Innova.Data.Validation.BaseValidator`1.DeleteRulesets*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.DeleteRulesets
  href: Innova.Data.Validation.BaseValidator-1.DeleteRulesets.html#Innova_Data_Validation_BaseValidator_1_DeleteRulesets
  name: DeleteRulesets
  nameWithType: BaseValidator<T>.DeleteRulesets
  fullName: Innova.Data.Validation.BaseValidator<T>.DeleteRulesets
  nameWithType.vb: BaseValidator(Of T).DeleteRulesets
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).DeleteRulesets
- uid: Innova.Data.Validation.BaseValidator`1.DefaultRuleSet*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.DefaultRuleSet
  href: Innova.Data.Validation.BaseValidator-1.DefaultRuleSet.html#Innova_Data_Validation_BaseValidator_1_DefaultRuleSet
  name: DefaultRuleSet
  nameWithType: BaseValidator<T>.DefaultRuleSet
  fullName: Innova.Data.Validation.BaseValidator<T>.DefaultRuleSet
  nameWithType.vb: BaseValidator(Of T).DefaultRuleSet
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).DefaultRuleSet
- uid: Innova.Data.Validation.IEntityValidator.DefaultRuleSet
  commentId: P:Innova.Data.Validation.IEntityValidator.DefaultRuleSet
  parent: Innova.Data.Validation.IEntityValidator
  href: Innova.Data.Validation.IEntityValidator.DefaultRuleSet.html#Innova_Data_Validation_IEntityValidator_DefaultRuleSet
  name: DefaultRuleSet
  nameWithType: IEntityValidator.DefaultRuleSet
  fullName: Innova.Data.Validation.IEntityValidator.DefaultRuleSet
- uid: Innova.Data.Validation.ValidationRuleSetEnum
  commentId: T:Innova.Data.Validation.ValidationRuleSetEnum
  parent: Innova.Data.Validation
  href: Innova.Data.Validation.ValidationRuleSetEnum.html
  name: ValidationRuleSetEnum
  nameWithType: ValidationRuleSetEnum
  fullName: Innova.Data.Validation.ValidationRuleSetEnum
- uid: Innova.Data.Validation.BaseValidator`1
  commentId: T:Innova.Data.Validation.BaseValidator`1
  href: Innova.Data.Validation.BaseValidator-1.html
  name: BaseValidator<T>
  nameWithType: BaseValidator<T>
  fullName: Innova.Data.Validation.BaseValidator<T>
  nameWithType.vb: BaseValidator(Of T)
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T)
  name.vb: BaseValidator(Of T)
  spec.csharp:
  - uid: Innova.Data.Validation.BaseValidator`1
    name: BaseValidator
    href: Innova.Data.Validation.BaseValidator-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Validation.BaseValidator`1
    name: BaseValidator
    href: Innova.Data.Validation.BaseValidator-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Validation.BaseValidator`1.#ctor*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.#ctor
  href: Innova.Data.Validation.BaseValidator-1.-ctor.html#Innova_Data_Validation_BaseValidator_1__ctor
  name: BaseValidator
  nameWithType: BaseValidator<T>.BaseValidator
  fullName: Innova.Data.Validation.BaseValidator<T>.BaseValidator
  nameWithType.vb: BaseValidator(Of T).New
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).New
  name.vb: New
- uid: Innova.Data.Validation.BaseValidator`1.Validate*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.Validate
  href: Innova.Data.Validation.BaseValidator-1.Validate.html#Innova_Data_Validation_BaseValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  name: Validate
  nameWithType: BaseValidator<T>.Validate
  fullName: Innova.Data.Validation.BaseValidator<T>.Validate
  nameWithType.vb: BaseValidator(Of T).Validate
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).Validate
- uid: Innova.Data.Validation.IEntityValidator{{T}}.Validate({T},Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Validation.IEntityValidator{`0}.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  parent: Innova.Data.Validation.IEntityValidator{{T}}
  definition: Innova.Data.Validation.IEntityValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  href: Innova.Data.Validation.IEntityValidator-1.Validate.html#Innova_Data_Validation_IEntityValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  name: Validate(T, ValidationRuleSetEnum, CancellationToken)
  nameWithType: IEntityValidator<T>.Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName: Innova.Data.Validation.IEntityValidator<T>.Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  nameWithType.vb: IEntityValidator(Of T).Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName.vb: Innova.Data.Validation.IEntityValidator(Of T).Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator{`0}.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
    href: Innova.Data.Validation.IEntityValidator-1.Validate.html#Innova_Data_Validation_IEntityValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
    href: Innova.Data.Validation.ValidationRuleSetEnum.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator{`0}.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
    href: Innova.Data.Validation.IEntityValidator-1.Validate.html#Innova_Data_Validation_IEntityValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
    href: Innova.Data.Validation.ValidationRuleSetEnum.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{FluentValidation.Results.ValidationResult}
  commentId: T:System.Threading.Tasks.Task{FluentValidation.Results.ValidationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ValidationResult>
  nameWithType: Task<ValidationResult>
  fullName: System.Threading.Tasks.Task<FluentValidation.Results.ValidationResult>
  nameWithType.vb: Task(Of ValidationResult)
  fullName.vb: System.Threading.Tasks.Task(Of FluentValidation.Results.ValidationResult)
  name.vb: Task(Of ValidationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: Innova.Data.Validation.IEntityValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  commentId: M:Innova.Data.Validation.IEntityValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
  isExternal: true
  href: Innova.Data.Validation.IEntityValidator-1.Validate.html#Innova_Data_Validation_IEntityValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  name: Validate(T, ValidationRuleSetEnum, CancellationToken)
  nameWithType: IEntityValidator<T>.Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName: Innova.Data.Validation.IEntityValidator<T>.Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  nameWithType.vb: IEntityValidator(Of T).Validate(T, ValidationRuleSetEnum, CancellationToken)
  fullName.vb: Innova.Data.Validation.IEntityValidator(Of T).Validate(T, Innova.Data.Validation.ValidationRuleSetEnum, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
    href: Innova.Data.Validation.IEntityValidator-1.Validate.html#Innova_Data_Validation_IEntityValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
    href: Innova.Data.Validation.ValidationRuleSetEnum.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator`1.Validate(`0,Innova.Data.Validation.ValidationRuleSetEnum,System.Threading.CancellationToken)
    name: Validate
    href: Innova.Data.Validation.IEntityValidator-1.Validate.html#Innova_Data_Validation_IEntityValidator_1_Validate__0_Innova_Data_Validation_ValidationRuleSetEnum_System_Threading_CancellationToken_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Innova.Data.Validation.ValidationRuleSetEnum
    name: ValidationRuleSetEnum
    href: Innova.Data.Validation.ValidationRuleSetEnum.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.ValidateByDefaultRuleset
  href: Innova.Data.Validation.BaseValidator-1.ValidateByDefaultRuleset.html#Innova_Data_Validation_BaseValidator_1_ValidateByDefaultRuleset__1___0_System_String_
  name: ValidateByDefaultRuleset
  nameWithType: BaseValidator<T>.ValidateByDefaultRuleset
  fullName: Innova.Data.Validation.BaseValidator<T>.ValidateByDefaultRuleset
  nameWithType.vb: BaseValidator(Of T).ValidateByDefaultRuleset
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).ValidateByDefaultRuleset
- uid: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1({TEntity},System.String)
  commentId: M:Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
  parent: Innova.Data.Validation.IEntityValidator
  definition: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
  href: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset.html#Innova_Data_Validation_IEntityValidator_ValidateByDefaultRuleset__1___0_System_String_
  name: ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType: IEntityValidator.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  fullName: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset<TEntity>(TEntity, string)
  nameWithType.vb: IEntityValidator.ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  fullName.vb: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  name.vb: ValidateByDefaultRuleset(Of TEntity)(TEntity, String)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
    href: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset.html#Innova_Data_Validation_IEntityValidator_ValidateByDefaultRuleset__1___0_System_String_
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
    href: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset.html#Innova_Data_Validation_IEntityValidator_ValidateByDefaultRuleset__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
  commentId: M:Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
  isExternal: true
  href: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset.html#Innova_Data_Validation_IEntityValidator_ValidateByDefaultRuleset__1___0_System_String_
  name: ValidateByDefaultRuleset<T>(T, string)
  nameWithType: IEntityValidator.ValidateByDefaultRuleset<T>(T, string)
  fullName: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset<T>(T, string)
  nameWithType.vb: IEntityValidator.ValidateByDefaultRuleset(Of T)(T, String)
  fullName.vb: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset(Of T)(T, String)
  name.vb: ValidateByDefaultRuleset(Of T)(T, String)
  spec.csharp:
  - uid: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
    href: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset.html#Innova_Data_Validation_IEntityValidator_ValidateByDefaultRuleset__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset``1(``0,System.String)
    name: ValidateByDefaultRuleset
    href: Innova.Data.Validation.IEntityValidator.ValidateByDefaultRuleset.html#Innova_Data_Validation_IEntityValidator_ValidateByDefaultRuleset__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TEntity
  commentId: '!:TEntity'
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.AddPropertyToIgnore
  href: Innova.Data.Validation.BaseValidator-1.AddPropertyToIgnore.html#Innova_Data_Validation_BaseValidator_1_AddPropertyToIgnore__1_System_Linq_Expressions_Expression_System_Func__0___0___
  name: AddPropertyToIgnore
  nameWithType: BaseValidator<T>.AddPropertyToIgnore
  fullName: Innova.Data.Validation.BaseValidator<T>.AddPropertyToIgnore
  nameWithType.vb: BaseValidator(Of T).AddPropertyToIgnore
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).AddPropertyToIgnore
- uid: System.Linq.Expressions.Expression{System.Func{{T},{TProperty}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, TProperty>>
  nameWithType: Expression<Func<T, TProperty>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, TProperty>>
  nameWithType.vb: Expression(Of Func(Of T, TProperty))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty))
  name.vb: Expression(Of Func(Of T, TProperty))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored*
  commentId: Overload:Innova.Data.Validation.BaseValidator`1.IsPropertyIgnored
  href: Innova.Data.Validation.BaseValidator-1.IsPropertyIgnored.html#Innova_Data_Validation_BaseValidator_1_IsPropertyIgnored__1_System_Linq_Expressions_Expression_System_Func__0___0___
  name: IsPropertyIgnored
  nameWithType: BaseValidator<T>.IsPropertyIgnored
  fullName: Innova.Data.Validation.BaseValidator<T>.IsPropertyIgnored
  nameWithType.vb: BaseValidator(Of T).IsPropertyIgnored
  fullName.vb: Innova.Data.Validation.BaseValidator(Of T).IsPropertyIgnored
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
memberLayout: SeparatePages
