### YamlMime:ManagedReference
items:
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  commentId: T:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  id: IQueryFilterBuilder`1
  parent: Innova.Data.Entity.QueryFilterBuilder
  children:
  - Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  - Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  - Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.Build
  - Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.DisableFilter(System.String)
  - Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.EnableFilter(System.String)
  langs:
  - csharp
  - vb
  name: IQueryFilterBuilder<TEntity>
  nameWithType: IQueryFilterBuilder<TEntity>
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>
  type: Interface
  source:
    id: IQueryFilterBuilder
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryFilterBuilder\IQueryFilterBuilder.cs
    startLine: 9
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity.QueryFilterBuilder
  summary: Interface for implementing a Query filter builder.
  example: []
  syntax:
    content: 'public interface IQueryFilterBuilder<TEntity> where TEntity : class'
    typeParameters:
    - id: TEntity
    content.vb: Public Interface IQueryFilterBuilder(Of TEntity As Class)
  nameWithType.vb: IQueryFilterBuilder(Of TEntity)
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity)
  name.vb: IQueryFilterBuilder(Of TEntity)
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.Build
  commentId: M:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.Build
  id: Build
  parent: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: IQueryFilterBuilder<TEntity>.Build()
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.Build()
  type: Method
  source:
    id: Build
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryFilterBuilder\IQueryFilterBuilder.cs
    startLine: 15
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity.QueryFilterBuilder
  summary: Combine all active expressions, apply expression as query filter and return the target EntityTypeBuilder
  example: []
  syntax:
    content: EntityTypeBuilder<TEntity> Build()
    return:
      type: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{{TEntity}}
      description: The same builder instance so that multiple configuration calls can be chained.
    content.vb: Function Build() As EntityTypeBuilder(Of TEntity)
  overload: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.Build*
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).Build()
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).Build()
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  commentId: M:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  id: AddFilter(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  parent: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  langs:
  - csharp
  - vb
  name: AddFilter(Expression<Func<TEntity, bool>>, bool)
  nameWithType: IQueryFilterBuilder<TEntity>.AddFilter(Expression<Func<TEntity, bool>>, bool)
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.AddFilter(System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  type: Method
  source:
    id: AddFilter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryFilterBuilder\IQueryFilterBuilder.cs
    startLine: 23
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity.QueryFilterBuilder
  summary: Adding a filter to a given query filter builder.
  example: []
  syntax:
    content: IQueryFilterBuilder<TEntity> AddFilter(Expression<Func<TEntity, bool>> expression, bool active = true)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: A LINQ predicate expression.
    - id: active
      type: System.Boolean
      description: Indication of whether the filter should be applied, this parameter can be controlled by a service injected into DbContext.
    return:
      type: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
      description: A QueryFilterBuilder instance to chain methods.
    content.vb: Function AddFilter(expression As Expression(Of Func(Of TEntity, Boolean)), active As Boolean = True) As IQueryFilterBuilder(Of TEntity)
  overload: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter*
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).AddFilter(Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).AddFilter(System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: AddFilter(Expression(Of Func(Of TEntity, Boolean)), Boolean)
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  commentId: M:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  id: AddFilter(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)
  parent: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  langs:
  - csharp
  - vb
  name: AddFilter(string, Expression<Func<TEntity, bool>>, bool)
  nameWithType: IQueryFilterBuilder<TEntity>.AddFilter(string, Expression<Func<TEntity, bool>>, bool)
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.AddFilter(string, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>, bool)
  type: Method
  source:
    id: AddFilter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryFilterBuilder\IQueryFilterBuilder.cs
    startLine: 32
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity.QueryFilterBuilder
  summary: Adding a filter to a given query filter builder.
  example: []
  syntax:
    content: IQueryFilterBuilder<TEntity> AddFilter(string filterName, Expression<Func<TEntity, bool>> expression, bool active = true)
    parameters:
    - id: filterName
      type: System.String
      description: The unique name of the filter.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: A LINQ predicate expression.
    - id: active
      type: System.Boolean
      description: Indication of whether the filter should be applied, this parameter can be controlled by a service injected into DbContext.
    return:
      type: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
      description: A QueryFilterBuilder instance to chain methods.
    content.vb: Function AddFilter(filterName As String, expression As Expression(Of Func(Of TEntity, Boolean)), active As Boolean = True) As IQueryFilterBuilder(Of TEntity)
  overload: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter*
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).AddFilter(String, Expression(Of Func(Of TEntity, Boolean)), Boolean)
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).AddFilter(String, System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)), Boolean)
  name.vb: AddFilter(String, Expression(Of Func(Of TEntity, Boolean)), Boolean)
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.DisableFilter(System.String)
  commentId: M:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.DisableFilter(System.String)
  id: DisableFilter(System.String)
  parent: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  langs:
  - csharp
  - vb
  name: DisableFilter(string)
  nameWithType: IQueryFilterBuilder<TEntity>.DisableFilter(string)
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.DisableFilter(string)
  type: Method
  source:
    id: DisableFilter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryFilterBuilder\IQueryFilterBuilder.cs
    startLine: 39
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity.QueryFilterBuilder
  summary: Searching for a filter based on the given name and disabling it.
  example: []
  syntax:
    content: IQueryFilterBuilder<TEntity> DisableFilter(string filterName)
    parameters:
    - id: filterName
      type: System.String
      description: The unique name of the filter.
    return:
      type: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
      description: A QueryFilterBuilder instance to chain methods.
    content.vb: Function DisableFilter(filterName As String) As IQueryFilterBuilder(Of TEntity)
  overload: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.DisableFilter*
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).DisableFilter(String)
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).DisableFilter(String)
  name.vb: DisableFilter(String)
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.EnableFilter(System.String)
  commentId: M:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.EnableFilter(System.String)
  id: EnableFilter(System.String)
  parent: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  langs:
  - csharp
  - vb
  name: EnableFilter(string)
  nameWithType: IQueryFilterBuilder<TEntity>.EnableFilter(string)
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.EnableFilter(string)
  type: Method
  source:
    id: EnableFilter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryFilterBuilder\IQueryFilterBuilder.cs
    startLine: 46
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity.QueryFilterBuilder
  summary: Searching for a filter based on the given name and enabling it.
  example: []
  syntax:
    content: IQueryFilterBuilder<TEntity> EnableFilter(string filterName)
    parameters:
    - id: filterName
      type: System.String
      description: The unique name of the filter.
    return:
      type: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
      description: A QueryFilterBuilder instance to chain methods.&gt;
    content.vb: Function EnableFilter(filterName As String) As IQueryFilterBuilder(Of TEntity)
  overload: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.EnableFilter*
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).EnableFilter(String)
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).EnableFilter(String)
  name.vb: EnableFilter(String)
references:
- uid: Innova.Data.Entity.QueryFilterBuilder
  commentId: N:Innova.Data.Entity.QueryFilterBuilder
  href: Innova.html
  name: Innova.Data.Entity.QueryFilterBuilder
  nameWithType: Innova.Data.Entity.QueryFilterBuilder
  fullName: Innova.Data.Entity.QueryFilterBuilder
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  - name: .
  - uid: Innova.Data.Entity.QueryFilterBuilder
    name: QueryFilterBuilder
    href: Innova.Data.Entity.QueryFilterBuilder.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  - name: .
  - uid: Innova.Data.Entity.QueryFilterBuilder
    name: QueryFilterBuilder
    href: Innova.Data.Entity.QueryFilterBuilder.html
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.Build*
  commentId: Overload:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.Build
  href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.Build.html#Innova_Data_Entity_QueryFilterBuilder_IQueryFilterBuilder_1_Build
  name: Build
  nameWithType: IQueryFilterBuilder<TEntity>.Build
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.Build
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).Build
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).Build
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0}
  parent: Microsoft.EntityFrameworkCore.Metadata.Builders
  definition: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder-1
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  commentId: T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder-1
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1
    name: EntityTypeBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.Metadata.Builders
  commentId: N:Microsoft.EntityFrameworkCore.Metadata.Builders
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore.Metadata.Builders
  nameWithType: Microsoft.EntityFrameworkCore.Metadata.Builders
  fullName: Microsoft.EntityFrameworkCore.Metadata.Builders
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Metadata
    name: Metadata
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders
    name: Builders
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Metadata
    name: Metadata
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Metadata.Builders
    name: Builders
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter*
  commentId: Overload:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.AddFilter
  href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.AddFilter.html#Innova_Data_Entity_QueryFilterBuilder_IQueryFilterBuilder_1_AddFilter_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Boolean_
  name: AddFilter
  nameWithType: IQueryFilterBuilder<TEntity>.AddFilter
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.AddFilter
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).AddFilter
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).AddFilter
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  commentId: T:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
  parent: Innova.Data.Entity.QueryFilterBuilder
  href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.html
  name: IQueryFilterBuilder<TEntity>
  nameWithType: IQueryFilterBuilder<TEntity>
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>
  nameWithType.vb: IQueryFilterBuilder(Of TEntity)
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity)
  name.vb: IQueryFilterBuilder(Of TEntity)
  spec.csharp:
  - uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
    name: IQueryFilterBuilder
    href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1
    name: IQueryFilterBuilder
    href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.DisableFilter*
  commentId: Overload:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.DisableFilter
  href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.DisableFilter.html#Innova_Data_Entity_QueryFilterBuilder_IQueryFilterBuilder_1_DisableFilter_System_String_
  name: DisableFilter
  nameWithType: IQueryFilterBuilder<TEntity>.DisableFilter
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.DisableFilter
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).DisableFilter
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).DisableFilter
- uid: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.EnableFilter*
  commentId: Overload:Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder`1.EnableFilter
  href: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder-1.EnableFilter.html#Innova_Data_Entity_QueryFilterBuilder_IQueryFilterBuilder_1_EnableFilter_System_String_
  name: EnableFilter
  nameWithType: IQueryFilterBuilder<TEntity>.EnableFilter
  fullName: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder<TEntity>.EnableFilter
  nameWithType.vb: IQueryFilterBuilder(Of TEntity).EnableFilter
  fullName.vb: Innova.Data.Entity.QueryFilterBuilder.IQueryFilterBuilder(Of TEntity).EnableFilter
memberLayout: SeparatePages
