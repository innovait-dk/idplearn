### YamlMime:ManagedReference
items:
- uid: Innova.Data.Entity.ISelectorFactory
  commentId: T:Innova.Data.Entity.ISelectorFactory
  id: ISelectorFactory
  parent: Innova.Data.Entity
  children:
  - Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName``2(System.String)
  - Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression``2(System.String)
  - Innova.Data.Entity.ISelectorFactory.GetSelector``2
  - Innova.Data.Entity.ISelectorFactory.GetSortExpression``2(System.String)
  - Innova.Data.Entity.ISelectorFactory.Map``2(``0)
  - Innova.Data.Entity.ISelectorFactory.Map``2(``0,``1)
  - Innova.Data.Entity.ISelectorFactory.TryGetSelector``2
  langs:
  - csharp
  - vb
  name: ISelectorFactory
  nameWithType: ISelectorFactory
  fullName: Innova.Data.Entity.ISelectorFactory
  type: Interface
  source:
    id: ISelectorFactory
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 11
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Represents a factory for creating selectors and performing mapping operations.
  example: []
  syntax:
    content: public interface ISelectorFactory
    content.vb: Public Interface ISelectorFactory
- uid: Innova.Data.Entity.ISelectorFactory.GetSelector``2
  commentId: M:Innova.Data.Entity.ISelectorFactory.GetSelector``2
  id: GetSelector``2
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: GetSelector<T, TResult>()
  nameWithType: ISelectorFactory.GetSelector<T, TResult>()
  fullName: Innova.Data.Entity.ISelectorFactory.GetSelector<T, TResult>()
  type: Method
  source:
    id: GetSelector
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 19
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets the selector expression for the specified source and result types.
  example: []
  syntax:
    content: Expression<Func<T, TResult>> GetSelector<T, TResult>()
    typeParameters:
    - id: T
      description: The source type.
    - id: TResult
      description: The result type.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},{TResult}}}
      description: The selector expression.
    content.vb: Function GetSelector(Of T, TResult)() As Expression(Of Func(Of T, TResult))
  overload: Innova.Data.Entity.ISelectorFactory.GetSelector*
  nameWithType.vb: ISelectorFactory.GetSelector(Of T, TResult)()
  fullName.vb: Innova.Data.Entity.ISelectorFactory.GetSelector(Of T, TResult)()
  name.vb: GetSelector(Of T, TResult)()
- uid: Innova.Data.Entity.ISelectorFactory.TryGetSelector``2
  commentId: M:Innova.Data.Entity.ISelectorFactory.TryGetSelector``2
  id: TryGetSelector``2
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: TryGetSelector<T, TResult>()
  nameWithType: ISelectorFactory.TryGetSelector<T, TResult>()
  fullName: Innova.Data.Entity.ISelectorFactory.TryGetSelector<T, TResult>()
  type: Method
  source:
    id: TryGetSelector
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 27
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Tries to get the selector expression for the specified source and result types.
  example: []
  syntax:
    content: Expression<Func<T, TResult>> TryGetSelector<T, TResult>()
    typeParameters:
    - id: T
      description: The source type.
    - id: TResult
      description: The result type.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},{TResult}}}
      description: The selector expression if found, otherwise null.
    content.vb: Function TryGetSelector(Of T, TResult)() As Expression(Of Func(Of T, TResult))
  overload: Innova.Data.Entity.ISelectorFactory.TryGetSelector*
  nameWithType.vb: ISelectorFactory.TryGetSelector(Of T, TResult)()
  fullName.vb: Innova.Data.Entity.ISelectorFactory.TryGetSelector(Of T, TResult)()
  name.vb: TryGetSelector(Of T, TResult)()
- uid: Innova.Data.Entity.ISelectorFactory.GetSortExpression``2(System.String)
  commentId: M:Innova.Data.Entity.ISelectorFactory.GetSortExpression``2(System.String)
  id: GetSortExpression``2(System.String)
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: GetSortExpression<T, TResult>(string)
  nameWithType: ISelectorFactory.GetSortExpression<T, TResult>(string)
  fullName: Innova.Data.Entity.ISelectorFactory.GetSortExpression<T, TResult>(string)
  type: Method
  source:
    id: GetSortExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 36
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets the sort expression for the specified property name.
  example: []
  syntax:
    content: LambdaExpression GetSortExpression<T, TResult>(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property to sort by.
    typeParameters:
    - id: T
      description: The source type.
    - id: TResult
      description: The result type.
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: The sort expression.
    content.vb: Function GetSortExpression(Of T, TResult)(propertyName As String) As LambdaExpression
  overload: Innova.Data.Entity.ISelectorFactory.GetSortExpression*
  nameWithType.vb: ISelectorFactory.GetSortExpression(Of T, TResult)(String)
  fullName.vb: Innova.Data.Entity.ISelectorFactory.GetSortExpression(Of T, TResult)(String)
  name.vb: GetSortExpression(Of T, TResult)(String)
- uid: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression``2(System.String)
  commentId: M:Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression``2(System.String)
  id: GetPropertySelectorExpression``2(System.String)
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: GetPropertySelectorExpression<T, TResult>(string)
  nameWithType: ISelectorFactory.GetPropertySelectorExpression<T, TResult>(string)
  fullName: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression<T, TResult>(string)
  type: Method
  source:
    id: GetPropertySelectorExpression
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 45
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets the property selector expression for the specified property name.
  example: []
  syntax:
    content: LambdaExpression GetPropertySelectorExpression<T, TResult>(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property.
    typeParameters:
    - id: T
      description: The source type.
    - id: TResult
      description: The result type.
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: The property selector expression.
    content.vb: Function GetPropertySelectorExpression(Of T, TResult)(propertyName As String) As LambdaExpression
  overload: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression*
  nameWithType.vb: ISelectorFactory.GetPropertySelectorExpression(Of T, TResult)(String)
  fullName.vb: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression(Of T, TResult)(String)
  name.vb: GetPropertySelectorExpression(Of T, TResult)(String)
- uid: Innova.Data.Entity.ISelectorFactory.Map``2(``0,``1)
  commentId: M:Innova.Data.Entity.ISelectorFactory.Map``2(``0,``1)
  id: Map``2(``0,``1)
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: Map<TSource, TDestination>(TSource, TDestination)
  nameWithType: ISelectorFactory.Map<TSource, TDestination>(TSource, TDestination)
  fullName: Innova.Data.Entity.ISelectorFactory.Map<TSource, TDestination>(TSource, TDestination)
  type: Method
  source:
    id: Map
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 55
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Maps the properties from the source object to the destination object.
  example: []
  syntax:
    content: TDestination Map<TSource, TDestination>(TSource source, TDestination destination)
    parameters:
    - id: source
      type: '{TSource}'
      description: The source object.
    - id: destination
      type: '{TDestination}'
      description: The destination object.
    typeParameters:
    - id: TSource
      description: The source type.
    - id: TDestination
      description: The destination type.
    return:
      type: '{TDestination}'
      description: The destination object with mapped properties.
    content.vb: Function Map(Of TSource, TDestination)(source As TSource, destination As TDestination) As TDestination
  overload: Innova.Data.Entity.ISelectorFactory.Map*
  nameWithType.vb: ISelectorFactory.Map(Of TSource, TDestination)(TSource, TDestination)
  fullName.vb: Innova.Data.Entity.ISelectorFactory.Map(Of TSource, TDestination)(TSource, TDestination)
  name.vb: Map(Of TSource, TDestination)(TSource, TDestination)
- uid: Innova.Data.Entity.ISelectorFactory.Map``2(``0)
  commentId: M:Innova.Data.Entity.ISelectorFactory.Map``2(``0)
  id: Map``2(``0)
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: Map<TSource, TDestination>(TSource)
  nameWithType: ISelectorFactory.Map<TSource, TDestination>(TSource)
  fullName: Innova.Data.Entity.ISelectorFactory.Map<TSource, TDestination>(TSource)
  type: Method
  source:
    id: Map
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 64
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Maps the properties from the source object to a new instance of the destination type.
  example: []
  syntax:
    content: TDestination Map<TSource, TDestination>(TSource source)
    parameters:
    - id: source
      type: '{TSource}'
      description: The source object.
    typeParameters:
    - id: TSource
      description: The source type.
    - id: TDestination
      description: The destination type.
    return:
      type: '{TDestination}'
      description: A new instance of the destination type with mapped properties.
    content.vb: Function Map(Of TSource, TDestination)(source As TSource) As TDestination
  overload: Innova.Data.Entity.ISelectorFactory.Map*
  nameWithType.vb: ISelectorFactory.Map(Of TSource, TDestination)(TSource)
  fullName.vb: Innova.Data.Entity.ISelectorFactory.Map(Of TSource, TDestination)(TSource)
  name.vb: Map(Of TSource, TDestination)(TSource)
- uid: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName``2(System.String)
  commentId: M:Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName``2(System.String)
  id: GetMappedSourceMemberForPropertyName``2(System.String)
  parent: Innova.Data.Entity.ISelectorFactory
  langs:
  - csharp
  - vb
  name: GetMappedSourceMemberForPropertyName<T, TResult>(string)
  nameWithType: ISelectorFactory.GetMappedSourceMemberForPropertyName<T, TResult>(string)
  fullName: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName<T, TResult>(string)
  type: Method
  source:
    id: GetMappedSourceMemberForPropertyName
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\ISelectorFactory.cs
    startLine: 73
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets the mapped source member for the specified property name.
  example: []
  syntax:
    content: MemberInfo GetMappedSourceMemberForPropertyName<T, TResult>(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property.
    typeParameters:
    - id: T
      description: The source type.
    - id: TResult
      description: The result type.
    return:
      type: System.Reflection.MemberInfo
      description: The mapped source member.
    content.vb: Function GetMappedSourceMemberForPropertyName(Of T, TResult)(propertyName As String) As MemberInfo
  overload: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName*
  nameWithType.vb: ISelectorFactory.GetMappedSourceMemberForPropertyName(Of T, TResult)(String)
  fullName.vb: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName(Of T, TResult)(String)
  name.vb: GetMappedSourceMemberForPropertyName(Of T, TResult)(String)
references:
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: Innova.Data.Entity.ISelectorFactory.GetSelector*
  commentId: Overload:Innova.Data.Entity.ISelectorFactory.GetSelector
  href: Innova.Data.Entity.ISelectorFactory.GetSelector.html#Innova_Data_Entity_ISelectorFactory_GetSelector__2
  name: GetSelector
  nameWithType: ISelectorFactory.GetSelector
  fullName: Innova.Data.Entity.ISelectorFactory.GetSelector
- uid: System.Linq.Expressions.Expression{System.Func{{T},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, TResult>>
  nameWithType: Expression<Func<T, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, TResult>>
  nameWithType.vb: Expression(Of Func(Of T, TResult))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, TResult))
  name.vb: Expression(Of Func(Of T, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Innova.Data.Entity.ISelectorFactory.TryGetSelector*
  commentId: Overload:Innova.Data.Entity.ISelectorFactory.TryGetSelector
  href: Innova.Data.Entity.ISelectorFactory.TryGetSelector.html#Innova_Data_Entity_ISelectorFactory_TryGetSelector__2
  name: TryGetSelector
  nameWithType: ISelectorFactory.TryGetSelector
  fullName: Innova.Data.Entity.ISelectorFactory.TryGetSelector
- uid: Innova.Data.Entity.ISelectorFactory.GetSortExpression*
  commentId: Overload:Innova.Data.Entity.ISelectorFactory.GetSortExpression
  href: Innova.Data.Entity.ISelectorFactory.GetSortExpression.html#Innova_Data_Entity_ISelectorFactory_GetSortExpression__2_System_String_
  name: GetSortExpression
  nameWithType: ISelectorFactory.GetSortExpression
  fullName: Innova.Data.Entity.ISelectorFactory.GetSortExpression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Linq.Expressions.LambdaExpression
  commentId: T:System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.lambdaexpression
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression*
  commentId: Overload:Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression
  href: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression.html#Innova_Data_Entity_ISelectorFactory_GetPropertySelectorExpression__2_System_String_
  name: GetPropertySelectorExpression
  nameWithType: ISelectorFactory.GetPropertySelectorExpression
  fullName: Innova.Data.Entity.ISelectorFactory.GetPropertySelectorExpression
- uid: Innova.Data.Entity.ISelectorFactory.Map*
  commentId: Overload:Innova.Data.Entity.ISelectorFactory.Map
  href: Innova.Data.Entity.ISelectorFactory.Map.html#Innova_Data_Entity_ISelectorFactory_Map__2___0___1_
  name: Map
  nameWithType: ISelectorFactory.Map
  fullName: Innova.Data.Entity.ISelectorFactory.Map
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: '{TDestination}'
  commentId: '!:TDestination'
  definition: TDestination
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TDestination
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName*
  commentId: Overload:Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName
  href: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName.html#Innova_Data_Entity_ISelectorFactory_GetMappedSourceMemberForPropertyName__2_System_String_
  name: GetMappedSourceMemberForPropertyName
  nameWithType: ISelectorFactory.GetMappedSourceMemberForPropertyName
  fullName: Innova.Data.Entity.ISelectorFactory.GetMappedSourceMemberForPropertyName
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.memberinfo
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
memberLayout: SeparatePages
