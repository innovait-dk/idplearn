### YamlMime:ManagedReference
items:
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  commentId: T:Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  id: ILoggerExtensions
  parent: Innova.Prism.Infrastructure.Logging
  children:
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed(Microsoft.Extensions.Logging.ILogger)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart(Microsoft.Extensions.Logging.ILogger)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel``1(Microsoft.Extensions.Logging.ILogger)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView``1(Microsoft.Extensions.Logging.ILogger)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,System.String)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView(Microsoft.Extensions.Logging.ILogger,System.String)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint``1(Microsoft.Extensions.Logging.ILogger,Innova.Data.Entity.PrimaryKeys{``0})
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind``1(Microsoft.Extensions.Logging.ILogger,System.String)
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.StructuredSearch.EntityQuery{``0})
  - Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  langs:
  - csharp
  - vb
  name: ILoggerExtensions
  nameWithType: ILoggerExtensions
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  type: Class
  source:
    id: ILoggerExtensions
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 11
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Provides extension methods for ILogger interface.
  example: []
  syntax:
    content: public static class ILoggerExtensions
    content.vb: Public Module ILoggerExtensions
  inheritance:
  - System.Object
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint``1(Microsoft.Extensions.Logging.ILogger,Innova.Data.Entity.PrimaryKeys{``0})
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint``1(Microsoft.Extensions.Logging.ILogger,Innova.Data.Entity.PrimaryKeys{``0})
  id: LogPrint``1(Microsoft.Extensions.Logging.ILogger,Innova.Data.Entity.PrimaryKeys{``0})
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogPrint<T>(ILogger, PrimaryKeys<T>)
  nameWithType: ILoggerExtensions.LogPrint<T>(ILogger, PrimaryKeys<T>)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint<T>(Microsoft.Extensions.Logging.ILogger, Innova.Data.Entity.PrimaryKeys<T>)
  type: Method
  source:
    id: LogPrint
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 19
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of printing.
  example: []
  syntax:
    content: public static void LogPrint<T>(this ILogger logger, PrimaryKeys<T> primaryKey)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: primaryKey
      type: Innova.Data.Entity.PrimaryKeys{{T}}
      description: The primary keys of the entity.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogPrint(Of T)(logger As ILogger, primaryKey As PrimaryKeys(Of T))
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint*
  nameWithType.vb: ILoggerExtensions.LogPrint(Of T)(ILogger, PrimaryKeys(Of T))
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint(Of T)(Microsoft.Extensions.Logging.ILogger, Innova.Data.Entity.PrimaryKeys(Of T))
  name.vb: LogPrint(Of T)(ILogger, PrimaryKeys(Of T))
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel``1(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel``1(Microsoft.Extensions.Logging.ILogger)
  id: LogExportToExcel``1(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogExportToExcel<T>(ILogger)
  nameWithType: ILoggerExtensions.LogExportToExcel<T>(ILogger)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel<T>(Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    id: LogExportToExcel
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 29
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of exporting to Excel.
  example: []
  syntax:
    content: public static void LogExportToExcel<T>(this ILogger logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogExportToExcel(Of T)(logger As ILogger)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel*
  nameWithType.vb: ILoggerExtensions.LogExportToExcel(Of T)(ILogger)
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel(Of T)(Microsoft.Extensions.Logging.ILogger)
  name.vb: LogExportToExcel(Of T)(ILogger)
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind``1(Microsoft.Extensions.Logging.ILogger,System.String)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind``1(Microsoft.Extensions.Logging.ILogger,System.String)
  id: LogQuickFind``1(Microsoft.Extensions.Logging.ILogger,System.String)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogQuickFind<T>(ILogger, string)
  nameWithType: ILoggerExtensions.LogQuickFind<T>(ILogger, string)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind<T>(Microsoft.Extensions.Logging.ILogger, string)
  type: Method
  source:
    id: LogQuickFind
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 40
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of quick find.
  example: []
  syntax:
    content: public static void LogQuickFind<T>(this ILogger logger, string message)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: message
      type: System.String
      description: The quick find message.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogQuickFind(Of T)(logger As ILogger, message As String)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind*
  nameWithType.vb: ILoggerExtensions.LogQuickFind(Of T)(ILogger, String)
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind(Of T)(Microsoft.Extensions.Logging.ILogger, String)
  name.vb: LogQuickFind(Of T)(ILogger, String)
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.StructuredSearch.EntityQuery{``0})
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.StructuredSearch.EntityQuery{``0})
  id: LogSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.StructuredSearch.EntityQuery{``0})
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogSearch<T>(ILogger, string, EntityQuery<T>)
  nameWithType: ILoggerExtensions.LogSearch<T>(ILogger, string, EntityQuery<T>)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch<T>(Microsoft.Extensions.Logging.ILogger, string, Innova.Data.StructuredSearch.EntityQuery<T>)
  type: Method
  source:
    id: LogSearch
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 53
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of searching.
  remarks: The entity must be a class.
  example: []
  syntax:
    content: 'public static void LogSearch<T>(this ILogger logger, string header, EntityQuery<T> entityQuery) where T : class'
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: header
      type: System.String
      description: The search header.
    - id: entityQuery
      type: Innova.Data.StructuredSearch.EntityQuery{{T}}
      description: The entity query.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogSearch(Of T As Class)(logger As ILogger, header As String, entityQuery As EntityQuery(Of T))
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch*
  nameWithType.vb: ILoggerExtensions.LogSearch(Of T)(ILogger, String, EntityQuery(Of T))
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch(Of T)(Microsoft.Extensions.Logging.ILogger, String, Innova.Data.StructuredSearch.EntityQuery(Of T))
  name.vb: LogSearch(Of T)(ILogger, String, EntityQuery(Of T))
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,System.String)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,System.String)
  id: LogListSearch``1(Microsoft.Extensions.Logging.ILogger,System.String,System.String)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogListSearch<T>(ILogger, string, string)
  nameWithType: ILoggerExtensions.LogListSearch<T>(ILogger, string, string)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch<T>(Microsoft.Extensions.Logging.ILogger, string, string)
  type: Method
  source:
    id: LogListSearch
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 67
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of list filtering.
  remarks: The entity must be a class.
  example: []
  syntax:
    content: 'public static void LogListSearch<T>(this ILogger logger, string header, string message) where T : class'
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: header
      type: System.String
      description: The list filter header.
    - id: message
      type: System.String
      description: The list filter message.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogListSearch(Of T As Class)(logger As ILogger, header As String, message As String)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch*
  nameWithType.vb: ILoggerExtensions.LogListSearch(Of T)(ILogger, String, String)
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch(Of T)(Microsoft.Extensions.Logging.ILogger, String, String)
  name.vb: LogListSearch(Of T)(ILogger, String, String)
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView(Microsoft.Extensions.Logging.ILogger,System.String)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView(Microsoft.Extensions.Logging.ILogger,System.String)
  id: LogListView(Microsoft.Extensions.Logging.ILogger,System.String)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogListView(ILogger, string)
  nameWithType: ILoggerExtensions.LogListView(ILogger, string)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView(Microsoft.Extensions.Logging.ILogger, string)
  type: Method
  source:
    id: LogListView
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 77
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of viewing a list.
  example: []
  syntax:
    content: public static void LogListView(this ILogger logger, string header)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: header
      type: System.String
      description: The list view header.
    content.vb: Public Shared Sub LogListView(logger As ILogger, header As String)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView*
  nameWithType.vb: ILoggerExtensions.LogListView(ILogger, String)
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView(Microsoft.Extensions.Logging.ILogger, String)
  name.vb: LogListView(ILogger, String)
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  id: LogShowView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogShowView<T>(ILogger, string, PrimaryKeys<T>)
  nameWithType: ILoggerExtensions.LogShowView<T>(ILogger, string, PrimaryKeys<T>)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView<T>(Microsoft.Extensions.Logging.ILogger, string, Innova.Data.Entity.PrimaryKeys<T>)
  type: Method
  source:
    id: LogShowView
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 89
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of showing a view.
  example: []
  syntax:
    content: public static void LogShowView<T>(this ILogger logger, string header, PrimaryKeys<T> primaryKey)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: header
      type: System.String
      description: The view header.
    - id: primaryKey
      type: Innova.Data.Entity.PrimaryKeys{{T}}
      description: The primary keys of the entity.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogShowView(Of T)(logger As ILogger, header As String, primaryKey As PrimaryKeys(Of T))
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView*
  nameWithType.vb: ILoggerExtensions.LogShowView(Of T)(ILogger, String, PrimaryKeys(Of T))
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView(Of T)(Microsoft.Extensions.Logging.ILogger, String, Innova.Data.Entity.PrimaryKeys(Of T))
  name.vb: LogShowView(Of T)(ILogger, String, PrimaryKeys(Of T))
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  id: LogEditView``1(Microsoft.Extensions.Logging.ILogger,System.String,Innova.Data.Entity.PrimaryKeys{``0})
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogEditView<T>(ILogger, string, PrimaryKeys<T>)
  nameWithType: ILoggerExtensions.LogEditView<T>(ILogger, string, PrimaryKeys<T>)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView<T>(Microsoft.Extensions.Logging.ILogger, string, Innova.Data.Entity.PrimaryKeys<T>)
  type: Method
  source:
    id: LogEditView
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 101
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of editing a view.
  example: []
  syntax:
    content: public static void LogEditView<T>(this ILogger logger, string header, PrimaryKeys<T> primaryKey)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    - id: header
      type: System.String
      description: The view header.
    - id: primaryKey
      type: Innova.Data.Entity.PrimaryKeys{{T}}
      description: The primary keys of the entity.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogEditView(Of T)(logger As ILogger, header As String, primaryKey As PrimaryKeys(Of T))
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView*
  nameWithType.vb: ILoggerExtensions.LogEditView(Of T)(ILogger, String, PrimaryKeys(Of T))
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView(Of T)(Microsoft.Extensions.Logging.ILogger, String, Innova.Data.Entity.PrimaryKeys(Of T))
  name.vb: LogEditView(Of T)(ILogger, String, PrimaryKeys(Of T))
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView``1(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView``1(Microsoft.Extensions.Logging.ILogger)
  id: LogInsertView``1(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInsertView<T>(ILogger)
  nameWithType: ILoggerExtensions.LogInsertView<T>(ILogger)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView<T>(Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    id: LogInsertView
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 111
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the action of inserting a view.
  example: []
  syntax:
    content: public static void LogInsertView<T>(this ILogger logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub LogInsertView(Of T)(logger As ILogger)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView*
  nameWithType.vb: ILoggerExtensions.LogInsertView(Of T)(ILogger)
  fullName.vb: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView(Of T)(Microsoft.Extensions.Logging.ILogger)
  name.vb: LogInsertView(Of T)(ILogger)
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart(Microsoft.Extensions.Logging.ILogger)
  id: LogApplicationStart(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogApplicationStart(ILogger)
  nameWithType: ILoggerExtensions.LogApplicationStart(ILogger)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart(Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    id: LogApplicationStart
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 125
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the application start event.
  example: []
  syntax:
    content: public static void LogApplicationStart(this ILogger logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    content.vb: Public Shared Sub LogApplicationStart(logger As ILogger)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart*
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed(Microsoft.Extensions.Logging.ILogger)
  id: LogApplicationClosed(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Innova.Prism.Infrastructure.Logging.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogApplicationClosed(ILogger)
  nameWithType: ILoggerExtensions.LogApplicationClosed(ILogger)
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed(Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    id: LogApplicationClosed
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Infrastructure\Logging\ILoggerExtensions.cs
    startLine: 137
  assemblies:
  - Innova.Prism.Infrastructure
  namespace: Innova.Prism.Infrastructure.Logging
  summary: Logs the application closed event.
  example: []
  syntax:
    content: public static void LogApplicationClosed(this ILogger logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger instance.
    content.vb: Public Shared Sub LogApplicationClosed(logger As ILogger)
  overload: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed*
references:
- uid: Innova.Prism.Infrastructure.Logging
  commentId: N:Innova.Prism.Infrastructure.Logging
  href: Innova.html
  name: Innova.Prism.Infrastructure.Logging
  nameWithType: Innova.Prism.Infrastructure.Logging
  fullName: Innova.Prism.Infrastructure.Logging
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Infrastructure
    name: Infrastructure
    href: Innova.Prism.Infrastructure.html
  - name: .
  - uid: Innova.Prism.Infrastructure.Logging
    name: Logging
    href: Innova.Prism.Infrastructure.Logging.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Infrastructure
    name: Infrastructure
    href: Innova.Prism.Infrastructure.html
  - name: .
  - uid: Innova.Prism.Infrastructure.Logging
    name: Logging
    href: Innova.Prism.Infrastructure.Logging.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogPrint__1_Microsoft_Extensions_Logging_ILogger_Innova_Data_Entity_PrimaryKeys___0__
  name: LogPrint
  nameWithType: ILoggerExtensions.LogPrint
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogPrint
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Innova.Data.Entity.PrimaryKeys{{T}}
  commentId: T:Innova.Data.Entity.PrimaryKeys{``0}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.PrimaryKeys`1
  href: Innova.Data.Entity.PrimaryKeys-1.html
  name: PrimaryKeys<T>
  nameWithType: PrimaryKeys<T>
  fullName: Innova.Data.Entity.PrimaryKeys<T>
  nameWithType.vb: PrimaryKeys(Of T)
  fullName.vb: Innova.Data.Entity.PrimaryKeys(Of T)
  name.vb: PrimaryKeys(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Innova.Data.Entity.PrimaryKeys`1
  commentId: T:Innova.Data.Entity.PrimaryKeys`1
  href: Innova.Data.Entity.PrimaryKeys-1.html
  name: PrimaryKeys<T>
  nameWithType: PrimaryKeys<T>
  fullName: Innova.Data.Entity.PrimaryKeys<T>
  nameWithType.vb: PrimaryKeys(Of T)
  fullName.vb: Innova.Data.Entity.PrimaryKeys(Of T)
  name.vb: PrimaryKeys(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.PrimaryKeys`1
    name: PrimaryKeys
    href: Innova.Data.Entity.PrimaryKeys-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogExportToExcel__1_Microsoft_Extensions_Logging_ILogger_
  name: LogExportToExcel
  nameWithType: ILoggerExtensions.LogExportToExcel
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogExportToExcel
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogQuickFind__1_Microsoft_Extensions_Logging_ILogger_System_String_
  name: LogQuickFind
  nameWithType: ILoggerExtensions.LogQuickFind
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogQuickFind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogSearch__1_Microsoft_Extensions_Logging_ILogger_System_String_Innova_Data_StructuredSearch_EntityQuery___0__
  name: LogSearch
  nameWithType: ILoggerExtensions.LogSearch
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogSearch
- uid: Innova.Data.StructuredSearch.EntityQuery{{T}}
  commentId: T:Innova.Data.StructuredSearch.EntityQuery{``0}
  parent: Innova.Data.StructuredSearch
  definition: Innova.Data.StructuredSearch.EntityQuery`1
  href: Innova.Data.StructuredSearch.EntityQuery-1.html
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.StructuredSearch.EntityQuery`1
  commentId: T:Innova.Data.StructuredSearch.EntityQuery`1
  href: Innova.Data.StructuredSearch.EntityQuery-1.html
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.StructuredSearch
  commentId: N:Innova.Data.StructuredSearch
  href: Innova.html
  name: Innova.Data.StructuredSearch
  nameWithType: Innova.Data.StructuredSearch
  fullName: Innova.Data.StructuredSearch
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogListSearch__1_Microsoft_Extensions_Logging_ILogger_System_String_System_String_
  name: LogListSearch
  nameWithType: ILoggerExtensions.LogListSearch
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListSearch
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogListView_Microsoft_Extensions_Logging_ILogger_System_String_
  name: LogListView
  nameWithType: ILoggerExtensions.LogListView
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogListView
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogShowView__1_Microsoft_Extensions_Logging_ILogger_System_String_Innova_Data_Entity_PrimaryKeys___0__
  name: LogShowView
  nameWithType: ILoggerExtensions.LogShowView
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogShowView
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogEditView__1_Microsoft_Extensions_Logging_ILogger_System_String_Innova_Data_Entity_PrimaryKeys___0__
  name: LogEditView
  nameWithType: ILoggerExtensions.LogEditView
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogEditView
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogInsertView__1_Microsoft_Extensions_Logging_ILogger_
  name: LogInsertView
  nameWithType: ILoggerExtensions.LogInsertView
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogInsertView
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogApplicationStart_Microsoft_Extensions_Logging_ILogger_
  name: LogApplicationStart
  nameWithType: ILoggerExtensions.LogApplicationStart
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationStart
- uid: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed*
  commentId: Overload:Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed
  href: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed.html#Innova_Prism_Infrastructure_Logging_ILoggerExtensions_LogApplicationClosed_Microsoft_Extensions_Logging_ILogger_
  name: LogApplicationClosed
  nameWithType: ILoggerExtensions.LogApplicationClosed
  fullName: Innova.Prism.Infrastructure.Logging.ILoggerExtensions.LogApplicationClosed
memberLayout: SeparatePages
