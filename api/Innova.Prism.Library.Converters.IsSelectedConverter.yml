### YamlMime:ManagedReference
items:
- uid: Innova.Prism.Library.Converters.IsSelectedConverter
  commentId: T:Innova.Prism.Library.Converters.IsSelectedConverter
  id: IsSelectedConverter
  parent: Innova.Prism.Library.Converters
  children:
  - Innova.Prism.Library.Converters.IsSelectedConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: IsSelectedConverter
  nameWithType: IsSelectedConverter
  fullName: Innova.Prism.Library.Converters.IsSelectedConverter
  type: Class
  source:
    id: IsSelectedConverter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\Converters\IsSelectedConverter.cs
    startLine: 14
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.Converters
  summary: Converts the selected item and a dictionary of items to a boolean value indicating if the selected item is present in the dictionary.
  example: []
  syntax:
    content: 'public class IsSelectedConverter : IMultiValueConverter'
    content.vb: Public Class IsSelectedConverter Implements IMultiValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IMultiValueConverter
- uid: Innova.Prism.Library.Converters.IsSelectedConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Innova.Prism.Library.Converters.IsSelectedConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Innova.Prism.Library.Converters.IsSelectedConverter
  langs:
  - csharp
  - vb
  name: Convert(object[], Type, object, CultureInfo)
  nameWithType: IsSelectedConverter.Convert(object[], Type, object, CultureInfo)
  fullName: Innova.Prism.Library.Converters.IsSelectedConverter.Convert(object[], System.Type, object, System.Globalization.CultureInfo)
  type: Method
  source:
    id: Convert
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\Converters\IsSelectedConverter.cs
    startLine: 24
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.Converters
  summary: Converts the selected item and a dictionary of items to a boolean value indicating if the selected item is present in the dictionary.
  example: []
  syntax:
    content: public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: values
      type: System.Object[]
      description: An array of objects containing the selected item and the dictionary of items.
    - id: targetType
      type: System.Type
      description: The type of the binding target property.
    - id: parameter
      type: System.Object
      description: The converter parameter to use.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use in the converter.
    return:
      type: System.Object
      description: True if the selected item is present in the dictionary; otherwise, false.
    content.vb: Public Function Convert(values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: Innova.Prism.Library.Converters.IsSelectedConverter.Convert*
  implements:
  - System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  nameWithType.vb: IsSelectedConverter.Convert(Object(), Type, Object, CultureInfo)
  fullName.vb: Innova.Prism.Library.Converters.IsSelectedConverter.Convert(Object(), System.Type, Object, System.Globalization.CultureInfo)
  name.vb: Convert(Object(), Type, Object, CultureInfo)
- uid: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  commentId: M:Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: Innova.Prism.Library.Converters.IsSelectedConverter
  langs:
  - csharp
  - vb
  name: ConvertBack(object, Type[], object, CultureInfo)
  nameWithType: IsSelectedConverter.ConvertBack(object, Type[], object, CultureInfo)
  fullName: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack(object, System.Type[], object, System.Globalization.CultureInfo)
  type: Method
  source:
    id: ConvertBack
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Prism.Library\Converters\IsSelectedConverter.cs
    startLine: 65
  assemblies:
  - Innova.Prism.Library
  namespace: Innova.Prism.Library.Converters
  summary: This method is not supported and will always return an empty array.
  example: []
  syntax:
    content: public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert back.
    - id: targetTypes
      type: System.Type[]
      description: The types to convert back to.
    - id: parameter
      type: System.Object
      description: The converter parameter to use.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use in the converter.
    return:
      type: System.Object[]
      description: An empty array.
    content.vb: Public Function ConvertBack(value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()
  overload: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack*
  implements:
  - System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  nameWithType.vb: IsSelectedConverter.ConvertBack(Object, Type(), Object, CultureInfo)
  fullName.vb: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack(Object, System.Type(), Object, System.Globalization.CultureInfo)
  name.vb: ConvertBack(Object, Type(), Object, CultureInfo)
references:
- uid: Innova.Prism.Library.Converters
  commentId: N:Innova.Prism.Library.Converters
  href: Innova.html
  name: Innova.Prism.Library.Converters
  nameWithType: Innova.Prism.Library.Converters
  fullName: Innova.Prism.Library.Converters
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Converters
    name: Converters
    href: Innova.Prism.Library.Converters.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Prism
    name: Prism
    href: Innova.Prism.html
  - name: .
  - uid: Innova.Prism.Library
    name: Library
    href: Innova.Prism.Library.html
  - name: .
  - uid: Innova.Prism.Library.Converters
    name: Converters
    href: Innova.Prism.Library.Converters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Windows.Data.IMultiValueConverter
  commentId: T:System.Windows.Data.IMultiValueConverter
  parent: System.Windows.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data
- uid: Innova.Prism.Library.Converters.IsSelectedConverter.Convert*
  commentId: Overload:Innova.Prism.Library.Converters.IsSelectedConverter.Convert
  href: Innova.Prism.Library.Converters.IsSelectedConverter.Convert.html#Innova_Prism_Library_Converters_IsSelectedConverter_Convert_System_Object___System_Type_System_Object_System_Globalization_CultureInfo_
  name: Convert
  nameWithType: IsSelectedConverter.Convert
  fullName: Innova.Prism.Library.Converters.IsSelectedConverter.Convert
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter.convert
  name: Convert(object[], Type, object, CultureInfo)
  nameWithType: IMultiValueConverter.Convert(object[], Type, object, CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(object[], System.Type, object, System.Globalization.CultureInfo)
  nameWithType.vb: IMultiValueConverter.Convert(Object(), Type, Object, CultureInfo)
  fullName.vb: System.Windows.Data.IMultiValueConverter.Convert(Object(), System.Type, Object, System.Globalization.CultureInfo)
  name.vb: Convert(Object(), Type, Object, CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter.convert
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
  spec.vb:
  - uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter.convert
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: System.Object[]
  isExternal: true
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack*
  commentId: Overload:Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack
  href: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack.html#Innova_Prism_Library_Converters_IsSelectedConverter_ConvertBack_System_Object_System_Type___System_Object_System_Globalization_CultureInfo_
  name: ConvertBack
  nameWithType: IsSelectedConverter.ConvertBack
  fullName: Innova.Prism.Library.Converters.IsSelectedConverter.ConvertBack
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter.convertback
  name: ConvertBack(object, Type[], object, CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(object, Type[], object, CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(object, System.Type[], object, System.Globalization.CultureInfo)
  nameWithType.vb: IMultiValueConverter.ConvertBack(Object, Type(), Object, CultureInfo)
  fullName.vb: System.Windows.Data.IMultiValueConverter.ConvertBack(Object, System.Type(), Object, System.Globalization.CultureInfo)
  name.vb: ConvertBack(Object, Type(), Object, CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter.convertback
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
  spec.vb:
  - uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.imultivalueconverter.convertback
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
memberLayout: SeparatePages
