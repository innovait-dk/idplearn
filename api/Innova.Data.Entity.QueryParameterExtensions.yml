### YamlMime:ManagedReference
items:
- uid: Innova.Data.Entity.QueryParameterExtensions
  commentId: T:Innova.Data.Entity.QueryParameterExtensions
  id: QueryParameterExtensions
  parent: Innova.Data.Entity
  children:
  - Innova.Data.Entity.QueryParameterExtensions.AsString``1(Innova.Data.Entity.QueryParameter{``0})
  - Innova.Data.Entity.QueryParameterExtensions.CopyTo``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.QueryParameter{``0})
  - Innova.Data.Entity.QueryParameterExtensions.GetIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  - Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  - Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0})
  - Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery``1(Innova.Data.Entity.QueryParameter{``0})
  - Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.IPrimaryKey)
  - Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey})
  langs:
  - csharp
  - vb
  name: QueryParameterExtensions
  nameWithType: QueryParameterExtensions
  fullName: Innova.Data.Entity.QueryParameterExtensions
  type: Class
  source:
    id: QueryParameterExtensions
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 14
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Provides extension methods for the <xref href="Innova.Data.Entity.QueryParameter%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static class QueryParameterExtensions
    content.vb: Public Module QueryParameterExtensions
  inheritance:
  - System.Object
- uid: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  id: GetOnlyWhereIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: GetOnlyWhereIQueryable<T>(QueryParameter<T>, IQueryable<T>)
  nameWithType: QueryParameterExtensions.GetOnlyWhereIQueryable<T>(QueryParameter<T>, IQueryable<T>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable<T>(Innova.Data.Entity.QueryParameter<T>, System.Linq.IQueryable<T>)
  type: Method
  source:
    id: GetOnlyWhereIQueryable
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 48
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets an <xref href="System.Linq.IQueryable%601" data-throw-if-not-resolved="false"></xref> with only the where clause applied.
  example: []
  syntax:
    content: 'public static IQueryable<T> GetOnlyWhereIQueryable<T>(this QueryParameter<T> parameter, IQueryable<T> queryable) where T : class'
    parameters:
    - id: parameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    - id: queryable
      type: System.Linq.IQueryable{{T}}
      description: The queryable.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.IQueryable{{T}}
      description: The filtered queryable.
    content.vb: Public Shared Function GetOnlyWhereIQueryable(Of T As Class)(parameter As QueryParameter(Of T), queryable As IQueryable(Of T)) As IQueryable(Of T)
  overload: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable*
  nameWithType.vb: QueryParameterExtensions.GetOnlyWhereIQueryable(Of T)(QueryParameter(Of T), IQueryable(Of T))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable(Of T)(Innova.Data.Entity.QueryParameter(Of T), System.Linq.IQueryable(Of T))
  name.vb: GetOnlyWhereIQueryable(Of T)(QueryParameter(Of T), IQueryable(Of T))
- uid: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.GetIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  id: GetIQueryable``1(Innova.Data.Entity.QueryParameter{``0},System.Linq.IQueryable{``0})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: GetIQueryable<T>(QueryParameter<T>, IQueryable<T>)
  nameWithType: QueryParameterExtensions.GetIQueryable<T>(QueryParameter<T>, IQueryable<T>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable<T>(Innova.Data.Entity.QueryParameter<T>, System.Linq.IQueryable<T>)
  type: Method
  source:
    id: GetIQueryable
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 78
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets an <xref href="System.Linq.IQueryable%601" data-throw-if-not-resolved="false"></xref> with all the query parameters applied.
  example: []
  syntax:
    content: 'public static IQueryable<T> GetIQueryable<T>(this QueryParameter<T> parameter, IQueryable<T> queryable) where T : class'
    parameters:
    - id: parameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    - id: queryable
      type: System.Linq.IQueryable{{T}}
      description: The queryable.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.IQueryable{{T}}
      description: The filtered and sorted queryable.
    content.vb: Public Shared Function GetIQueryable(Of T As Class)(parameter As QueryParameter(Of T), queryable As IQueryable(Of T)) As IQueryable(Of T)
  overload: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable*
  nameWithType.vb: QueryParameterExtensions.GetIQueryable(Of T)(QueryParameter(Of T), IQueryable(Of T))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable(Of T)(Innova.Data.Entity.QueryParameter(Of T), System.Linq.IQueryable(Of T))
  name.vb: GetIQueryable(Of T)(QueryParameter(Of T), IQueryable(Of T))
- uid: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery``1(Innova.Data.Entity.QueryParameter{``0})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery``1(Innova.Data.Entity.QueryParameter{``0})
  id: HasValidSearchQuery``1(Innova.Data.Entity.QueryParameter{``0})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: HasValidSearchQuery<T>(QueryParameter<T>)
  nameWithType: QueryParameterExtensions.HasValidSearchQuery<T>(QueryParameter<T>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery<T>(Innova.Data.Entity.QueryParameter<T>)
  type: Method
  source:
    id: HasValidSearchQuery
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 121
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Checks if the query parameter has a valid search query.
  example: []
  syntax:
    content: 'public static bool HasValidSearchQuery<T>(this QueryParameter<T> queryParameter) where T : class'
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Boolean
      description: <code>true</code> if the query parameter has a valid search query; otherwise, <code>false</code>.
    content.vb: Public Shared Function HasValidSearchQuery(Of T As Class)(queryParameter As QueryParameter(Of T)) As Boolean
  overload: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery*
  nameWithType.vb: QueryParameterExtensions.HasValidSearchQuery(Of T)(QueryParameter(Of T))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery(Of T)(Innova.Data.Entity.QueryParameter(Of T))
  name.vb: HasValidSearchQuery(Of T)(QueryParameter(Of T))
- uid: Innova.Data.Entity.QueryParameterExtensions.AsString``1(Innova.Data.Entity.QueryParameter{``0})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.AsString``1(Innova.Data.Entity.QueryParameter{``0})
  id: AsString``1(Innova.Data.Entity.QueryParameter{``0})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: AsString<T>(QueryParameter<T>)
  nameWithType: QueryParameterExtensions.AsString<T>(QueryParameter<T>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.AsString<T>(Innova.Data.Entity.QueryParameter<T>)
  type: Method
  source:
    id: AsString
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 132
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Converts the query parameter to a string representation.
  example: []
  syntax:
    content: 'public static string AsString<T>(this QueryParameter<T> queryParameter) where T : class'
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.String
      description: The string representation of the query parameter.
    content.vb: Public Shared Function AsString(Of T As Class)(queryParameter As QueryParameter(Of T)) As String
  overload: Innova.Data.Entity.QueryParameterExtensions.AsString*
  nameWithType.vb: QueryParameterExtensions.AsString(Of T)(QueryParameter(Of T))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.AsString(Of T)(Innova.Data.Entity.QueryParameter(Of T))
  name.vb: AsString(Of T)(QueryParameter(Of T))
- uid: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey})
  id: SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: SetWhereByPrimaryKeys<T>(QueryParameter<T>, List<IPrimaryKey>)
  nameWithType: QueryParameterExtensions.SetWhereByPrimaryKeys<T>(QueryParameter<T>, List<IPrimaryKey>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys<T>(Innova.Data.Entity.QueryParameter<T>, System.Collections.Generic.List<Innova.Data.Entity.IPrimaryKey>)
  type: Method
  source:
    id: SetWhereByPrimaryKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 159
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Sets the where clause of the query parameter based on a list of primary keys.
  example: []
  syntax:
    content: 'public static void SetWhereByPrimaryKeys<T>(this QueryParameter<T> queryParameter, List<IPrimaryKey> keyList) where T : class'
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    - id: keyList
      type: System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey}
      description: The list of primary keys.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub SetWhereByPrimaryKeys(Of T As Class)(queryParameter As QueryParameter(Of T), keyList As List(Of IPrimaryKey))
  overload: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys*
  nameWithType.vb: QueryParameterExtensions.SetWhereByPrimaryKeys(Of T)(QueryParameter(Of T), List(Of IPrimaryKey))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys(Of T)(Innova.Data.Entity.QueryParameter(Of T), System.Collections.Generic.List(Of Innova.Data.Entity.IPrimaryKey))
  name.vb: SetWhereByPrimaryKeys(Of T)(QueryParameter(Of T), List(Of IPrimaryKey))
- uid: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0})
  id: GetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: GetWhereByPrimaryKeys<T>(QueryParameter<T>)
  nameWithType: QueryParameterExtensions.GetWhereByPrimaryKeys<T>(QueryParameter<T>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys<T>(Innova.Data.Entity.QueryParameter<T>)
  type: Method
  source:
    id: GetWhereByPrimaryKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 184
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Gets the where clause of the query parameter based on the primary keys.
  example: []
  syntax:
    content: 'public static Expression<Func<T, bool>> GetWhereByPrimaryKeys<T>(this QueryParameter<T> queryParameter) where T : class'
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: The where clause expression.
    content.vb: Public Shared Function GetWhereByPrimaryKeys(Of T As Class)(queryParameter As QueryParameter(Of T)) As Expression(Of Func(Of T, Boolean))
  overload: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys*
  nameWithType.vb: QueryParameterExtensions.GetWhereByPrimaryKeys(Of T)(QueryParameter(Of T))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys(Of T)(Innova.Data.Entity.QueryParameter(Of T))
  name.vb: GetWhereByPrimaryKeys(Of T)(QueryParameter(Of T))
- uid: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.IPrimaryKey)
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.IPrimaryKey)
  id: SetWhereByPrimaryKeys``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.IPrimaryKey)
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: SetWhereByPrimaryKeys<T>(QueryParameter<T>, IPrimaryKey)
  nameWithType: QueryParameterExtensions.SetWhereByPrimaryKeys<T>(QueryParameter<T>, IPrimaryKey)
  fullName: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys<T>(Innova.Data.Entity.QueryParameter<T>, Innova.Data.Entity.IPrimaryKey)
  type: Method
  source:
    id: SetWhereByPrimaryKeys
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 212
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Sets the where clause of the query parameter based on a single primary key.
  example: []
  syntax:
    content: 'public static void SetWhereByPrimaryKeys<T>(this QueryParameter<T> queryParameter, IPrimaryKey keys) where T : class'
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    - id: keys
      type: Innova.Data.Entity.IPrimaryKey
      description: The primary key.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub SetWhereByPrimaryKeys(Of T As Class)(queryParameter As QueryParameter(Of T), keys As IPrimaryKey)
  overload: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys*
  nameWithType.vb: QueryParameterExtensions.SetWhereByPrimaryKeys(Of T)(QueryParameter(Of T), IPrimaryKey)
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys(Of T)(Innova.Data.Entity.QueryParameter(Of T), Innova.Data.Entity.IPrimaryKey)
  name.vb: SetWhereByPrimaryKeys(Of T)(QueryParameter(Of T), IPrimaryKey)
- uid: Innova.Data.Entity.QueryParameterExtensions.CopyTo``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.QueryParameter{``0})
  commentId: M:Innova.Data.Entity.QueryParameterExtensions.CopyTo``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.QueryParameter{``0})
  id: CopyTo``1(Innova.Data.Entity.QueryParameter{``0},Innova.Data.Entity.QueryParameter{``0})
  isExtensionMethod: true
  parent: Innova.Data.Entity.QueryParameterExtensions
  langs:
  - csharp
  - vb
  name: CopyTo<T>(QueryParameter<T>, QueryParameter<T>)
  nameWithType: QueryParameterExtensions.CopyTo<T>(QueryParameter<T>, QueryParameter<T>)
  fullName: Innova.Data.Entity.QueryParameterExtensions.CopyTo<T>(Innova.Data.Entity.QueryParameter<T>, Innova.Data.Entity.QueryParameter<T>)
  type: Method
  source:
    id: CopyTo
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\Entity\QueryParameterExtensions.cs
    startLine: 224
  assemblies:
  - Innova.Data
  namespace: Innova.Data.Entity
  summary: Copies the query parameter to another query parameter.
  example: []
  syntax:
    content: 'public static void CopyTo<T>(this QueryParameter<T> queryParameter, QueryParameter<T> destinationQueryParameter) where T : class'
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The source query parameter.
    - id: destinationQueryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The destination query parameter.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Shared Sub CopyTo(Of T As Class)(queryParameter As QueryParameter(Of T), destinationQueryParameter As QueryParameter(Of T))
  overload: Innova.Data.Entity.QueryParameterExtensions.CopyTo*
  nameWithType.vb: QueryParameterExtensions.CopyTo(Of T)(QueryParameter(Of T), QueryParameter(Of T))
  fullName.vb: Innova.Data.Entity.QueryParameterExtensions.CopyTo(Of T)(Innova.Data.Entity.QueryParameter(Of T), Innova.Data.Entity.QueryParameter(Of T))
  name.vb: CopyTo(Of T)(QueryParameter(Of T), QueryParameter(Of T))
references:
- uid: Innova.Data.Entity.QueryParameter`1
  commentId: T:Innova.Data.Entity.QueryParameter`1
  href: Innova.Data.Entity.QueryParameter-1.html
  name: QueryParameter<T>
  nameWithType: QueryParameter<T>
  fullName: Innova.Data.Entity.QueryParameter<T>
  nameWithType.vb: QueryParameter(Of T)
  fullName.vb: Innova.Data.Entity.QueryParameter(Of T)
  name.vb: QueryParameter(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable
  href: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable.html#Innova_Data_Entity_QueryParameterExtensions_GetOnlyWhereIQueryable__1_Innova_Data_Entity_QueryParameter___0__System_Linq_IQueryable___0__
  name: GetOnlyWhereIQueryable
  nameWithType: QueryParameterExtensions.GetOnlyWhereIQueryable
  fullName: Innova.Data.Entity.QueryParameterExtensions.GetOnlyWhereIQueryable
- uid: Innova.Data.Entity.QueryParameter{{T}}
  commentId: T:Innova.Data.Entity.QueryParameter{`0}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.QueryParameter`1
  href: Innova.Data.Entity.QueryParameter-1.html
  name: QueryParameter<T>
  nameWithType: QueryParameter<T>
  fullName: Innova.Data.Entity.QueryParameter<T>
  nameWithType.vb: QueryParameter(Of T)
  fullName.vb: Innova.Data.Entity.QueryParameter(Of T)
  name.vb: QueryParameter(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq.IQueryable{{T}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.GetIQueryable
  href: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable.html#Innova_Data_Entity_QueryParameterExtensions_GetIQueryable__1_Innova_Data_Entity_QueryParameter___0__System_Linq_IQueryable___0__
  name: GetIQueryable
  nameWithType: QueryParameterExtensions.GetIQueryable
  fullName: Innova.Data.Entity.QueryParameterExtensions.GetIQueryable
- uid: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery
  href: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery.html#Innova_Data_Entity_QueryParameterExtensions_HasValidSearchQuery__1_Innova_Data_Entity_QueryParameter___0__
  name: HasValidSearchQuery
  nameWithType: QueryParameterExtensions.HasValidSearchQuery
  fullName: Innova.Data.Entity.QueryParameterExtensions.HasValidSearchQuery
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innova.Data.Entity.QueryParameterExtensions.AsString*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.AsString
  href: Innova.Data.Entity.QueryParameterExtensions.AsString.html#Innova_Data_Entity_QueryParameterExtensions_AsString__1_Innova_Data_Entity_QueryParameter___0__
  name: AsString
  nameWithType: QueryParameterExtensions.AsString
  fullName: Innova.Data.Entity.QueryParameterExtensions.AsString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys
  href: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys.html#Innova_Data_Entity_QueryParameterExtensions_SetWhereByPrimaryKeys__1_Innova_Data_Entity_QueryParameter___0__System_Collections_Generic_List_Innova_Data_Entity_IPrimaryKey__
  name: SetWhereByPrimaryKeys
  nameWithType: QueryParameterExtensions.SetWhereByPrimaryKeys
  fullName: Innova.Data.Entity.QueryParameterExtensions.SetWhereByPrimaryKeys
- uid: System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey}
  commentId: T:System.Collections.Generic.List{Innova.Data.Entity.IPrimaryKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IPrimaryKey>
  nameWithType: List<IPrimaryKey>
  fullName: System.Collections.Generic.List<Innova.Data.Entity.IPrimaryKey>
  nameWithType.vb: List(Of IPrimaryKey)
  fullName.vb: System.Collections.Generic.List(Of Innova.Data.Entity.IPrimaryKey)
  name.vb: List(Of IPrimaryKey)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Innova.Data.Entity.IPrimaryKey
    name: IPrimaryKey
    href: Innova.Data.Entity.IPrimaryKey.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.Entity.IPrimaryKey
    name: IPrimaryKey
    href: Innova.Data.Entity.IPrimaryKey.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys
  href: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys.html#Innova_Data_Entity_QueryParameterExtensions_GetWhereByPrimaryKeys__1_Innova_Data_Entity_QueryParameter___0__
  name: GetWhereByPrimaryKeys
  nameWithType: QueryParameterExtensions.GetWhereByPrimaryKeys
  fullName: Innova.Data.Entity.QueryParameterExtensions.GetWhereByPrimaryKeys
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, bool>>
  nameWithType: Expression<Func<T, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, bool>>
  nameWithType.vb: Expression(Of Func(Of T, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean))
  name.vb: Expression(Of Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Innova.Data.Entity.IPrimaryKey
  commentId: T:Innova.Data.Entity.IPrimaryKey
  parent: Innova.Data.Entity
  href: Innova.Data.Entity.IPrimaryKey.html
  name: IPrimaryKey
  nameWithType: IPrimaryKey
  fullName: Innova.Data.Entity.IPrimaryKey
- uid: Innova.Data.Entity.QueryParameterExtensions.CopyTo*
  commentId: Overload:Innova.Data.Entity.QueryParameterExtensions.CopyTo
  href: Innova.Data.Entity.QueryParameterExtensions.CopyTo.html#Innova_Data_Entity_QueryParameterExtensions_CopyTo__1_Innova_Data_Entity_QueryParameter___0__Innova_Data_Entity_QueryParameter___0__
  name: CopyTo
  nameWithType: QueryParameterExtensions.CopyTo
  fullName: Innova.Data.Entity.QueryParameterExtensions.CopyTo
memberLayout: SeparatePages
