### YamlMime:ManagedReference
items:
- uid: Innova.Data.StructuredSearch.EntityQueryExtensions
  commentId: T:Innova.Data.StructuredSearch.EntityQueryExtensions
  id: EntityQueryExtensions
  parent: Innova.Data.StructuredSearch
  children:
  - Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  langs:
  - csharp
  - vb
  name: EntityQueryExtensions
  nameWithType: EntityQueryExtensions
  fullName: Innova.Data.StructuredSearch.EntityQueryExtensions
  type: Class
  source:
    id: EntityQueryExtensions
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQueryExtensions.cs
    startLine: 7
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Provides extension methods for <xref href="Innova.Data.StructuredSearch.EntityQuery%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class EntityQueryExtensions
    content.vb: Public Module EntityQueryExtensions
  inheritance:
  - System.Object
- uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  commentId: M:Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  id: GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  isExtensionMethod: true
  parent: Innova.Data.StructuredSearch.EntityQueryExtensions
  langs:
  - csharp
  - vb
  name: GetFriendlyQuerystring<T>(EntityQuery<T>)
  nameWithType: EntityQueryExtensions.GetFriendlyQuerystring<T>(EntityQuery<T>)
  fullName: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring<T>(Innova.Data.StructuredSearch.EntityQuery<T>)
  type: Method
  source:
    id: GetFriendlyQuerystring
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQueryExtensions.cs
    startLine: 15
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Gets the friendly query string representation of the <xref href="Innova.Data.StructuredSearch.EntityQuery%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static string GetFriendlyQuerystring<T>(this EntityQuery<T> entityQuery) where T : class'
    parameters:
    - id: entityQuery
      type: Innova.Data.StructuredSearch.EntityQuery{{T}}
      description: The entity query.
    typeParameters:
    - id: T
      description: The type of the entity.
    return:
      type: System.String
      description: The friendly query string.
    content.vb: Public Shared Function GetFriendlyQuerystring(Of T As Class)(entityQuery As EntityQuery(Of T)) As String
  overload: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring*
  nameWithType.vb: EntityQueryExtensions.GetFriendlyQuerystring(Of T)(EntityQuery(Of T))
  fullName.vb: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring(Of T)(Innova.Data.StructuredSearch.EntityQuery(Of T))
  name.vb: GetFriendlyQuerystring(Of T)(EntityQuery(Of T))
references:
- uid: Innova.Data.StructuredSearch.EntityQuery`1
  commentId: T:Innova.Data.StructuredSearch.EntityQuery`1
  href: Innova.Data.StructuredSearch.EntityQuery-1.html
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.StructuredSearch
  commentId: N:Innova.Data.StructuredSearch
  href: Innova.html
  name: Innova.Data.StructuredSearch
  nameWithType: Innova.Data.StructuredSearch
  fullName: Innova.Data.StructuredSearch
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring*
  commentId: Overload:Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring
  href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  name: GetFriendlyQuerystring
  nameWithType: EntityQueryExtensions.GetFriendlyQuerystring
  fullName: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring
- uid: Innova.Data.StructuredSearch.EntityQuery{{T}}
  commentId: T:Innova.Data.StructuredSearch.EntityQuery{``0}
  parent: Innova.Data.StructuredSearch
  definition: Innova.Data.StructuredSearch.EntityQuery`1
  href: Innova.Data.StructuredSearch.EntityQuery-1.html
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
memberLayout: SeparatePages
