### YamlMime:ManagedReference
items:
- uid: Innova.Data.StructuredSearch.EntityQuery`1
  commentId: T:Innova.Data.StructuredSearch.EntityQuery`1
  id: EntityQuery`1
  parent: Innova.Data.StructuredSearch
  children:
  - Innova.Data.StructuredSearch.EntityQuery`1.#ctor(Innova.Data.Entity.IPrimaryKey)
  - Innova.Data.StructuredSearch.EntityQuery`1.#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator})
  - Innova.Data.StructuredSearch.EntityQuery`1.#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator},Innova.Data.StructuredSearch.LogicalOperator)
  - Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter
  - Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter(Innova.Data.Entity.QueryParameter{`0})
  - Innova.Data.StructuredSearch.EntityQuery`1.SetOperatorsByPrimaryKey
  - Innova.Data.StructuredSearch.EntityQuery`1.Title
  langs:
  - csharp
  - vb
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>
  type: Class
  source:
    id: EntityQuery
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 16
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Represents a query for searching entities of type T.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class EntityQuery<T> : SearchQuery, ICloneable where T : class
    typeParameters:
    - id: T
      description: The type of entity.
    content.vb: >-
      <DataContract>

      Public Class EntityQuery(Of T As Class) Inherits SearchQuery Implements ICloneable
  inheritance:
  - System.Object
  - Innova.Data.StructuredSearch.SearchQuery
  implements:
  - System.ICloneable
  inheritedMembers:
  - Innova.Data.StructuredSearch.SearchQuery.SearchOperators
  - Innova.Data.StructuredSearch.SearchQuery.LogicalOperator
  - Innova.Data.StructuredSearch.SearchQuery.MaxResultCount
  - Innova.Data.StructuredSearch.SearchQuery.Clone
  - Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters
  extensionMethods:
  - Innova.Data.StructuredSearch.EntityQuery`1.Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1
  - Innova.Data.StructuredSearch.SearchQuery.Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
- uid: Innova.Data.StructuredSearch.EntityQuery`1.Title
  commentId: P:Innova.Data.StructuredSearch.EntityQuery`1.Title
  id: Title
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: EntityQuery<T>.Title
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.Title
  type: Property
  source:
    id: Title
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 22
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Gets or sets the title of the query.
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Innova.Data.StructuredSearch.EntityQuery`1.Title*
  nameWithType.vb: EntityQuery(Of T).Title
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).Title
- uid: Innova.Data.StructuredSearch.EntityQuery`1.#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator})
  commentId: M:Innova.Data.StructuredSearch.EntityQuery`1.#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator})
  id: '#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator})'
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: EntityQuery(List<Operator>)
  nameWithType: EntityQuery<T>.EntityQuery(List<Operator>)
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.EntityQuery(System.Collections.Generic.List<Innova.Data.StructuredSearch.Operator>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 28
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Initializes a new instance of the <xref href="Innova.Data.StructuredSearch.EntityQuery%601" data-throw-if-not-resolved="false"></xref> class with the specified operators.
  example: []
  syntax:
    content: public EntityQuery(List<Operator> operators)
    parameters:
    - id: operators
      type: System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator}
      description: The list of operators.
    content.vb: Public Sub New(operators As List(Of [Operator]))
  overload: Innova.Data.StructuredSearch.EntityQuery`1.#ctor*
  nameWithType.vb: EntityQuery(Of T).New(List(Of Operator))
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).New(System.Collections.Generic.List(Of Innova.Data.StructuredSearch.Operator))
  name.vb: New(List(Of Operator))
- uid: Innova.Data.StructuredSearch.EntityQuery`1.#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator},Innova.Data.StructuredSearch.LogicalOperator)
  commentId: M:Innova.Data.StructuredSearch.EntityQuery`1.#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator},Innova.Data.StructuredSearch.LogicalOperator)
  id: '#ctor(System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator},Innova.Data.StructuredSearch.LogicalOperator)'
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: EntityQuery(List<Operator>, LogicalOperator)
  nameWithType: EntityQuery<T>.EntityQuery(List<Operator>, LogicalOperator)
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.EntityQuery(System.Collections.Generic.List<Innova.Data.StructuredSearch.Operator>, Innova.Data.StructuredSearch.LogicalOperator)
  type: Constructor
  source:
    id: .ctor
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 38
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Initializes a new instance of the <xref href="Innova.Data.StructuredSearch.EntityQuery%601" data-throw-if-not-resolved="false"></xref> class with the specified operators and logical operator.
  example: []
  syntax:
    content: public EntityQuery(List<Operator> operators, LogicalOperator logicalOperator)
    parameters:
    - id: operators
      type: System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator}
      description: The list of operators.
    - id: logicalOperator
      type: Innova.Data.StructuredSearch.LogicalOperator
      description: The logical operator.
    content.vb: Public Sub New(operators As List(Of [Operator]), logicalOperator As LogicalOperator)
  overload: Innova.Data.StructuredSearch.EntityQuery`1.#ctor*
  nameWithType.vb: EntityQuery(Of T).New(List(Of Operator), LogicalOperator)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).New(System.Collections.Generic.List(Of Innova.Data.StructuredSearch.Operator), Innova.Data.StructuredSearch.LogicalOperator)
  name.vb: New(List(Of Operator), LogicalOperator)
- uid: Innova.Data.StructuredSearch.EntityQuery`1.#ctor(Innova.Data.Entity.IPrimaryKey)
  commentId: M:Innova.Data.StructuredSearch.EntityQuery`1.#ctor(Innova.Data.Entity.IPrimaryKey)
  id: '#ctor(Innova.Data.Entity.IPrimaryKey)'
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: EntityQuery(IPrimaryKey)
  nameWithType: EntityQuery<T>.EntityQuery(IPrimaryKey)
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.EntityQuery(Innova.Data.Entity.IPrimaryKey)
  type: Constructor
  source:
    id: .ctor
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 48
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Initializes a new instance of the <xref href="Innova.Data.StructuredSearch.EntityQuery%601" data-throw-if-not-resolved="false"></xref> class with the specified primary key.
  example: []
  syntax:
    content: public EntityQuery(IPrimaryKey key)
    parameters:
    - id: key
      type: Innova.Data.Entity.IPrimaryKey
      description: The primary key.
    content.vb: Public Sub New(key As IPrimaryKey)
  overload: Innova.Data.StructuredSearch.EntityQuery`1.#ctor*
  nameWithType.vb: EntityQuery(Of T).New(IPrimaryKey)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).New(Innova.Data.Entity.IPrimaryKey)
  name.vb: New(IPrimaryKey)
- uid: Innova.Data.StructuredSearch.EntityQuery`1.SetOperatorsByPrimaryKey
  commentId: M:Innova.Data.StructuredSearch.EntityQuery`1.SetOperatorsByPrimaryKey
  id: SetOperatorsByPrimaryKey
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: SetOperatorsByPrimaryKey()
  nameWithType: EntityQuery<T>.SetOperatorsByPrimaryKey()
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.SetOperatorsByPrimaryKey()
  type: Method
  source:
    id: SetOperatorsByPrimaryKey
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 64
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Sets the operators based on the primary key.
  example: []
  syntax:
    content: public void SetOperatorsByPrimaryKey()
    content.vb: Public Sub SetOperatorsByPrimaryKey()
  overload: Innova.Data.StructuredSearch.EntityQuery`1.SetOperatorsByPrimaryKey*
  nameWithType.vb: EntityQuery(Of T).SetOperatorsByPrimaryKey()
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).SetOperatorsByPrimaryKey()
- uid: Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter(Innova.Data.Entity.QueryParameter{`0})
  commentId: M:Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter(Innova.Data.Entity.QueryParameter{`0})
  id: GetQueryParameter(Innova.Data.Entity.QueryParameter{`0})
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: GetQueryParameter(QueryParameter<T>)
  nameWithType: EntityQuery<T>.GetQueryParameter(QueryParameter<T>)
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.GetQueryParameter(Innova.Data.Entity.QueryParameter<T>)
  type: Method
  source:
    id: GetQueryParameter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 74
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Gets the query parameter with the specified query parameter.
  example: []
  syntax:
    content: public QueryParameter<T> GetQueryParameter(QueryParameter<T> queryParameter)
    parameters:
    - id: queryParameter
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    return:
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    content.vb: Public Function GetQueryParameter(queryParameter As QueryParameter(Of T)) As QueryParameter(Of T)
  overload: Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter*
  nameWithType.vb: EntityQuery(Of T).GetQueryParameter(QueryParameter(Of T))
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).GetQueryParameter(Innova.Data.Entity.QueryParameter(Of T))
  name.vb: GetQueryParameter(QueryParameter(Of T))
- uid: Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter
  commentId: M:Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter
  id: GetQueryParameter
  parent: Innova.Data.StructuredSearch.EntityQuery`1
  langs:
  - csharp
  - vb
  name: GetQueryParameter()
  nameWithType: EntityQuery<T>.GetQueryParameter()
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.GetQueryParameter()
  type: Method
  source:
    id: GetQueryParameter
    path: C:\Source\Workspaces\Workspace\Innova Frameworks\IDP\src\Innova.Data\StructuredSearch\EntitySearch\EntityQuery.cs
    startLine: 92
  assemblies:
  - Innova.Data
  namespace: Innova.Data.StructuredSearch
  summary: Gets the query parameter.
  example: []
  syntax:
    content: public QueryParameter<T> GetQueryParameter()
    return:
      type: Innova.Data.Entity.QueryParameter{{T}}
      description: The query parameter.
    content.vb: Public Function GetQueryParameter() As QueryParameter(Of T)
  overload: Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter*
  nameWithType.vb: EntityQuery(Of T).GetQueryParameter()
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).GetQueryParameter()
references:
- uid: Innova.Data.StructuredSearch
  commentId: N:Innova.Data.StructuredSearch
  href: Innova.html
  name: Innova.Data.StructuredSearch
  nameWithType: Innova.Data.StructuredSearch
  fullName: Innova.Data.StructuredSearch
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.StructuredSearch
    name: StructuredSearch
    href: Innova.Data.StructuredSearch.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innova.Data.StructuredSearch.SearchQuery
  commentId: T:Innova.Data.StructuredSearch.SearchQuery
  parent: Innova.Data.StructuredSearch
  href: Innova.Data.StructuredSearch.SearchQuery.html
  name: SearchQuery
  nameWithType: SearchQuery
  fullName: Innova.Data.StructuredSearch.SearchQuery
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: Innova.Data.StructuredSearch.SearchQuery.SearchOperators
  commentId: P:Innova.Data.StructuredSearch.SearchQuery.SearchOperators
  parent: Innova.Data.StructuredSearch.SearchQuery
  href: Innova.Data.StructuredSearch.SearchQuery.SearchOperators.html#Innova_Data_StructuredSearch_SearchQuery_SearchOperators
  name: SearchOperators
  nameWithType: SearchQuery.SearchOperators
  fullName: Innova.Data.StructuredSearch.SearchQuery.SearchOperators
- uid: Innova.Data.StructuredSearch.SearchQuery.LogicalOperator
  commentId: P:Innova.Data.StructuredSearch.SearchQuery.LogicalOperator
  parent: Innova.Data.StructuredSearch.SearchQuery
  href: Innova.Data.StructuredSearch.SearchQuery.LogicalOperator.html#Innova_Data_StructuredSearch_SearchQuery_LogicalOperator
  name: LogicalOperator
  nameWithType: SearchQuery.LogicalOperator
  fullName: Innova.Data.StructuredSearch.SearchQuery.LogicalOperator
- uid: Innova.Data.StructuredSearch.SearchQuery.MaxResultCount
  commentId: P:Innova.Data.StructuredSearch.SearchQuery.MaxResultCount
  parent: Innova.Data.StructuredSearch.SearchQuery
  href: Innova.Data.StructuredSearch.SearchQuery.MaxResultCount.html#Innova_Data_StructuredSearch_SearchQuery_MaxResultCount
  name: MaxResultCount
  nameWithType: SearchQuery.MaxResultCount
  fullName: Innova.Data.StructuredSearch.SearchQuery.MaxResultCount
- uid: Innova.Data.StructuredSearch.SearchQuery.Clone
  commentId: M:Innova.Data.StructuredSearch.SearchQuery.Clone
  parent: Innova.Data.StructuredSearch.SearchQuery
  href: Innova.Data.StructuredSearch.SearchQuery.Clone.html#Innova_Data_StructuredSearch_SearchQuery_Clone
  name: Clone()
  nameWithType: SearchQuery.Clone()
  fullName: Innova.Data.StructuredSearch.SearchQuery.Clone()
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.SearchQuery.Clone
    name: Clone
    href: Innova.Data.StructuredSearch.SearchQuery.Clone.html#Innova_Data_StructuredSearch_SearchQuery_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: Innova.Data.StructuredSearch.SearchQuery.Clone
    name: Clone
    href: Innova.Data.StructuredSearch.SearchQuery.Clone.html#Innova_Data_StructuredSearch_SearchQuery_Clone
  - name: (
  - name: )
- uid: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters
  commentId: M:Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters
  parent: Innova.Data.StructuredSearch.SearchQuery
  href: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters.html#Innova_Data_StructuredSearch_SearchQuery_EnsureUniqueParameters
  name: EnsureUniqueParameters()
  nameWithType: SearchQuery.EnsureUniqueParameters()
  fullName: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters()
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters
    name: EnsureUniqueParameters
    href: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters.html#Innova_Data_StructuredSearch_SearchQuery_EnsureUniqueParameters
  - name: (
  - name: )
  spec.vb:
  - uid: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters
    name: EnsureUniqueParameters
    href: Innova.Data.StructuredSearch.SearchQuery.EnsureUniqueParameters.html#Innova_Data_StructuredSearch_SearchQuery_EnsureUniqueParameters
  - name: (
  - name: )
- uid: Innova.Data.StructuredSearch.EntityQuery`1.Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1
  commentId: M:Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  parent: Innova.Data.StructuredSearch.EntityQueryExtensions
  definition: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  name: GetFriendlyQuerystring<T>(EntityQuery<T>)
  nameWithType: EntityQueryExtensions.GetFriendlyQuerystring<T>(EntityQuery<T>)
  fullName: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring<T>(Innova.Data.StructuredSearch.EntityQuery<T>)
  nameWithType.vb: EntityQueryExtensions.GetFriendlyQuerystring(Of T)(EntityQuery(Of T))
  fullName.vb: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring(Of T)(Innova.Data.StructuredSearch.EntityQuery(Of T))
  name.vb: GetFriendlyQuerystring(Of T)(EntityQuery(Of T))
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{`0})
    name: GetFriendlyQuerystring
    href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{`0})
    name: GetFriendlyQuerystring
    href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Data.StructuredSearch.SearchQuery.Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1
  commentId: M:Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
  parent: Innova.Data.StructuredSearch.SearchQueryExtensions
  definition: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
  href: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression.html#Innova_Data_StructuredSearch_SearchQueryExtensions_GetWhereExpression__1_Innova_Data_StructuredSearch_SearchQuery_
  name: GetWhereExpression<T>(SearchQuery)
  nameWithType: SearchQueryExtensions.GetWhereExpression<T>(SearchQuery)
  fullName: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression<T>(Innova.Data.StructuredSearch.SearchQuery)
  nameWithType.vb: SearchQueryExtensions.GetWhereExpression(Of T)(SearchQuery)
  fullName.vb: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression(Of T)(Innova.Data.StructuredSearch.SearchQuery)
  name.vb: GetWhereExpression(Of T)(SearchQuery)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
    name: GetWhereExpression
    href: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression.html#Innova_Data_StructuredSearch_SearchQueryExtensions_GetWhereExpression__1_Innova_Data_StructuredSearch_SearchQuery_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innova.Data.StructuredSearch.SearchQuery
    name: SearchQuery
    href: Innova.Data.StructuredSearch.SearchQuery.html
  - name: )
  spec.vb:
  - uid: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
    name: GetWhereExpression
    href: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression.html#Innova_Data_StructuredSearch_SearchQueryExtensions_GetWhereExpression__1_Innova_Data_StructuredSearch_SearchQuery_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innova.Data.StructuredSearch.SearchQuery
    name: SearchQuery
    href: Innova.Data.StructuredSearch.SearchQuery.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  commentId: M:Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
  href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  name: GetFriendlyQuerystring<T>(EntityQuery<T>)
  nameWithType: EntityQueryExtensions.GetFriendlyQuerystring<T>(EntityQuery<T>)
  fullName: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring<T>(Innova.Data.StructuredSearch.EntityQuery<T>)
  nameWithType.vb: EntityQueryExtensions.GetFriendlyQuerystring(Of T)(EntityQuery(Of T))
  fullName.vb: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring(Of T)(Innova.Data.StructuredSearch.EntityQuery(Of T))
  name.vb: GetFriendlyQuerystring(Of T)(EntityQuery(Of T))
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
    name: GetFriendlyQuerystring
    href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring``1(Innova.Data.StructuredSearch.EntityQuery{``0})
    name: GetFriendlyQuerystring
    href: Innova.Data.StructuredSearch.EntityQueryExtensions.GetFriendlyQuerystring.html#Innova_Data_StructuredSearch_EntityQueryExtensions_GetFriendlyQuerystring__1_Innova_Data_StructuredSearch_EntityQuery___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innova.Data.StructuredSearch.EntityQueryExtensions
  commentId: T:Innova.Data.StructuredSearch.EntityQueryExtensions
  parent: Innova.Data.StructuredSearch
  href: Innova.Data.StructuredSearch.EntityQueryExtensions.html
  name: EntityQueryExtensions
  nameWithType: EntityQueryExtensions
  fullName: Innova.Data.StructuredSearch.EntityQueryExtensions
- uid: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
  commentId: M:Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
  href: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression.html#Innova_Data_StructuredSearch_SearchQueryExtensions_GetWhereExpression__1_Innova_Data_StructuredSearch_SearchQuery_
  name: GetWhereExpression<T>(SearchQuery)
  nameWithType: SearchQueryExtensions.GetWhereExpression<T>(SearchQuery)
  fullName: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression<T>(Innova.Data.StructuredSearch.SearchQuery)
  nameWithType.vb: SearchQueryExtensions.GetWhereExpression(Of T)(SearchQuery)
  fullName.vb: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression(Of T)(Innova.Data.StructuredSearch.SearchQuery)
  name.vb: GetWhereExpression(Of T)(SearchQuery)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
    name: GetWhereExpression
    href: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression.html#Innova_Data_StructuredSearch_SearchQueryExtensions_GetWhereExpression__1_Innova_Data_StructuredSearch_SearchQuery_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innova.Data.StructuredSearch.SearchQuery
    name: SearchQuery
    href: Innova.Data.StructuredSearch.SearchQuery.html
  - name: )
  spec.vb:
  - uid: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression``1(Innova.Data.StructuredSearch.SearchQuery)
    name: GetWhereExpression
    href: Innova.Data.StructuredSearch.SearchQueryExtensions.GetWhereExpression.html#Innova_Data_StructuredSearch_SearchQueryExtensions_GetWhereExpression__1_Innova_Data_StructuredSearch_SearchQuery_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innova.Data.StructuredSearch.SearchQuery
    name: SearchQuery
    href: Innova.Data.StructuredSearch.SearchQuery.html
  - name: )
- uid: Innova.Data.StructuredSearch.SearchQueryExtensions
  commentId: T:Innova.Data.StructuredSearch.SearchQueryExtensions
  parent: Innova.Data.StructuredSearch
  href: Innova.Data.StructuredSearch.SearchQueryExtensions.html
  name: SearchQueryExtensions
  nameWithType: SearchQueryExtensions
  fullName: Innova.Data.StructuredSearch.SearchQueryExtensions
- uid: Innova.Data.StructuredSearch.EntityQuery`1.Title*
  commentId: Overload:Innova.Data.StructuredSearch.EntityQuery`1.Title
  href: Innova.Data.StructuredSearch.EntityQuery-1.Title.html#Innova_Data_StructuredSearch_EntityQuery_1_Title
  name: Title
  nameWithType: EntityQuery<T>.Title
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.Title
  nameWithType.vb: EntityQuery(Of T).Title
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innova.Data.StructuredSearch.EntityQuery`1
  commentId: T:Innova.Data.StructuredSearch.EntityQuery`1
  href: Innova.Data.StructuredSearch.EntityQuery-1.html
  name: EntityQuery<T>
  nameWithType: EntityQuery<T>
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>
  nameWithType.vb: EntityQuery(Of T)
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T)
  name.vb: EntityQuery(Of T)
  spec.csharp:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.StructuredSearch.EntityQuery`1
    name: EntityQuery
    href: Innova.Data.StructuredSearch.EntityQuery-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.StructuredSearch.EntityQuery`1.#ctor*
  commentId: Overload:Innova.Data.StructuredSearch.EntityQuery`1.#ctor
  href: Innova.Data.StructuredSearch.EntityQuery-1.-ctor.html#Innova_Data_StructuredSearch_EntityQuery_1__ctor_System_Collections_Generic_List_Innova_Data_StructuredSearch_Operator__
  name: EntityQuery
  nameWithType: EntityQuery<T>.EntityQuery
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.EntityQuery
  nameWithType.vb: EntityQuery(Of T).New
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).New
  name.vb: New
- uid: System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator}
  commentId: T:System.Collections.Generic.List{Innova.Data.StructuredSearch.Operator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Operator>
  nameWithType: List<Operator>
  fullName: System.Collections.Generic.List<Innova.Data.StructuredSearch.Operator>
  nameWithType.vb: List(Of Operator)
  fullName.vb: System.Collections.Generic.List(Of Innova.Data.StructuredSearch.Operator)
  name.vb: List(Of Operator)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Innova.Data.StructuredSearch.Operator
    name: Operator
    href: Innova.Data.StructuredSearch.Operator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innova.Data.StructuredSearch.Operator
    name: Operator
    href: Innova.Data.StructuredSearch.Operator.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innova.Data.StructuredSearch.LogicalOperator
  commentId: T:Innova.Data.StructuredSearch.LogicalOperator
  parent: Innova.Data.StructuredSearch
  href: Innova.Data.StructuredSearch.LogicalOperator.html
  name: LogicalOperator
  nameWithType: LogicalOperator
  fullName: Innova.Data.StructuredSearch.LogicalOperator
- uid: Innova.Data.Entity.IPrimaryKey
  commentId: T:Innova.Data.Entity.IPrimaryKey
  parent: Innova.Data.Entity
  href: Innova.Data.Entity.IPrimaryKey.html
  name: IPrimaryKey
  nameWithType: IPrimaryKey
  fullName: Innova.Data.Entity.IPrimaryKey
- uid: Innova.Data.Entity
  commentId: N:Innova.Data.Entity
  href: Innova.html
  name: Innova.Data.Entity
  nameWithType: Innova.Data.Entity
  fullName: Innova.Data.Entity
  spec.csharp:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
  spec.vb:
  - uid: Innova
    name: Innova
    href: Innova.html
  - name: .
  - uid: Innova.Data
    name: Data
    href: Innova.Data.html
  - name: .
  - uid: Innova.Data.Entity
    name: Entity
    href: Innova.Data.Entity.html
- uid: Innova.Data.StructuredSearch.EntityQuery`1.SetOperatorsByPrimaryKey*
  commentId: Overload:Innova.Data.StructuredSearch.EntityQuery`1.SetOperatorsByPrimaryKey
  href: Innova.Data.StructuredSearch.EntityQuery-1.SetOperatorsByPrimaryKey.html#Innova_Data_StructuredSearch_EntityQuery_1_SetOperatorsByPrimaryKey
  name: SetOperatorsByPrimaryKey
  nameWithType: EntityQuery<T>.SetOperatorsByPrimaryKey
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.SetOperatorsByPrimaryKey
  nameWithType.vb: EntityQuery(Of T).SetOperatorsByPrimaryKey
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).SetOperatorsByPrimaryKey
- uid: Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter*
  commentId: Overload:Innova.Data.StructuredSearch.EntityQuery`1.GetQueryParameter
  href: Innova.Data.StructuredSearch.EntityQuery-1.GetQueryParameter.html#Innova_Data_StructuredSearch_EntityQuery_1_GetQueryParameter_Innova_Data_Entity_QueryParameter__0__
  name: GetQueryParameter
  nameWithType: EntityQuery<T>.GetQueryParameter
  fullName: Innova.Data.StructuredSearch.EntityQuery<T>.GetQueryParameter
  nameWithType.vb: EntityQuery(Of T).GetQueryParameter
  fullName.vb: Innova.Data.StructuredSearch.EntityQuery(Of T).GetQueryParameter
- uid: Innova.Data.Entity.QueryParameter{{T}}
  commentId: T:Innova.Data.Entity.QueryParameter{`0}
  parent: Innova.Data.Entity
  definition: Innova.Data.Entity.QueryParameter`1
  href: Innova.Data.Entity.QueryParameter-1.html
  name: QueryParameter<T>
  nameWithType: QueryParameter<T>
  fullName: Innova.Data.Entity.QueryParameter<T>
  nameWithType.vb: QueryParameter(Of T)
  fullName.vb: Innova.Data.Entity.QueryParameter(Of T)
  name.vb: QueryParameter(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innova.Data.Entity.QueryParameter`1
  commentId: T:Innova.Data.Entity.QueryParameter`1
  href: Innova.Data.Entity.QueryParameter-1.html
  name: QueryParameter<T>
  nameWithType: QueryParameter<T>
  fullName: Innova.Data.Entity.QueryParameter<T>
  nameWithType.vb: QueryParameter(Of T)
  fullName.vb: Innova.Data.Entity.QueryParameter(Of T)
  name.vb: QueryParameter(Of T)
  spec.csharp:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innova.Data.Entity.QueryParameter`1
    name: QueryParameter
    href: Innova.Data.Entity.QueryParameter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
